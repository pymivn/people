<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The PyMiers</title><link href="http://pp.pymi.vn/" rel="alternate"></link><link href="http://pp.pymi.vn/feeds/all.atom.xml" rel="self"></link><id>http://pp.pymi.vn/</id><updated>2022-12-04T00:00:00+07:00</updated><entry><title>Làm an toàn thông tin cần học những gì?</title><link href="http://pp.pymi.vn/article/attt/" rel="alternate"></link><published>2022-12-04T00:00:00+07:00</published><updated>2022-12-04T00:00:00+07:00</updated><author><name>minix</name></author><id>tag:pp.pymi.vn,2022-12-04:/article/attt/</id><summary type="html">&lt;p&gt;Nhân ngày cuối tuần không đi hack do quên reg giải CTF nên ngồi tổng hợp lại góc nhìn 2 năm theo đuổi ngành "phá làng phá xóm để giúp cho làng xóm không bị đứa khác phá". Dù chưa có thành tựu gì nhiều nhưng chiến đấu cùng các …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nhân ngày cuối tuần không đi hack do quên reg giải CTF nên ngồi tổng hợp lại góc nhìn 2 năm theo đuổi ngành "phá làng phá xóm để giúp cho làng xóm không bị đứa khác phá". Dù chưa có thành tựu gì nhiều nhưng chiến đấu cùng các anh em PymiCTF giúp mình có dịp tìm được nhiều thứ hay ho. Sau đây là tóm tắt một số skill kỹ thuật mà một người trong ngành an toàn thông tin nên có.&lt;/p&gt;
&lt;h2&gt;Các kỹ năng trong ngành an toàn thông tin&lt;/h2&gt;
&lt;p&gt;Ngành an toàn thông tin được hiểu là ngành thực hiện các hình thức ngăn chặn, phát hiện, phòng ngừa việc truy cập, tiết lộ, chia sẻ, phát tán và sử dụng thông tin trái phép khi chưa được sự cho phép. Trong đó, an ninh mạng là một phần của ngành an toàn thông tin nhằm bảo vệ các thông tin trên hệ thống mạng khỏi sự xâm phạm, sử dụng trái phép, bảo vệ tính bí mật, toàn vẹn và khả dụng của thông tin.&lt;/p&gt;
&lt;p&gt;Ngành an toàn thông tin là một ngành rộng với đa dạng các lĩnh vực chuyên môn, mỗi chuyên ngành đều yêu cầu một bộ các kỹ năng chuyên sâu đa dạng và cần thời gian để có thể thực hiện thành thạo. Về khía cạnh kỹ thuật, ngành an toàn thông tin phân chia các kỹ năng như sau:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Penetration Testing: Kỹ năng kiểm thử xâm nhập, trong đó kiểm thử viên sẽ đánh giá toàn diện về bảo mật của hệ thống bằng cách sử dụng các kỹ thuật tấn công mà tin tặc thường sử dụng để kịp thời phát hiện nhiều lỗ hổng bảo mật trên hệ thống nhất có thể và đề xuất phương pháp giảm thiểu những nguy cơ do lỗ hổng đem lại.&lt;/li&gt;
&lt;li&gt;Digital Forensics: Kỹ năng điều tra kỹ thuật số, trong đó điều tra viên sẽ thực hiện thu thập các bằng chứng kỹ thuật số nhằm đảm bảo tính liên quan, minh bạch và hợp pháp của các chứng cứ số, bảo vệ tính toàn vẹn của chứng cứ trước khi đưa ra trước tòa án.&lt;/li&gt;
&lt;li&gt;Security Analysis: Kỹ năng phân tích bảo mật, trong đó các chuyên viên sẽ sử dụng kiến thức về phòng thủ và tấn công để phân tích dữ liệu thu được từ hệ thống thông tin, hạ tầng mạng, từ đó đưa ra những chuẩn đoán sớm về các dấu hiệu của một cuộc tấn công an ninh mạng và đưa ra phương án ngăn chặn.&lt;/li&gt;
&lt;li&gt;Malware Analysis: Kỹ năng phân tích cách hoạt động của các loại phần mềm độc hại, tìm kiếm các tạo tác mà các phần mềm này tạo ra trên hệ thống từ đó hiểu mục đích, chiến thuật mà đối tượng tấn công sử dụng khi xâm nhập vào hệ thống thông tin.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ngoài các nhóm kỹ năng trên, sẽ có các nhóm kỹ năng chuyên sâu và nâng cao hơn để hỗ trợ như:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binary Exploit: Khai thác lỗ hổng bảo mật trong các tập tin thực thi, thư viện, yêu cầu thực hiện phải có kiến thức chuyên sâu về hoạt động của phần cứng như CPU, thanh ghi, cách phân bổ bộ nhớ trong hệ điều hành, kiến trúc và cách hoạt động ở tầng nhân của từng hệ điều hành riêng biệt như Windows và Linux, biết về ngôn ngữ assembly&lt;/li&gt;
&lt;li&gt;Web Exploit: Khai thác lỗ hổng bảo mật trong ứng dụng web, yêu cầu người thực hiện phải có kiến thức về các ngôn ngữ lập trình ứng dụng web như PHP, Java, .NET, Python... và tận dụng các kiến thức này để phát hiện và khai thác thành công các lỗ hổng bảo mật có thể dùng để xâm nhập, trích xuất thông tin hoặc làm gián đoạn hệ thống thông qua các ứng dụng web này&lt;/li&gt;
&lt;li&gt;Reverse Engineering: Kỹ thuật dịch ngược sử dụng để phân tích hoạt động của các phần mềm, hiểu được nguyên lý hoạt động của chúng từ đó có thể thực hiện thay đổi nhằm chuyển đổi chức năng ban đầu của phần mềm.&lt;/li&gt;
&lt;li&gt;Open-source Intelligence: Tình báo nguồn mở là kỹ năng tìm kiếm thông tin trên mạng thông qua các công cụ mở như mạng xã hội, ứng dụng tìm kiếm để thu được thông tin về đối tượng dựa trên nhưng thông tin ban đầu được cung cấp.&lt;/li&gt;
&lt;li&gt;Cryptography: Kỹ năng triển khai thực hiện các thuật toán và phương pháp được sử dụng để mã hóa thông tin. Qua đó có thể giữ tính bí mật, toàn vẹn của thông tin trong qua trình truyền tải hoặc dùng để giải mã những thông tin được che giấu.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Học các kỹ năng này như thế nào?&lt;/h2&gt;
&lt;p&gt;Đối với một người chưa có kỹ năng gì về công nghệ thông tin thì trước tiên cần trang bị 3 thứ trước khi bắt đầu:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lập trình (Học Python ở Pymi giúp bạn tiết kiệm rất nhiều thời gian :v)&lt;/li&gt;
&lt;li&gt;Mạng căn bản (Hiểu mạng hoạt động như thế nào, VD: hiểu tại sao mạng chậm? do cá mập cắn hay do cái khác...)&lt;/li&gt;
&lt;li&gt;Kiến trúc máy tính và hệ điều hành (Thực ra cũng không cần biết nếu đi một số mảng như web security, nhưng biết thì sẽ biết cách tự tạo một mã khai thác sau này)
Sau khi đã có số kiến thức trên thì một số cách sau sẽ giúp nhanh tiến bộ:&lt;/li&gt;
&lt;li&gt;Chơi CTF (Có thể đọc bài sau &lt;a href="https://pp.pymi.vn/article/pymictf/"&gt;Ký sự một năm cướp giật (capture the flag)&lt;/a&gt; của anh hvnsweeting)&lt;/li&gt;
&lt;li&gt;Youtube, Twitch (Một số idol chia sẻ kiến thức miễn phí cho cộng đồng như nahamsec, ippsec...)&lt;/li&gt;
&lt;li&gt;Theo dõi các security researchers (các chuyên gia "thật sự" trong ngành như angelboy, kienman0war...)&lt;/li&gt;
&lt;li&gt;Tái hiện security bug sau đó tự khai thác (tự lập trình lại ứng dụng có tồn tại lỗi để phân tích, có thể sử dụng nguồn sau: &lt;a href="https://www.shiftleft.io/community-and-training/vulnerability-fix-database/home/"&gt;Shiftleft&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Thi chứng chỉ bảo mật như OSCP (nếu được tài trợ chứ học phí rất đắt)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Ngành an toàn thông tin rất rộng và phức tạp, một người có thể master một trong các kỹ năng trên là đã kinh khủng lắm rồi. Nhiều anh em hacker phải bỏ thời gian, công sức (không đi chơi với người yêu cuối tuần, thức xuyên đêm hacking) để có thể theo ngành. Ngoài ra nếu không vững ý chí thì còn có thể gia nhập Juventus nữa.&lt;/p&gt;
&lt;p&gt;H4CK F0r FUN 8U7 P3r51573NC3&lt;/p&gt;
&lt;p&gt;Hết.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="security"></category><category term="1337"></category><category term="attt"></category><category term="ctf"></category><category term="hacking"></category></entry><entry><title>Ký sự một năm cướp giật (capture the flag)</title><link href="http://pp.pymi.vn/article/pymictf/" rel="alternate"></link><published>2022-10-02T00:00:00+07:00</published><updated>2022-10-02T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2022-10-02:/article/pymictf/</id><summary type="html">&lt;p&gt;1 năm sau SNYK CTF 2021, team PyMi đã đứng top 10 Việt Nam trên ctftime.org, học được rất rất nhiều.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tháng 10 năm 2021, tình cờ tham gia SNYK CTF sau 1 tin quảng cáo dạo trên email, lập team sau vài ngày rồi cháy 24 giờ, &lt;a href="http://pp.pymi.vn/article/ctf/"&gt;đứng thứ 42 bảng xếp hạng SNYK.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kể từ ngày ấy, đều đặn mỗi 2 ngày cuối tuần, &lt;a href="https://ctftime.org/team/175619"&gt;team CTF PyMi&lt;/a&gt; đi chiến 36 giải lớn nhỏ.
Từ newbie với ước mơ nhỏ bé "chỉ cần giải được 1 bài", giờ đã trở thành "thi thoảng mới giải được 1 bài, còn toàn giải được 2 bài trở lên".&lt;/p&gt;
&lt;p&gt;Chơi CTF xong có một cảm giác thôi: sợ.
Sợ đến mức phải rút dây điện ra để không còn bị hack nữa.
Mọi sự an toàn đều chỉ là "ảo tưởng", đến cả &lt;a href="https://www.imdb.com/title/tt3774114/"&gt;chính phủ các cường quốc G7 còn bị
hack&lt;/a&gt;, thì mấy cái trang web lương lập trình viên 10 triệu lấy đâu ra mà còn.&lt;/p&gt;
&lt;p&gt;Bài viết chỉ nói tới phần kỹ thuật liên quan đến hacking, còn một phần khác đáng
sợ không kém là "social hacking" là nguyên nhân của hàng rổ vụ hack có thể tham khảo &lt;a href="https://www.theverge.com/2022/9/16/23356959/uber-hack-social-engineering-threats"&gt;trên in-tơ-nét&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ghost In The Wires" src="https://www.mitnicksecurity.com/hs-fs/hubfs/buy-ghost.png?width=448&amp;amp;name=buy-ghost.png"&gt;
&lt;center&gt;&lt;a href="https://www.mitnicksecurity.com/ghost-in-the-wires"&gt;Ghost In The Wires - cuốn sách về 1 hacker social-engineering số 1 thế giới&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Có một câu nói khá khó nghe nhưng nổi tiếng:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"There are two types of companies in the world: those that know they've been hacked and those that don't." - Misha Glenny&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(từ điển dịch: có 2 loại công ty trên thế giới: loại biết họ đã bị hack, và loại không biết).&lt;/p&gt;
&lt;p&gt;Dưới đây là những bài học cho lập trình viên làm web (NGHỀ NGUY HIỂM),
và những thành tựu, kinh nghiệm thu được từ chơi CTF trong suốt các ngày cuối tuần của 1 năm.&lt;/p&gt;
&lt;p&gt;PS: bài viết dưới góc độ một newbie trong ngành security.&lt;/p&gt;
&lt;h3&gt;Các bài PHẢI học cho web developer&lt;/h3&gt;
&lt;h4&gt;ĐÂY LÀ NGHỀ QUÁ NGUY HIỂM&lt;/h4&gt;
&lt;p&gt;Bước chân vào nghề lập trình web tưởng chỉ cần biết thiết kế DB theo 3 normalization form,
dùng cái DB SQL &amp;amp; NoSQL, dùng framework xịn nhất, hiểu kiến trúc MVC, biết pull docker về build rồi bật là đủ (ăn).
Nhưng nếu trong đầu không được trang bị đầy đủ kiến thức về security thì ngành làm web như một bãi mìn đầy kinh sợ.
Cụ thể hơn, nếu bạn đang làm lập trình web mà công ty không có training, và bạn
cũng không hiểu đầy đủ (HIỂU không phải CHỈ là biết nghĩa) những từ đáng sợ sau, thì khả năng 96.69 %, công ty bạn
thuộc loại 2. Mà thậm chí hiểu đủ, cũng không làm cho bạn miễn dịch với hack.&lt;/p&gt;
&lt;p&gt;Trường lớp học có thể dạy làm ra trang web, chạy được, đúng đủ tính năng,
những trang cá nhân này nếu có bị hack, cũng không có hậu quả lớn. Nhưng công ty,
muốn không bị hack, phải thực hiện nhiệm vụ training của mình, không làm tự chịu.&lt;/p&gt;
&lt;p&gt;Các nghề khác cũng đều có nguy cơ bị hack dù là DevOps hay sysadmin, nhưng web là phổ biến nhất.&lt;/p&gt;
&lt;h4&gt;Học có đủ vẫn bị hack như thường&lt;/h4&gt;
&lt;p&gt;Điển hình như năm 2021 lê thê tận sang 2022 vẫn còn, &lt;a href="https://en.wikipedia.org/wiki/Log4Shell"&gt;log4shell&lt;/a&gt; là từ khóa đáng sợ nhất cho các doanh nghiệp lớn, nhỏ (đều code bằng Java), khi thư viện log phổ biến nhất của Java "log4j" dính lỗi bảo mật cho phép hacker có thể "làm đủ trò".
Lỗi này của ai để đi đổ lỗi? dù có hiểu đủ các lỗi bảo mật phổ biến
nhất, thì một cái bug "nhỏ" trong thư viện quá phổ biến này cũng đủ san bằng một
công ty. (PS: các hacker thường không muốn "san bằng công ty" trừ khi quá ghét, mà muốn bí mật nằm vùng trong đó rồi hưởng lợi thì hơn).&lt;/p&gt;
&lt;h4&gt;Các lỗi bảo mật phổ biến nhất: SQLi, XSS, SSTI, Path Traversal, CSRF&lt;/h4&gt;
&lt;p&gt;Điều đáng sợ đầu tiên là hầu hết các lỗi bảo mật này đều được viết tắt, với
những chữ S, những chữ X, khiến cho chưa học thuộc từ khóa thì nhìn tên cũng đã sợ.&lt;/p&gt;
&lt;h5&gt;SQLi - SQL injection&lt;/h5&gt;
&lt;p&gt;Lỗi bảo mật phổ biến nhất thế giới từ 2005-2018 (số liệu chém gió mà chắc sẽ đúng), nguyên nhân
là do nối/format string mà không dùng ? hay %s đã ghi chú trong các thư viện xử lý SQL.&lt;/p&gt;
&lt;p&gt;Never do this -- insecure! (format SQL string)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RHAT&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SELECT * FROM stocks WHERE symbol = &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do this instead&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RHAT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SELECT * FROM stocks WHERE symbol=?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchone&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(trích tài liệu &lt;a href="https://docs.python.org/3.10/library/sqlite3.html#sqlite3-placeholders"&gt;python sqlite3&lt;/a&gt; - &lt;a href="https://www.psycopg.org/docs/usage.html#the-problem-with-the-query-parameters"&gt;postgres&lt;/a&gt; cũng có tài liệu tương tự, 2022 DB nào cũng có hết).&lt;/p&gt;
&lt;p&gt;Lỗ hổng này phổ biến tới mức công ty bảo mật hàng đầu cũng dính, tây cũng dính, tàu cũng dính,
để thấy dù đã sau hơn 15 năm lộng hành, ngành giáo dục thế giới vẫn chưa hoàn
thành nhiệm vụ. Lỗi này không từ ai, kể cả đại học, siêu học bằng cấp đầy mình mà ra,
đừng đổ tại học, vì học có dạy đâu mà biết.&lt;/p&gt;
&lt;h5&gt;SSTI - Server side template injection&lt;/h5&gt;
&lt;p&gt;Vẫn là "injection", tức nhét thêm 1 chút chút vào cái phần chính hợp lệ.&lt;/p&gt;
&lt;p&gt;Ở SQLi thì inject thêm 1 phần câu SQL, ở "command injection" thì thêm 1 vài
dấu &lt;code&gt;;rm -rf /&lt;/code&gt; đi kèm sau đầu vào được yêu cầu thì ở SSTI là thêm 1 chút (code)
vào chỗ mà phải nhập giá trị bình thường.&lt;/p&gt;
&lt;p&gt;SSTI là việc hacker nhập vào một đoạn code, mà khi server thực hiện
render template (như django template, hay Jinja2)
sẽ chạy đoạn code này trên server. Về cơ bản khi dùng các template engine đều
đã xử lý SSTI bằng cách escape các ký tự "bất thường", nhưng vẫn không ít khi
các giá trị lọt vào không qua đường template render mà xử lý ngay như string trên python.&lt;/p&gt;
&lt;p&gt;Ví dụ với fstring đầy uy lực theo &lt;a href="https://semgrep.dev/docs/cheat-sheets/flask-xss/"&gt;semgrep&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Bug:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;render_template_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/div&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Fix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;render_template_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;div&amp;gt;{{ name }}&amp;lt;/div&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;XSS - Cross Site Scripting&lt;/h5&gt;
&lt;p&gt;XSS thực sự khó hơn 2 cái lỗi trên đối với lập trình viên Python, bởi nó dùng JavaScript.
Nhưng ở mức khó bình thường, nên vẫn học được. Cơ chế cơ bản như sau:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trang web cho người dùng nhập vào (ví dụ username, info), và sau đó sẽ hiển thị giá trị đó ở 1 trang khác&lt;/li&gt;
&lt;li&gt;Hacker nhập vào đoạn code javascript, phổ biến nhất là &lt;code&gt;&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Khi người dùng khác, hay nguy hiểm hơn là admin đọc nội dung này, nó sẽ chạy đoạn code JavaScript hacker đưa vào
trên máy họ. Đoạn code JavaScript thì có thể làm đủ trò, đơn giản nhất là gửi cookie của người dùng tới một trang khác để đánh cắp cookie này. Hacker sau đó lấy cookie này đăng nhập vào tài khoản người dùng, chiếm quyền.
Nguy hiểm nhất khi người bị hack là admin -&amp;gt; xong, hết bài.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dùng framework cũng không miễn nhiễm với XSS. Ví dụ trang chủ của Flask:&lt;/p&gt;
&lt;p&gt;Bug:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/index/&amp;lt;msg&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello! &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;yes, sorry!!! nhưng nếu trang web lưu giá trị này lại và hiển thị ở 1 chỗ khác,
và người khác xem, thì nó đã đủ cơ chế để hacker thực hiện XSS bằng cách nhập
code JavaScript vào msg.&lt;/p&gt;
&lt;p&gt;Fix:&lt;/p&gt;
&lt;p&gt;chỉ return render_template() hay jsonify(), không return string trực tiếp.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.djangoproject.com/en/4.1/topics/security/#cross-site-scripting-xss-protection"&gt;Django doc&lt;/a&gt; có ví dụ khi trong template ghi&lt;/p&gt;
&lt;p&gt;Bug:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;var&lt;/span&gt; &lt;span class="err"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu hacker đưa được var với giá trị là &lt;code&gt;class1 onmouseover=javascript:func()&lt;/code&gt;
thì code javascript này vẫn được chạy.&lt;/p&gt;
&lt;p&gt;Fix: phải quote double quote -&amp;gt; &lt;code&gt;"{{ var }}"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hay với link - tham khảo thêm tại &lt;a href="https://flask.palletsprojects.com/en/2.2.x/security/#cross-site-scripting-xss"&gt;doc Flask&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Bug:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ value }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;click here&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hacker nhập vào render thành:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript:alert(&amp;#39;unsafe&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;click here&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Fix: phải set &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"&gt;CSP&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;CSRF - Cross Site Request Forgery&lt;/h5&gt;
&lt;p&gt;bài tập về nhà cho bạn đọc, tự học. PS tham khảo tại doc &lt;a href="https://docs.djangoproject.com/en/4.1/ref/csrf/"&gt;Django&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;JWT - JSON web tokens&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://pyjwt.readthedocs.io/en/latest/"&gt;JWT&lt;/a&gt; không phải lỗi bảo mật, nhưng hiểu đầy đủ về nó là quan trọng do việc sử
dụng phổ biến của công nghệ này trong authen.&lt;/p&gt;
&lt;h5&gt;Còn NHIỀU nữa&lt;/h5&gt;
&lt;p&gt;Xem nhiều các lỗi bảo mật phổ biến tại &lt;a href="https://owasp.org/www-project-top-ten/"&gt;OWASP&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Sysadmin, devops - command injection&lt;/h5&gt;
&lt;p&gt;Các tool bash/python của sysadmin thường dính lỗi "command injection" khi cho phép người dùng nhập 1 phần câu
lệnh vào để chạy&lt;/p&gt;
&lt;p&gt;Bug trên shell script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hacker nhập vào "hi; echo hello &amp;gt; hacked" là xong.&lt;/p&gt;
&lt;p&gt;Hay dùng Python &lt;a href="https://docs.python.org/3.10/library/subprocess.html#security-considerations"&gt;subprocess&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Bug:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Fix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echo hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dùng os.system tương đương trường hợp bug trên.&lt;/p&gt;
&lt;h3&gt;"Bóc phốt" những hiểu nhầm về CTF&lt;/h3&gt;
&lt;h4&gt;Phải rất "giỏi máy tính" mới chơi được, phải biết code&lt;/h4&gt;
&lt;p&gt;Giải CTF có giải khó giải dễ, có bài khó bài dễ, nhiều bài kéo đề vào tool là ra
kết quả, chưa kịp dùng não.
Nghề hack đã có từ ngày có máy tính, nên việc hack cũng có sẵn cả rổ tool để dùng,
vậy nên nhiều bài không cần phải code.
Có mục "OSINT", kỹ năng "tìm kiếm thông tin" cũng không cần dùng tới code,
giống như giải đố, tìm vị trí, tìm ai đó trên các trang mạng xã hội.
Tất nhiên để làm được nhiều bài khó hơn thì cần biết code if/for.&lt;/p&gt;
&lt;h4&gt;Chơi pwn (binary exploitation) hay rev (reverse engineering) phải biết đọc assembly như đọc tiếng mẹ đẻ&lt;/h4&gt;
&lt;p&gt;Tool rất quan trọng, và có nhiều tool rất xịn.
Các cầu thủ đá bóng đi toàn giày đinh loại cực xịn, các runner đi Nike airflow màu hồng phá kỷ lục thế giới,
các game thủ dùng bàn phím độ trễ siêu thấp, chuột có dăm ba nút phụ để combat cho nhanh, chả nghề nào chân trần phi vào quái thú để thất bại rồi ra nghĩa địa cả (trở về là còn tốt).&lt;/p&gt;
&lt;p&gt;Các pwn thủ, rev thủ toàn dùng &lt;a href="https://hex-rays.com/ida-pro/"&gt;IDA Pro&lt;/a&gt; bản trả tiền, &lt;a href="https://binary.ninja/"&gt;Ninja&lt;/a&gt; hàng xịn, bấm một nút là biến asm thành code C ngay (ahuhu vẫn phải đọc code C), hàng free như Ghidra hay radare2 nhiều khi không xịn bằng, chứ đừng nói tới dump code assembly rồi đọc chay.&lt;/p&gt;
&lt;h4&gt;Chơi crypto phải giỏi toán&lt;/h4&gt;
&lt;p&gt;Giỏi toán (mà phải đúng loại toán) đúng là có lợi, có thể giải nhiều bài khó,
nhưng crypto cũng có nhiều tool sẵn như &lt;a href="https://github.com/RsaCtfTool/RsaCtfTool"&gt;RSACTFtool&lt;/a&gt;, nhét đề vào viết thêm tí code là giải được cả mớ. Nhớ luyện hết theo &lt;a href="https://cryptohack.org/challenges/rsa/"&gt;CryptoHack&lt;/a&gt;, đọc cả blog vì có mấy lần đề KHÓ ra trúng &lt;a href="https://blog.cryptohack.org/twitter-secrets"&gt;bài blog trên cryptohack&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Toàn là code C, C++, Assembly&lt;/h4&gt;
&lt;p&gt;Mục pwn hay rev đa số là C/C++/asm, nhưng thi thoảng cũng có Python, Erlang, JavaScript.
Các mục khác (web/misc) sẽ chứa đủ loại ngôn ngữ chứ ít có C/C++/Asm.&lt;/p&gt;
&lt;h4&gt;top 10 ctftime.org là giỏi nhất&lt;/h4&gt;
&lt;p&gt;Đầu tiên là chuyện rất thú vị, 6 tháng đầu năm, top 10 là một bộ mặt khác hoàn toàn với
thời điểm đầu tháng 10 này. Cục diện thay đổi hoàn toàn, những top 10 vài tháng trước giờ
đã tụt xuống 20 30.&lt;/p&gt;
&lt;p&gt;Thứ hai, ctftime.org chỉ là phần nổi của tảng băng (rất chìm), đâu phải hacker nào cũng rảnh mà đi thi, còn đang bận hack cả thế giới. Riêng có giải &lt;a href="https://ctftime.org/event/1685"&gt;HTB Business&lt;/a&gt; mới thấy các team security của các công ty ló mặt.&lt;/p&gt;
&lt;h4&gt;Python Pickle vô dụng&lt;/h4&gt;
&lt;p&gt;Một loại bài gần như giải nào cũng có, là lỗi bảo mật liên quan đến pickle. Nếu chơi cho vui thì nghe cũng được,
nhưng thứ không bảo mật thế giờ còn ai dùng? tìm mỏi mắt còn không thấy, đầu tư thời gian vào pickle chỉ để chơi CTF,
không có tác dụng trong thực tế... cho đến khi thấy nó: Bottle - một web framework rất phổ biến của Python, vẫn
dùng pickle khi get cookie, &lt;a href="https://github.com/bottlepy/bottle/issues/900"&gt;issue mở từ 2016, vẫn chưa fix&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Những khó khăn&lt;/h3&gt;
&lt;h4&gt;Lịch chơi dày đặc&lt;/h4&gt;
&lt;p&gt;Bận rộn đi làm cả tuần, cuối tuần 2 ngày nghỉ lại chiến, tuần nào cũng thế, chưa
kịp ngấm giải này, học các kỹ thuật mới, thì đã tới giải khác. Chơi CTF có lẽ
là lý do blog này cả năm nay không có bài nào, không ai donate không phải là lý do =)&lt;/p&gt;
&lt;h4&gt;writeup delay&lt;/h4&gt;
&lt;p&gt;Các bài viết hướng dẫn (gọi là writeup) sau giải bị delay 1 tới vài tuần, do ban tổ chức thường
yêu cầu các top team viết rồi nộp để chứng minh mình không cheat. Và sau vài ba
tuần, thì đang bận chiến giải khác quên mất cả đề rồi.&lt;/p&gt;
&lt;h4&gt;pwn&lt;/h4&gt;
&lt;p&gt;Khó.&lt;/p&gt;
&lt;p&gt;Pwn thường hay chỉ "binary exploitation", với người code Python hay thậm chí $language
bất kỳ (trừ C/Assambly), thì đây là cả một thế giới hoàn toàn mới, mới tới mức
đọc hướng dẫn cho newbie vẫn không hiểu gì. Từ cấu trúc file binary cho tới cách
làm stack overflow.
Có giải của SamSung chỉ ngồi làm tut pwn trong đề cho hướng dẫn, rất hay và chi tiết.
Thò tay vào làm mà vẫn khó lên khó xuống với &lt;a href="https://n.pymi.vn/py3utf8.html"&gt;python2 và 3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Trong CTF kiểu Jeopady, web và pwn là hai mục có tính "hack" nhất.&lt;/p&gt;
&lt;h4&gt;Khó&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;0CTF&lt;/li&gt;
&lt;li&gt;3DCTF&lt;/li&gt;
&lt;li&gt;PPP&lt;/li&gt;
&lt;li&gt;DEFCON&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hai giải đầu của Trung Quốc, các hacker Trung Quốc thì khét tiếng khỏi nói rồi.
PPP top 1 ctftime.org nhiều năm. DEFCON lừng danh blackhat.&lt;/p&gt;
&lt;p&gt;Các giải này chỉ vào đọc đề rồi hì hục cả 2 ngày vẫn không ra gì. Sợ.&lt;/p&gt;
&lt;h3&gt;Mục tiêu kế tiếp&lt;/h3&gt;
&lt;p&gt;Sau năm đầu, cá nhân mình chơi tất cả các thể loại, từ misc, forensics qua crypto, tới
rev, sang web, thi thoảng đề dễ làm cả pwn hay chạy autopwn để tự giải.
Sang năm phấn đấu theo web và pwn cho nó thực chiến.&lt;/p&gt;
&lt;h3&gt;Bài học rút ra và hành động của chúng ta&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Biển học vô biên, bị điên thì học. Cứ ngỡ mình Python ngon ăn lắm, mà nhiều bài Pyjail (phá ra khỏi chương trình Python đã bị giới hạn các tính năng để chạy lệnh thoải mái - RCE) vẫn không giải được. Bước sang web hay binary thì
ôi thôi cả một chân trời mới. Lại newbie lại từ đầu.&lt;/li&gt;
&lt;li&gt;Kiểu &lt;a href="https://n.pymi.vn/byt351.html"&gt;byte&lt;/a&gt; ngày ngày đi code, 10 năm không bao giờ dùng thì đi chơi CTF giải nào cũng dùng.&lt;/li&gt;
&lt;li&gt;Khi đi code, hãy sử dụng các công cụ phát hiện lỗi bảo mật trong code như semgrep, bandit, snyk, ...&lt;/li&gt;
&lt;li&gt;Các công ty hãy cho nghỉ làm 1 ngày để các dev tự tập hack website của chính mình, training hand-on hack các lỗ hổng
bảo mật hay gặp nhất, lập team CTF chơi mục web hàng tuần.&lt;/li&gt;
&lt;li&gt;Team PyMi chơi ít giải đi, mà chất hơn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Bắt đầu từ đâu?&lt;/h3&gt;
&lt;p&gt;Tài liệu vô biên, search là ra cả đống, tham khảo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://n.pymi.vn/byt351.html"&gt;python cho hack với byte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pp.pymi.vn/article/ctf/"&gt;PyMi SNYK 2021 writeup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pymivn/ctf"&gt;repo của team CTF PyMi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Kết luận&lt;/h3&gt;
&lt;p&gt;Cám ơn các anh em team CTF PyMi đã cùng chiến đấu suốt 1 năm trời, nhiều anh em
vẫn còn chưa biết mặt. Hy vọng năm thứ 2 sẽ gặp nhau được ít nhất 1 lần, không thì cũng
2 lần trở lên.&lt;/p&gt;
&lt;p&gt;To another CTFking year.&lt;/p&gt;
&lt;p&gt;Hết.&lt;/p&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="ctf"></category><category term="hacking"></category><category term="python"></category><category term="security"></category><category term="pwn"></category><category term="rev"></category><category term="crypto"></category><category term="web"></category><category term="misc"></category><category term="forensics"></category></entry><entry><title>Chinh phục Advent of Code 2021 bằng Rust</title><link href="http://pp.pymi.vn/article/aoc2021/" rel="alternate"></link><published>2022-01-04T00:00:00+07:00</published><updated>2022-01-04T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2022-01-04:/article/aoc2021/</id><summary type="html">&lt;p&gt;chiến game coding hot nhất tháng 12 mỗi năm, bằng ngôn ngữ hot nhất trên các bảng xếp hạng: Rust.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Advent of code (viết tắt AoC) là một cuộc thi code hàng năm kéo dài suốt 25 ngày trong tháng 12.
Mỗi ngày, lúc 12h trưa giờ Việt Nam (UTC+7), một bài toán đố nhỏ gồm 2 phần dưới dạng
câu chuyện "giải cứu đêm noel" sẽ được mở. Người chơi giải được phần 1 mới được chơi phần 2, giải
xong mỗi phần sẽ nhận được 1 sao. 12 giờ trưa ngày 25/12 sẽ ra bài cuối cùng, chỉ có 1 phần,
người chơi đủ 49 sao sẽ được tặng 1 sao và kết thúc trò chơi.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lexico.com/definition/advent"&gt;Advent&lt;/a&gt; /ˈadvɛnt/ trong tiếng Anh nghĩa là&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first season of the Church year, leading up to Christmas and including the four preceding Sundays.&lt;/p&gt;
&lt;p&gt;(tôn giáo) kỳ trông đợi, mùa vọng (bốn tuần lễ trước ngày giáng sinh của Chúa) - theo &lt;a href="http://tratu.soha.vn/dict/en_vn/Advent"&gt;tratu.soha.vn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Trang web &lt;a href="https://adventofcode.com/"&gt;adventofcode.com&lt;/a&gt; được tạo bởi &lt;a href="http://was.tl/"&gt;Eric Wastl&lt;/a&gt;
xuất hiện lần đầu vào &lt;a href="https://adventofcode.com/2015"&gt;năm 2015&lt;/a&gt;, ngày càng phổ biến và được cộng đồng
lập trình viên toàn cầu mong chờ mỗi tháng 12.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=QUwxKWT6m7U"&gt;&lt;img alt="Back to December" src="https://img.youtube.com/vi/QUwxKWT6m7U/0.jpg"&gt;&lt;/a&gt;
&lt;center&gt;🎥 Taylor Swift - Back To December&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Để thêm phần gay cấn, AoC có &lt;a href="https://adventofcode.com/2021/leaderboard"&gt;bảng xếp hạng toàn cầu leaderboard&lt;/a&gt;, người giải đầu tiên mỗi phần sẽ được 100 điểm và giảm dần. Người chơi cũng có thể tự tạo bảng xếp hạng riêng,
giúp các cộng đồng có thể tự chơi với nhóm của mình. PyMi tổ chức AoC với giải
thưởng hấp dẫn từ 2020, bảng xếp hạng tại &lt;a href="https://adventofcode.com/2021/leaderboard/private"&gt;đây&lt;/a&gt; nhập mã  &lt;code&gt;416592-f7938347&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Trò chơi thu hút cả những lập trình viên nổi tiếng thế giới như:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://norvig.com/"&gt;Peter Norvig&lt;/a&gt; - giáo sư đầu ngành AI, giám đốc nghiên
cứu của Google. Năm 2020, &lt;a href="https://github.com/norvig/pytudes/blob/main/ipynb/Advent-2021.ipynb"&gt;2021&lt;/a&gt; giải gần như tất cả các bài bằng Python trong 1 file Jupyter Notebook.&lt;/li&gt;
&lt;li&gt;José Valim - tác giả ngôn ngữ lập trình &lt;a href="https://elixir-lang.org/"&gt;Elixir&lt;/a&gt;, &lt;a href="https://www.twitch.tv/collections/k_DLnk2tvBa-fQ"&gt;livestream trên twitch&lt;/a&gt; năm nay giải AoC với Elixir LiveBook (tương đương Jupyter Notebook).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/George_Hotz"&gt;geohot&lt;/a&gt; - hacker, người đầu tiên jailbreak iOS, hack PS3, ... https://www.youtube.com/watch?v=OxDp11u-GUo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mỗi người chơi đến với AdventOfCode có một lý do khác nhau: có người để đua top
giật giải, có người dùng để học ngôn ngữ lập trình mới, phương pháp lập trình
mới (như Test Drive Development - TDD), người dùng để giải trí, thoát khỏi công việc nhàm chán
hàng ngày, người lại dùng để "ôn tập hàng năm" các kiến thức cấu trúc dữ liệu giải thuật "căn bản"
từng học trên giấy mà 10 năm đi làm
chưa dùng bao giờ như thuật toán Dijkstra, Priority queue, binary tree...&lt;/p&gt;
&lt;p&gt;AoC có &lt;a href="https://www.reddit.com/r/adventofcode/"&gt;cộng đồng Reddit&lt;/a&gt; đông đảo với
hơn 30 nghìn thành viên, nơi chia sẻ code bài giải, những video
thực hiện hiển thị, game hóa bài toán/bài giải và nhiều điều hấp dẫn khác.&lt;/p&gt;
&lt;p&gt;Là một người chơi AoC lâu năm &lt;a href="https://github.com/hvnsweeting/adventofcode"&gt;từ 2018&lt;/a&gt;,
với 3 năm liền dùng Elixir, năm nay tôi quyết định chơi bằng Rust.&lt;/p&gt;
&lt;h2&gt;Rust - ngôn ngữ lập trình tham lam: Performance, Reliability, Productivity - chọn cả 3!&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Rust" src="https://www.rust-lang.org/logos/rust-logo-blk.svg"&gt;&lt;/p&gt;
&lt;p&gt;Ngôn ngữ hiện đại (từ 2010), &lt;a href="https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/"&gt;6 năm liền&lt;/a&gt;
được bình chọn là ngôn ngữ được &lt;a href="https://insights.stackoverflow.com/survey/2021#section-most-loved-dreaded-and-wanted-programming-scripting-and-markup-languages"&gt;yêu thích nhất theo khảo sát của StackOverflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Rust có thể dùng để thay cho:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++: &lt;a href="https://hacks.mozilla.org/2016/07/shipping-rust-in-firefox/"&gt;https://hacks.mozilla.org/2016/07/shipping-rust-in-firefox/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go: &lt;a href="https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f"&gt;https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python: &lt;a href="https://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine"&gt;https://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ruby: &lt;a href="https://deliveroo.engineering/2019/02/14/moving-from-ruby-to-rust.html"&gt;https://deliveroo.engineering/2019/02/14/moving-from-ruby-to-rust.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NodeJS: &lt;a href="https://www.rust-lang.org/static/pdfs/Rust-npm-Whitepaper.pdf"&gt;https://www.rust-lang.org/static/pdfs/Rust-npm-Whitepaper.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rust thường được dùng để thay C++, C, được chọn khi một phần của hệ
thống cần tốc độ tối đa. Rust luôn đứng top đầu về tốc độ trong các bảng xếp hạng
benchmark [&lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/box-plot-summary-charts.html"&gt;1&lt;/a&gt;] [&lt;a href="https://www.techempower.com/benchmarks/"&gt;2&lt;/a&gt;].&lt;/p&gt;
&lt;h3&gt;Các phần mềm phổ biến viết bằng Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/servo/servo"&gt;Servo&lt;/a&gt; browser engine trong trình duyệt FireFox&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep (rg)&lt;/a&gt; - thay cho grep command line, nhanh hơn, xịn hơn&lt;/li&gt;
&lt;li&gt;một phần của NodeJS npm: &lt;a href="https://www.rust-lang.org/static/pdfs/Rust-npm-Whitepaper.pdf"&gt;https://www.rust-lang.org/static/pdfs/Rust-npm-Whitepaper.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FireCracker VM (để chạy các container phía dưới AWS Lambda) &lt;a href="https://github.com/firecracker-microvm/firecracker"&gt;https://github.com/firecracker-microvm/firecracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Linux kernel hỗ trợ Rust bên cạnh C &lt;a href="https://lore.kernel.org/lkml/20211206140313.5653-1-ojeda@kernel.org/"&gt;https://lore.kernel.org/lkml/20211206140313.5653-1-ojeda@kernel.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bài viết sẽ giới thiệu vừa đủ các khái niệm của Rust đã dùng để chinh phục
50 bài toán đố của AoC 2021.&lt;/p&gt;
&lt;h3&gt;Cài đặt&lt;/h3&gt;
&lt;p&gt;Chạy lệnh ghi trên trang &lt;a href="https://rustup.rs/"&gt;rustup.rs&lt;/a&gt; để cài:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mặc dù các hệ điều hành đều có package manager để cài Rust như Ubuntu &lt;code&gt;apt&lt;/code&gt;, Fedora &lt;code&gt;yum&lt;/code&gt;, hay MacOS &lt;code&gt;homebrew&lt;/code&gt;,
&lt;code&gt;rustup&lt;/code&gt; là công cụ được khuyên dùng chính thức vì nó có khả năng cài thêm các phần liên quan
đến việc code Rust như: document, auto-complete engine,... mà thường không có khi
cài qua package manager.&lt;/p&gt;
&lt;p&gt;Code Rust có thể dùng &lt;a href="https://www.jetbrains.com/rust/"&gt;IntelliJ&lt;/a&gt;, hay &lt;a href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust"&gt;VSCode&lt;/a&gt; để có hỗ trợ auto-complete, các editor
khác sẽ cần tự cài đặt thêm thủ công hơn.&lt;/p&gt;
&lt;h3&gt;Tài liệu&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“the book” The Rust Programming Language: &lt;a href="https://doc.rust-lang.org/book/"&gt;https://doc.rust-lang.org/book/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nửa giờ học Rust &lt;a href="https://fasterthanli.me/articles/a-half-hour-to-learn-rust"&gt;https://fasterthanli.me/articles/a-half-hour-to-learn-rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rust &amp;amp; WebAssembly &lt;a href="https://rustwasm.github.io/docs/book/"&gt;https://rustwasm.github.io/docs/book/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-cli.github.io/book/index.html"&gt;Command Line Applications in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Và nhiều tài liệu khác tại &lt;a href="https://www.rust-lang.org/learn"&gt;https://www.rust-lang.org/learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cách học&lt;/h3&gt;
&lt;p&gt;Gõ &lt;code&gt;rustup doc&lt;/code&gt;, đọc 4 chương đầu + chương 8 trong
&lt;a href="https://doc.rust-lang.org/book/"&gt;https://doc.rust-lang.org/book/&lt;/a&gt;
là đủ để code.&lt;/p&gt;
&lt;h3&gt;Build &amp;amp; run&lt;/h3&gt;
&lt;p&gt;Rust compile code thành file binary rồi chạy.
Rust compiler có câu lệnh &lt;code&gt;rustc&lt;/code&gt;, gõ &lt;code&gt;rustc file.rs&lt;/code&gt; để compile, rồi chạy &lt;code&gt;./file&lt;/code&gt;.
Nhưng Rust có kèm "cargo", package manager của Rust, như pip của Python, như
npm của nodejs... cargo hỗ trợ mọi tác vụ cần để code 1 Rust project.&lt;/p&gt;
&lt;p&gt;Để tạo 1 Rust project, gõ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cargo new project-name
     Created binary &lt;span class="o"&gt;(&lt;/span&gt;application&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;project-name&lt;span class="sb"&gt;`&lt;/span&gt; package
$ &lt;span class="nb"&gt;cd&lt;/span&gt; project-name/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;lệnh này sinh ra file config cho cargo &lt;code&gt;Cargo.toml&lt;/code&gt; và code 1 chương trình hello world
nằm trong src/main.rs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./Cargo.toml
./src
./src/main.rs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;rồi chạy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cargo run
   Compiling project-name v0.1.0 &lt;span class="o"&gt;(&lt;/span&gt;/tmp/project-name&lt;span class="o"&gt;)&lt;/span&gt;
    Finished dev &lt;span class="o"&gt;[&lt;/span&gt;unoptimized + debuginfo&lt;span class="o"&gt;]&lt;/span&gt; target&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.60s
     Running &lt;span class="sb"&gt;`&lt;/span&gt;target/debug/project-name&lt;span class="sb"&gt;`&lt;/span&gt;
Hello, world!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để chạy test, gõ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cargo &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để format code, gõ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cargo fmt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Hello, World!&lt;/h3&gt;
&lt;p&gt;Gõ lệnh &lt;code&gt;cargo new&lt;/code&gt; đã tự tạo ra code hello world, trong file src/main.rs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code của chương trình Rust nằm trong file &lt;code&gt;main.rs&lt;/code&gt; và chạy từ function &lt;code&gt;main&lt;/code&gt;.
&lt;code&gt;fn main() {...}&lt;/code&gt; định nghĩa 1 function tên &lt;code&gt;main&lt;/code&gt;, sử dụng từ khóa &lt;code&gt;fn&lt;/code&gt;, thân
function nằm trong cặp &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;không khác Python là mấy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;print(&amp;quot;Hello, world!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;println!()&lt;/code&gt; trông như 1 function, nhưng trong Rust, khi thấy dấu &lt;code&gt;!&lt;/code&gt; thì đó là
biểu diễn của 1 macro.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;macro &lt;strong&gt;sinh ra code&lt;/strong&gt; thực hiện việc "in ra màn hình"&lt;/li&gt;
&lt;li&gt;Python &lt;code&gt;print&lt;/code&gt; function thực hiện việc "in ra màn hình"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mọi câu lệnh trong Rust kết thúc bằng dấu chấm phẩy &lt;code&gt;;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://projecteuler.net/problem=1"&gt;ProjectEuler.net problem 1&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Tính tổng các số tự nhiên nhỏ hơn 1000 chia hết cho 3 hoặc 5.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Để tạo 1 biến, gõ &lt;code&gt;let tên = giá trị;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Kết quả: {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cũng không quá khác code Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Kết quả &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Rust giống C/C++/Java, dùng &lt;code&gt;{}&lt;/code&gt;làm khối lệnh nhóm các câu lệnh trong if/for/function,
khác với Python dùng indentation (thụt vào 4 dấu space).
Biến trong Rust mặc định không
thay đổi được sau khi tạo, phải thêm từ khóa &lt;code&gt;mut&lt;/code&gt; (viết tắt của mutable): &lt;code&gt;let mut result = 0;&lt;/code&gt; để thay đổi &lt;code&gt;result&lt;/code&gt;.
&lt;code&gt;println!&lt;/code&gt; nhận 1 string, với &lt;code&gt;{}&lt;/code&gt; để format, rồi tới các giá trị theo sau.&lt;/p&gt;
&lt;p&gt;Rust có kiểu vector &lt;code&gt;Vec&lt;/code&gt;, tương tự như Python &lt;code&gt;list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;nhưng...&lt;/p&gt;
&lt;p&gt;mặc dù có không ít khái niệm tương tự Python, hay syntax rút gọn trông cũng gần
giống, thì Rust lại là một con quái vật hoàn toàn khác, khác Python nhiều hơn
là giống.&lt;/p&gt;
&lt;h4&gt;Giống Python&lt;/h4&gt;
&lt;p&gt;Rust có các kiểu dữ liệu built-in tương tự Python:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Python&lt;/th&gt;
&lt;th&gt;Rust&lt;/th&gt;
&lt;th&gt;Chú thích cho Rust&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;Vec&lt;/td&gt;
&lt;td&gt;vector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dict&lt;/td&gt;
&lt;td&gt;HashMap&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set&lt;/td&gt;
&lt;td&gt;HashSet&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tuple&lt;/td&gt;
&lt;td&gt;(a, b)&lt;/td&gt;
&lt;td&gt;dùng cú pháp, không có kiểu ở dạng tên&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;i64, i32..&lt;/td&gt;
&lt;td&gt;có u64 u32... cho kiểu không âm, usize cho kích thước&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;f64, f32&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;str&lt;/td&gt;
&lt;td&gt;&amp;amp;str, String&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;KHÔNG CÓ&lt;/td&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;giá trị&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;Tuple&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PYMI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;Vector&lt;/h5&gt;
&lt;p&gt;Vector tương tự như Python list. Lặp qua các phần tử của 1 vector:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;HashSet&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;collections&lt;/span&gt;::&lt;span class="n"&gt;HashSet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;: &lt;span class="nc"&gt;HashSet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HashSet&lt;/span&gt;::&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;dbg!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;:&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dbg!&lt;/code&gt; để &lt;strong&gt;print debug&lt;/strong&gt; trong Rust.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;HashMap&lt;/h5&gt;
&lt;p&gt;HashMap key không có thứ tự, tương tự với Python dict trước 3.6,
cú pháp import &lt;code&gt;use std::collections::HashMap;&lt;/code&gt;
như Python &lt;code&gt;from collections import Counter&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;collections&lt;/span&gt;::&lt;span class="n"&gt;HashMap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;: &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="kt"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HashMap&lt;/span&gt;::&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hà Nội&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1_612&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Cà Mau&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;967&lt;/span&gt;&lt;span class="p"&gt;)]);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TP HCM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;687&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}: {}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="c1"&gt;//Hà Nội: 1612&lt;/span&gt;
&lt;span class="c1"&gt;//TP HCM: 687&lt;/span&gt;
&lt;span class="c1"&gt;//Cà Mau: 967&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cú pháp type của function tương tự Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hà Nội&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1_612&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cà Mau&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;967&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TP HCM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;687&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Khác với đoạn code giải Project Euler 1, code trên có khai báo type
cho các biến. Rust không bắt buộc phải khai báo type khi nó có thể tự
suy luận được,
vì vậy đa số code không cần ghi type, khi nào cần, Rust compiler sẽ thông báo.&lt;/p&gt;
&lt;h3&gt;Giải &lt;a href="https://adventofcode.com/2021/day/1"&gt;ngày 1&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nhìn chung các bài trong 7-8 ngày đầu tiên thường dễ, độ khó tăng dần về sau,
đặc biệt là tuần cuối cùng.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How many measurements are larger than the previous measurement?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cho một dãy số tự nhiên (độ sâu của tàu ngầm) tăng giảm tùy ý.
Có bao nhiêu lần độ sâu tăng so với lần trước. Ví dụ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;199&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;previous&lt;/span&gt; &lt;span class="n"&gt;measurement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;200&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;208&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;210&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;200&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decreased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;207&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;240&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;269&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;260&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decreased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;263&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;increased&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Phần chú thích trong &lt;code&gt;()&lt;/code&gt; là hướng dẫn, đề chỉ cho 1 file chứa các số, mỗi số 1 dòng.
Ví dụ trên có 7 lần tăng.&lt;/p&gt;
&lt;p&gt;Các bước làm:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;đọc file input vào thành các dòng chứa các string&lt;/li&gt;
&lt;li&gt;biến kiểu string thành integer (số nguyên)&lt;/li&gt;
&lt;li&gt;lặp qua các giá trị, đếm số lần giá trị sau lớn hơn giá trị trước.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bài giải, theo kiểu dùng vòng lặp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;199&lt;/span&gt;
&lt;span class="s"&gt;200&lt;/span&gt;
&lt;span class="s"&gt;208&lt;/span&gt;
&lt;span class="s"&gt;210&lt;/span&gt;
&lt;span class="s"&gt;200&lt;/span&gt;
&lt;span class="s"&gt;207&lt;/span&gt;
&lt;span class="s"&gt;240&lt;/span&gt;
&lt;span class="s"&gt;269&lt;/span&gt;
&lt;span class="s"&gt;260&lt;/span&gt;
&lt;span class="s"&gt;263&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="kt"&gt;str&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;increases_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="kt"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;: &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;increases_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;increases_count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Người chơi có thể dùng &lt;code&gt;std::fs::read_to_string&lt;/code&gt; để đọc từ file, nhưng ngày đầu
tiên dùng Rust, với một bài khởi động đơn giản thế này thì phần cản trở tốc độ giải cũng chính là
Rust. Bỏ qua việc đọc file trong lúc gấp gáp này hoàn toàn chấp nhận được.
Một vài điểm chú ý:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;line.parse()&lt;/code&gt; để parse string thành integer. Rust tự biết parse thành kiểu
gì do vế trái khai báo kiểu cho kết quả &lt;code&gt;let n: i32&lt;/code&gt;. &lt;code&gt;parse&lt;/code&gt; không trả ngay về
số mà trả về kiểu &lt;code&gt;Result&lt;/code&gt;, Result chứa số kiểu i32, hoặc chứa Error
nếu không parse được. &lt;code&gt;.unwrap()&lt;/code&gt; để lấy ra giá trị &lt;code&gt;i32&lt;/code&gt; hoặc panic dừng chương
trình luôn nếu parse gặp lỗi.&lt;/li&gt;
&lt;li&gt;Python chỉ có kiểu &lt;code&gt;int&lt;/code&gt; duy nhất cho integer, trong Rust có nhiều kiểu số: &lt;code&gt;i32&lt;/code&gt;
cho kiểu integer với kích thước 32 bit, giá trị từ &lt;code&gt;-2**31&lt;/code&gt; tới &lt;code&gt;2**31-1&lt;/code&gt; (-2147483648..=2147483647), tương tự
với &lt;code&gt;i64&lt;/code&gt;. Ngoài ra còn có kiểu &lt;code&gt;u32&lt;/code&gt; (unsigned int), chỉ chứa số không âm, với
&lt;code&gt;u32&lt;/code&gt; có giá trị từ &lt;code&gt;0&lt;/code&gt; tới &lt;code&gt;2**32-1&lt;/code&gt; (&lt;code&gt;0..=4294967295&lt;/code&gt;), tương tự cho &lt;code&gt;u64&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt; là 1 trong 2 kiểu string hay dùng trong Rust, kiểu còn lại là &lt;code&gt;String&lt;/code&gt;,
ngoài ra Rust có nhiều kiểu string khác dùng trong các trường hợp riêng biệt.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s.lines()&lt;/code&gt; không trả ngay về một &lt;code&gt;Vec&amp;lt;&amp;amp;str&amp;gt;&lt;/code&gt;, nó trả về kiểu &lt;code&gt;Lines&lt;/code&gt;. Để biến
thành kiểu &lt;code&gt;Vec&lt;/code&gt;, dùng &lt;code&gt;collect()&lt;/code&gt;. Chú ý vế trái phải khai báo kiểu do Rust
không thể tự suy ở đây vì người dùng có thể gọi &lt;code&gt;collect()&lt;/code&gt; mà nhận được nhiều
kiểu khác nhau như Vec, HashSet, ... tùy ý.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;lines[1..]&lt;/code&gt;, Vector có slice như Python, thay cú pháp &lt;code&gt;[a:b]&lt;/code&gt; bằng &lt;code&gt;[a..b]&lt;/code&gt; và
không có index âm (như -1).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cách trên không được coi là code theo kiểu Rust, mà giống viết code C/Python dịch sang
Rust hơn. Một phiên bản khác sử dụng &lt;code&gt;iterator&lt;/code&gt; mang phong cách functional programming,
phải đến ngày thứ 10 trở đi, hay đọc xong &lt;a href="https://doc.rust-lang.org/stable/book/ch13-00-functional-features.html"&gt;chương 13 trong "The Rust Book"&lt;/a&gt; mới quen được kiểu này:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;fs&lt;/span&gt;::&lt;span class="n"&gt;read_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;input01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;increases_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;increases_count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ý tưởng khác một chút, thay vì duyệt qua dãy số, ta duyệt qua 2 dãy cùng 1 lúc
với &lt;code&gt;zip&lt;/code&gt;, dãy thứ 2 bắt đầu từ phần tử index 1, và filter (lọc)
ra các cặp mà có giá trị sau lớn hơn giá trị trước, rồi đếm.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;|(prev, next)| next &amp;gt; prev&lt;/code&gt; là một closure, giống như Python lambda nhưng viết
bao nhiêu dòng cũng được. Code này tương tự Python &lt;code&gt;lambda t: t[1] &amp;gt; t[0]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sau khi nhập kết quả giải xong phần 1, đề phần 2 hiện ra yêu cầu thay vì đếm số
sau lớn hơn số trước thì đếm tổng 3 số sau lớn hơn tổng 3 số trước.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;1&lt;/span&gt;
&lt;span class="mf"&gt;2&lt;/span&gt;
&lt;span class="mf"&gt;3&lt;/span&gt;
&lt;span class="mf"&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;thì có 2+3+4 &amp;gt; 1+2+3.&lt;/p&gt;
&lt;p&gt;Tạo 1 list mới chứa tổng của 3 số liên tiếp, sau đó dùng list
đó làm đầu vào cho code của phần 1.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ở đây một lần nữa dùng zip để duyệt qua 3 dãy số cùng lúc.&lt;/p&gt;
&lt;h3&gt;Giải &lt;a href="https://adventofcode.com/2021/day/3"&gt;ngày 3&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tính năng lượng tiêu thụ của tàu dựa trên báo cáo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;00100&lt;/span&gt;
&lt;span class="mf"&gt;11110&lt;/span&gt;
&lt;span class="mf"&gt;10110&lt;/span&gt;
&lt;span class="mf"&gt;10111&lt;/span&gt;
&lt;span class="mf"&gt;10101&lt;/span&gt;
&lt;span class="mf"&gt;01111&lt;/span&gt;
&lt;span class="mf"&gt;00111&lt;/span&gt;
&lt;span class="mf"&gt;11100&lt;/span&gt;
&lt;span class="mf"&gt;10000&lt;/span&gt;
&lt;span class="mf"&gt;11001&lt;/span&gt;
&lt;span class="mf"&gt;00010&lt;/span&gt;
&lt;span class="mf"&gt;01010&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cách tính: &lt;code&gt;power = epsilon rate * gamma rate&lt;/code&gt;.
Với gamma rate là các bit xuất hiện nhiều nhất ở mỗi cột trong tất cả các số.
Và epsilon rate là các bit xuất hiện ít nhất ở mỗi cột.
Ví dụ trên: cột 1 có nhiều số 1 nhất, cột 2 có nhiều số 0 nhất, ...
sau 5 cột ta có &lt;code&gt;10110&lt;/code&gt;, đổi ra hệ cơ số 10 được giá trị 22.&lt;/p&gt;
&lt;p&gt;Giải phần này, chỉ cần làm đúng như các bước mà đề bài mô tả, lấy các giá trị
theo từng cột, đếm giá trị nào nhiều nhất rồi cho vào 1 list, cuối cùng biến
thành số.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;day02&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;::&lt;span class="n"&gt;fs&lt;/span&gt;::&lt;span class="n"&gt;read_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;input02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gamma_bits&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;epsilon_bits&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span class="kt"&gt;str&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;gamma_bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;epsilon_bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;gamma_bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;epsilon_bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;to_i32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma_bits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_i32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epsilon_bits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;to_i32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="k"&gt;i32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;u32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các điểm chú ý:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rust dùng các kiểu khác nhau cho các loại số khác nhau. &lt;code&gt;bits.len()&lt;/code&gt; hay &lt;code&gt;enumerate()&lt;/code&gt;
là kiểu &lt;code&gt;usize&lt;/code&gt;, chứa số nguyên không âm, dùng để đo kích thước. Nghe thì giống
u32 hay u64 nhưng Rust hay C++ coi đây là kiểu riêng biệt và lập trình viên phải
tự convert sang kiểu khác nếu muốn dùng khác đi. Số mũ của pow phải là kiểu u32.
Dùng &lt;code&gt;as u32&lt;/code&gt; để ép kiểu từ &lt;code&gt;usize&lt;/code&gt;. Cũng không thể viết &lt;code&gt;2.pow()&lt;/code&gt; mà phải dùng
&lt;code&gt;2i32&lt;/code&gt; để chỉ rõ kiểu của nó.&lt;/li&gt;
&lt;li&gt;Dùng &lt;code&gt;vec.push(i)&lt;/code&gt; để thêm &lt;code&gt;i&lt;/code&gt; vào cuối &lt;code&gt;vec&lt;/code&gt;, như Python list.append.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for (idx, b) in bits.iter().enumerate()&lt;/code&gt; như Python &lt;code&gt;for idx, b in enumerate(bits)&lt;/code&gt;,
tuple trong Python không cần thiết có &lt;code&gt;()&lt;/code&gt; còn trong Rust là bắt buộc.&lt;/li&gt;
&lt;li&gt;Có thể bỏ trống kiểu phần tử của Vec bằng dấu gạch dưới &lt;code&gt;_&lt;/code&gt;: &lt;code&gt;Vec&amp;lt;_&amp;gt;&lt;/code&gt; do đoạn
code sau có phần push(), Rust sẽ tự suy ra kiểu dựa vào kiểu của giá trị được push.&lt;/li&gt;
&lt;li&gt;Rust tự return dòng cuối cùng không có dấu &lt;code&gt;;&lt;/code&gt;. Cũng có thể viết &lt;code&gt;return to_i32(gamma_bits) * to_i32(epsilon_bits);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Các bài hay, nổi bật&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Day 15: tìm đường đi ít nguy hiểm nhất, có thể sử dụng thuật toán trong
  sách giáo khoa "cấu trúc dữ liệu và giải thuật": Dijkstra (/ˈdaɪkstrəz/).
  Google code sẵn hoặc lên &lt;a href="https://en.wikipedia.org/wiki/Dijkstra's_algorithm#Pseudocode"&gt;wikipedia xem pseudocode&lt;/a&gt; rồi viết lại.
  Điểm thú vị là để tăng tốc thuật toán này, cần dùng khái niệm có tên
  &lt;a href="https://en.wikipedia.org/wiki/Dijkstra's_algorithm#Using_a_priority_queue"&gt;Priority Queue&lt;/a&gt;, một loại queue đặc biệt, giúp tìm kiếm min hay max tức thì &lt;code&gt;O(1)&lt;/code&gt;.
  Trong Python có thể dùng &lt;a href="https://docs.python.org/3/library/heapq.html"&gt;&lt;code&gt;import heapq&lt;/code&gt;&lt;/a&gt;, trong Rust có sẵn kiểu &lt;a href="https://doc.rust-lang.org/std/collections/struct.BinaryHeap.html"&gt;BinaryHeap&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Không ít bài toán người chơi sẽ phải viết các "hàm đệ quy" - (Recursive function)
  để giải, như &lt;strong&gt;metaverse&lt;/strong&gt; của &lt;a href="https://adventofcode.com/2021/day/21"&gt;day 21&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Năm nay vắng bóng &lt;a href="https://github.com/norvig/pytudes/blob/main/ipynb/Life.ipynb"&gt;"game of life"&lt;/a&gt;, nhưng vẫn có một phiên bản trá hình trong &lt;a href="https://adventofcode.com/2021/day/20"&gt;day 20&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Day 16, người chơi phải viết 1 parser và chạy đoạn code &lt;strong&gt;BITS&lt;/strong&gt; để tính toán,
  hệ thống này giống một ngôn ngữ &lt;a href="https://pp.pymi.vn/article/scm1/"&gt;nhà LISP&lt;/a&gt; và có thể "cheat" ra &lt;a href="https://github.com/hvnsweeting/adventofcode/blob/master/2021/src/day16.rs"&gt;dùng
  LISP để giải cho nhanh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Day 18 có kiểu dữ liệu Binary Tree, nếu chưa đọc hết &lt;a href="https://doc.rust-lang.org/stable/book/ch15-01-box.html#enabling-recursive-types-with-boxes"&gt;chương 15 "The Rust Book"&lt;/a&gt; thì sẽ
  khá khó để biểu diễn kiểu dữ liệu recursive này trên Rust. Nên tạm "cheat" ra
  &lt;a href="https://github.com/hvnsweeting/adventofcode/blob/master/2021/src/day18.ipynb"&gt;dùng Python để giải&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Day 19 là bài phải code code trâu bò nhất. Tương tự day 20 của năm 2020, ám
  ảnh người chơi mãi về sau với lượng code vài trăm dòng cần viết. Lý do: bài này
  được ra vào ngày thứ 7/chủ nhật cuối cùng trong giải.&lt;/li&gt;
&lt;li&gt;Và cũng có những bài giải tay nhiều khi nhanh hơn viết code như &lt;a href="https://adventofcode.com/2021/day/23"&gt;day 23&lt;/a&gt;. Giải
  tay giống như đang chơi game.
  Thậm chí có người chơi trên reddit đã &lt;a href="https://www.reddit.com/r/adventofcode/comments/rmspb7/2021_day_23_it_was_nice_on_paper_but_its_even/"&gt;viết game
  để giải bài này&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ownership, move, borrow &amp;amp; clone&lt;/h2&gt;
&lt;p&gt;Khó có thể code Rust 25 ngày mà không động đến khái niệm borrow-checker, ownership.&lt;/p&gt;
&lt;p&gt;Rust không có Garbage Collector (viết tắc GC).&lt;/p&gt;
&lt;p&gt;Các ngôn ngữ như JavaScript, Python, Ruby, PHP, Go, Java, C# có GC nên lập
trình viên có thể tạo các giá trị tùy ý, GC sẽ theo dõi và tự xóa đi các giá trị
không dùng nữa.&lt;/p&gt;
&lt;p&gt;Code C/C++ không có GC, lập trình viên cần tự viết code cấp phát (allocate) và giải phóng
 (free) bộ nhớ (memory) để tạo các kiểu dữ liệu (trên heap).&lt;/p&gt;
&lt;p&gt;Rust theo cách riêng của mình, đưa ra khái niệm "ownership" để biết ai là chủ
của 1 giá trị, giúp quản lý bộ nhớ mà không cần tới GC.&lt;/p&gt;
&lt;h4&gt;Real "hello, Rust!"&lt;/h4&gt;
&lt;p&gt;Chương trình sau, dựa vào các kiến thức từ ví dụ đã đưa ra, kết hợp kinh nghiệm
lập trình các ngôn ngữ khác thì thấy hoàn toàn hợp lý, Rust
compile báo lỗi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Compile lỗi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;error&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="n"&gt;E0382&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;moved&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n n-Quoted"&gt;`v`&lt;/span&gt;
  &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;
   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="n"&gt;occurs&lt;/span&gt; &lt;span class="n"&gt;because&lt;/span&gt; &lt;span class="n n-Quoted"&gt;`v`&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n n-Quoted"&gt;`Vec&amp;lt;i32&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;implement&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n n-Quoted"&gt;`Copy`&lt;/span&gt; &lt;span class="n"&gt;trait&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;_s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;|&lt;/span&gt;                  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="n"&gt;moved&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="n"&gt;_p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;|&lt;/span&gt;                      &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt; &lt;span class="k"&gt;after&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Rust compiler hướng dẫn chi tiết về vấn đề xảy ra, thậm chí đôi khi
đưa ra cả hướng dẫn sửa code. Lỗi xảy ra &lt;code&gt;use of moved value: v&lt;/code&gt; với chỉ dẫn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tại dòng 13, sum nhận đầu vào v: "value moved here".&lt;/li&gt;
&lt;li&gt;dòng 14, product nhận đầu vào v: "value used here after move".&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;trong các ngôn ngữ lập trình khác, việc các đoạn code dùng chung 1 giá trị là chuyện
hoàn toàn bình thường và không có gì phải suy nghĩ, Rust thì khác.&lt;/p&gt;
&lt;h4&gt;owner và move&lt;/h4&gt;
&lt;p&gt;Khi gán biến,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;let x = vec![1,2,3];
let y = x;
let z = x; // not work, compile error:  value used here after move
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ban đầu, &lt;code&gt;x = vec![1,2,3]&lt;/code&gt;, x là owner (chủ sở hữu) của giá trị &lt;code&gt;vec![1,2,3]&lt;/code&gt;.
Khi viết &lt;code&gt;y = x&lt;/code&gt;, quyền sở hữu được chuyển
sang cho y. Sau dòng này, x không còn dính dáng tới &lt;code&gt;vec![1,2,3]&lt;/code&gt;, hay không còn giá trị,
không thể dùng được nữa, nên không thể gán cho z được.&lt;/p&gt;
&lt;p&gt;Tương tự, khi gọi function sum, sum sẽ trở thành chủ sở hữu mới của giá trị mà v đang chứa,
sau dòng này, v không còn hợp lệ. Việc chuyển đổi quyền sở hữu này gọi là
"move" ownership.&lt;/p&gt;
&lt;p&gt;Thay vì chuyển quyền sở hữu, có thể thực hiện "mượn": borrow. Function sẽ khai báo
mình muốn own (sở hữu), hay muốn borrow (mượn).&lt;/p&gt;
&lt;p&gt;Function sum viết lại để borrow, thêm dấu &lt;code&gt;&amp;amp;&lt;/code&gt; trước kiểu của xs:
&lt;code&gt;fn sum(xs: &amp;amp;Vec&amp;lt;i32&amp;gt;) -&amp;gt; i32 {&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;và khi gọi function: &lt;code&gt;sum(&amp;amp;vec)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ký hiệu &lt;code&gt;&amp;amp;&lt;/code&gt; gọi là reference. &lt;code&gt;&amp;amp;v&lt;/code&gt; tạo một reference &lt;strong&gt;refer&lt;/strong&gt; (chỉ) đến giá trị của
vec nhưng không own nó.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;: &lt;span class="kp"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="c1"&gt;//...không đổi...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;i32&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i32&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;: &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="fm"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code mới sẽ chạy được, do sum chỉ borrow giá trị của v, chứ không own,
v vẫn là chủ của vector để sau đó, move cho product trở thành owner.&lt;/p&gt;
&lt;h4&gt;Stack và heap &lt;id="heap"&gt;&lt;/h4&gt;
&lt;p&gt;Trong máy tính, có 2 loại bộ nhớ cấu trúc theo cách khác nhau:&lt;/p&gt;
&lt;p&gt;Stack &lt;strong&gt;thường&lt;/strong&gt; có kích thước nhỏ (VD: 2KB, 4KB, 8KB,... cũng có thể &lt;a href="https://dave.cheney.net/2013/06/02/why-is-a-goroutines-stack-infinite"&gt;lớn dần lên đến vô cùng&lt;/a&gt;), hoạt động như kiểu dữ liệu "stack" (last in first out - LIFO),
dữ liệu nhét vào stack (push) phải có kích thước biết trước (khi compile),
lấy dữ liệu từ stack (pop) thường nhanh hơn heap.
Các kiểu dữ liệu có thể chứa trong stack có kích thước biết trước: như
số (i32 - 32 bits, i64, f64, ...), string cố định (&amp;amp;str), array (&lt;code&gt;[3;i32]&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Heap là vùng bộ nhớ tự do, khi muốn dùng phải yêu cầu hệ điều hành cấp cho (allocate),
dùng xong nếu không giải phóng trả lại hệ điều hành thì chương trình sẽ dùng
ngày càng nhiều RAM, gọi là memleak (memory leak).&lt;/p&gt;
&lt;p&gt;Khi tạo 1 Vector hay HashMap trong Rust, kích thước của chúng có thể thay đổi
khi chạy (VD: thêm phần tử vào vector), nên chúng nằm trên heap. Lý do không
thấy code để alloc/free ở các ví dụ trên bởi Rust thực hiên tự động free giá trị khi biến
"out of scope" (thường là ra khỏi block &lt;code&gt;{}&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Với các kiểu dữ liệu trên stack, không cần borrow bởi chúng sẽ tự copy do
các giá trị này nhỏ. Với các kiểu dữ liệu trên heap, cần gọi &lt;code&gt;.clone()&lt;/code&gt; để
copy giá trị. Người mới code Rust có thể dùng &lt;code&gt;clone()&lt;/code&gt; để tránh các vấn đề
ban đầu về ownership cho tới khi nắm được ownership &amp;amp; borrow.&lt;/p&gt;
&lt;p&gt;Xem thêm tại &lt;a href="https://doc.rust-lang.org/stable/book/ch04-01-what-is-ownership.html"&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Kết quả&lt;/h2&gt;
&lt;p&gt;PyMi AoC 2021 kết thúc vào 12 giờ trưa ngày 26/12/2021, với giải thưởng:&lt;/p&gt;
&lt;p&gt;&lt;img alt="leaderboard" src="http://pp.pymi.vn/images/aoc21_leaderboard.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;giải nhất: &lt;a href="https://github.com/tung491/advent_to_code_2021"&gt;tung491&lt;/a&gt; học viên PyMiHN1706&lt;/li&gt;
&lt;li&gt;giải nhì: &lt;a href="https://github.com/thevivotran"&gt;thevivotran&lt;/a&gt; học viên PyMiHCM2008.&lt;/li&gt;
&lt;li&gt;giải ba: stuncb97 học viên PyMiHN2010 - cựu vô địch 2020.&lt;/li&gt;
&lt;li&gt;(ban tổ chức 2nd và khách mời 3rd không trong cơ cấu tính giải).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Một tràng pháo tay cho các game thủ dù bận công việc vẫn nhịn ăn trưa cày
marathon code suốt 25 ngày 🎉😍&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Advent of Code là một chuyến phiêu lưu thú vị hàng năm, là cơ hội tuyệt vời
để "vui vẻ" với code, học được thêm không ít điều mới mẻ.&lt;/p&gt;
&lt;p&gt;Rust dù hơi dài dòng
so với Python, không hợp để code nhanh trong các cuộc thi, nhưng không phải
quá khó, lại là một vũ khí hạng nặng ngang C/C++ cho vào balo mang đi chiến khi cần.
Hàng ngàn lập trình viên đã liên tục vote Rust là ngôn ngữ yêu
thích nhất, còn bạn?&lt;/p&gt;
&lt;p&gt;Và nhớ đừng quên đọc &lt;a href="https://github.com/norvig/pytudes/blob/main/ipynb/Advent-2021.ipynb"&gt;văn mẫu&lt;/a&gt; từ giám đốc nghiên cứu Google nhé!&lt;/p&gt;
&lt;p&gt;Tạm biệt 2021, chúc mừng năm mới 2022!&lt;/p&gt;
&lt;h2&gt;Finish&lt;/h2&gt;
&lt;p&gt;Toàn bộ code giải 25 bài
(trừ bài 23 giải bằng giấy và bút) có trong &lt;a href="https://github.com/hvnsweeting/adventofcode/tree/master/2021/src"&gt;repo&lt;/a&gt;
PS: đây là code của 1 Rust newbie.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pp.pymi.vn/images/aoc21.png" width=800&gt;&lt;/p&gt;
&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stack vs Heap &lt;a href="https://doc.rust-lang.org/stable/book/ch04-01-what-is-ownership.html"&gt;https://doc.rust-lang.org/stable/book/ch04-01-what-is-ownership.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io//2020/09/20/why-not-rust.html"&gt;https://matklad.github.io//2020/09/20/why-not-rust.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ủng hộ tác giả&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="aoc"></category><category term="adventofcode"></category><category term="rust"></category></entry><entry><title>Ký sự chiếm cờ tại SNYK CTF 2021</title><link href="http://pp.pymi.vn/article/ctf/" rel="alternate"></link><published>2021-10-06T00:00:00+07:00</published><updated>2021-10-06T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-10-06:/article/ctf/</id><summary type="html">&lt;p&gt;SNYK CTF 2021 write-up&lt;/p&gt;</summary><content type="html">&lt;h2&gt;CTF là gì?&lt;/h2&gt;
&lt;p&gt;Capture the Flag (CTF) là một trò chơi được ưa chuộng của những người trong
ngành bảo mật thông tin, thường tổ chức theo dạng cuộc thi với nhiều đội
tham gia và có đội dành chiến thắng.&lt;/p&gt;
&lt;p&gt;CTF có 3 dạng phổ biến:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jeopardy-style CTFs: Đề thi thường gồm nhiều dạng bài thuộc
các lĩnh vực khác nhau trong ngành: cryptography, stego, binary analysis,
reverse engineering, mobile security, web hacking, OS, Linux...&lt;/li&gt;
&lt;li&gt;attack-defence: mỗi đội được giao cho 1 hệ thống có các lỗi bảo mật, và 2 đội
sẽ vá hệ thống của mình đồng thời tấn công hệ thống của đội khác.&lt;/li&gt;
&lt;li&gt;mixed: đủ dạng&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CTF với người làm bảo mật giống như
&lt;a href="https://www.leagueoflegends.com/en-us/"&gt;LOL&lt;/a&gt; với các thanh niên chơi esport
vậy, cũng có các giải đấu lớn thế giới.
Danh sách các giải đấu lớn có thể xem trên &lt;a href="https://ctftime.org/ctfs"&gt;ctftime&lt;/a&gt;,
nổi tiếng nhất có thể kể tới DEF CON CTF, phổ biến nhất có thể gọi tên Google CTF.&lt;/p&gt;
&lt;h2&gt;SNYK CTF 2021&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://snyk.io/"&gt;SNYK.io&lt;/a&gt; là một công ty làm về bảo mật, cung cấp các dịch vụ
phát hiện lỗi bảo mật tích hợp vào hệ thống khi phát triển phần mềm ở các doanh
nghiệp và cộng đồng opensource. Năm nay snyk tổ chức CTF và team pymi nhận được
&lt;a href="https://mailchi.mp/pythonweekly/python-weekly-issue-519"&gt;lời quảng cáo trên "PythonWeekly" email&lt;/a&gt;, chiến thôi.
Đây là lần thứ 2 HVN tham gia một giải CTF, lần đầu là tại &lt;a href="https://viblo.asia/p/code-war-2017-online-round-write-ups-part-1-aWj531Y1Z6m"&gt;Framgia
Code War
2017&lt;/a&gt;,
bẵng cái 4 năm, không có kinh nghiệm gì mới do công
việc chẳng liên quan tới hắc hiếc gì.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;https://ctf.snyk.io/ Fetch the Flag at SnykCon 2021!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;October 5, 9:00 am - 7:00 pm ET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;đăng ký rồi rủ rê team 5 người.&lt;/p&gt;
&lt;p&gt;Cách tính điểm: 500 cho mỗi bài, giảm dần theo số lượt giải. Tức giải xong sớm
thì sẽ được điểm cao, sau khi giảm dần, điểm có thể tới min là 50.&lt;/p&gt;
&lt;p&gt;Các bài thi sẽ cần đi tìm 1 đoạn flag dạng &lt;code&gt;SNYK{...}&lt;/code&gt; rồi điền vào website
của snyk.&lt;/p&gt;
&lt;h2&gt;Cảnh báo&lt;/h2&gt;
&lt;p&gt;Code trong các cuộc thi CTF thường được viết ra nhanh nhất, nên thường không
theo các chuẩn sạch gọn đẹp hay tối ưu, nó đơn giản là thứ bạn viết ra khi có
sức ép về mặt thời gian và mục tiêu là kết quả.
Chỉ nên dùng để tham khảo, tránh dùng làm văn mẫu.&lt;/p&gt;
&lt;h3&gt;Cảnh báo 2&lt;/h3&gt;
&lt;p&gt;Bạn đọc chưa quen phần nào có thể bỏ qua phần đó, các bài chia theo các lĩnh
vực khác nhau.&lt;/p&gt;
&lt;p&gt;Bài viết bởi HVN, các phần do các tác giả khác viết có ghi rõ trong từng bài.&lt;/p&gt;
&lt;h2&gt;Các bài đã giải trong thời gian thi đấu&lt;/h2&gt;
&lt;p&gt;&lt;img alt="done" src="http://pp.pymi.vn/images/ctf_solved.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Coding&lt;/h2&gt;
&lt;h3&gt;CALC-UL8R&lt;/h3&gt;
&lt;p&gt;Đề cho 1 địa chỉ để nc vào&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ nc &lt;span class="m"&gt;35&lt;/span&gt;.211.207.36 &lt;span class="m"&gt;8000&lt;/span&gt;
  ____    _    _     ____      _   _ _     ___  ____
 / ___&lt;span class="p"&gt;|&lt;/span&gt;  / &lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   / ___&lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt; _ &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;  _ &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;     / _ &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   _____&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   / _ &lt;span class="se"&gt;\|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;_&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;___ / ___ &lt;span class="se"&gt;\|&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;_____&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;_&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;__&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;_&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;  _ &amp;lt;
 &lt;span class="se"&gt;\_&lt;/span&gt;___/_/   &lt;span class="se"&gt;\_\_&lt;/span&gt;____&lt;span class="se"&gt;\_&lt;/span&gt;___&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="se"&gt;\_&lt;/span&gt;__/&lt;span class="p"&gt;|&lt;/span&gt;_____&lt;span class="se"&gt;\_&lt;/span&gt;__/&lt;span class="p"&gt;|&lt;/span&gt;_&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\_\&lt;/span&gt;


&lt;span class="m"&gt;31521&lt;/span&gt; * &lt;span class="m"&gt;2455&lt;/span&gt; - &lt;span class="m"&gt;29590&lt;/span&gt; - o - &lt;span class="m"&gt;40881&lt;/span&gt; + &lt;span class="nv"&gt;34681&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;77331423&lt;/span&gt;
&lt;span class="nv"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;cần tính giá trị của biến, trong ví dụ này là &lt;code&gt;o&lt;/code&gt;, rồi nhập vào.
Cứ nhập xong, enter, phía server sẽ trả về 1 phép tính khác.&lt;/p&gt;
&lt;p&gt;Vậy có 2 việc cần làm:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kết nối đến server để nhận đề và gửi kết quả: việc này có thể dùng Python telnetlib&lt;/li&gt;
&lt;li&gt;đọc biểu thức và tính ra kết quả&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do lần đầu dùng &lt;a href="https://docs.python.org/3/library/telnetlib.html#telnet-example"&gt;&lt;code&gt;telnetlib&lt;/code&gt;&lt;/a&gt;, nên cũng khá vất vả một lúc mới tìm
ra cách đọc dùng &lt;a href="https://pp.pymi.vn/article/10x/"&gt;regex&lt;/a&gt;
thay vì dùng string.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read_until("string")&lt;/code&gt; sẽ đọc đến khi thấy "string" thì trả nội dung về&lt;/li&gt;
&lt;li&gt;&lt;code&gt;expect(list, timeout=None)&lt;/code&gt;  đọc đến khi 1 trong các regex  pattern match.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sau khi đã gửi nhận được, cần viết code giải phương trình, ban đầu mình có tự viết code để giải phương trình bằng cách thay biến trong phương trình (1 ký tự, dùng regex) bằng số 0, rồi chuyển vế các phép tính còn lại. Cách làm đơn giản này đúng cho đến khi nó sai: biểu thức có phép nhân. Nghĩ tới giải phương trình trên Python là nghĩ tới sympy, search &lt;code&gt;sympy solve equation&lt;/code&gt; thấy ngay&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/30776918/807703"&gt;https://stackoverflow.com/a/30776918/807703&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sửa lại để nhận mọi biến, PS: ở đây mình ko chăm chỉ viết tay từ a đến z mà gõ 1 dòng Python là xong&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_lowercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code giải phương trình&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;solve&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy.abc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sympy.parsing.sympy_parser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parse_expr&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;solve_meThis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;lhs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;parse_expr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;rhs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;parse_expr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;solution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;solve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lhs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;solution&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;invalid equation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;equation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;valid_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;equation&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;solve_meThis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thực hiện gửi nhận liên tục các phép tính cho đến khi server trả về kết quả:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;SNYK&lt;/span&gt;&lt;span class="si"&gt;{37d779963c037715c02624b6963008f55e92d12e8714a15b7a905c1c997d1afc}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File Jupyter Notebook dùng giải bài này
&lt;a href="https://gist.github.com/hvnsweeting/7e00e139912b9d65a1ec7c1913fdb513"&gt;https://gist.github.com/hvnsweeting/7e00e139912b9d65a1ec7c1913fdb513&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Random flag generator - python&lt;/h3&gt;
&lt;p&gt;Một bài được tag thẻ &lt;code&gt;python&lt;/code&gt;, cho 1 file code python và 1 file log:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hashlib&lt;/span&gt;

&lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rnd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SNYK&lt;/span&gt;&lt;span class="se"&gt;{{&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;}}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5bc&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./flag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bad random value: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;rnd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Flag created 🎉&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;3719072557403058&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;3702330745519661&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;0634360689087381&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2952684217196877&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;49843979869018884&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;7895773927381043&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2917373566923527&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;9030776618431813&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;7181809628413409&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;28050872595896736&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;17458286936713008&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2767390568969583&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;5492478684168797&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;2641653670084557&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;5156703392963877&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;32839693347899057&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;6998299885658202&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;5811672985185747&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;4644468325648108&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;49982517906634727&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;9333988943747559&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;7513893164652713&lt;/span&gt;
&lt;span class="nv"&gt;Bad&lt;/span&gt; &lt;span class="k"&gt;random&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;: &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;18638831058360805&lt;/span&gt;
&lt;span class="nv"&gt;Flag&lt;/span&gt; &lt;span class="nv"&gt;created&lt;/span&gt; 🎉
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đọc code thấy để tìm được flag, cần tìm ra
giá trị &lt;code&gt;seed&lt;/code&gt; mà người ra đề đã dùng.
Các học viên &lt;a href="https://pymi.vn"&gt;học Python tại Pymi.vn&lt;/a&gt; đều được học: các function trong &lt;code&gt;random&lt;/code&gt; chỉ là "gỉa ngẫu nhiên" và thực chất là chạy thuật toán sinh số ngẫu nhiên dựa trên giá trị &lt;code&gt;seed&lt;/code&gt;. &lt;code&gt;seed&lt;/code&gt; trong bài này gợi ý là UNIX timestamp, chạy từ 0 tới khoảng 1 tỷ 6 (1633537375).
Cách tìm đơn giản là sửa lại code, chạy lần lượt với từng seed, so sánh đầu ra (thay vì print thì cho vào 1 string) với file log. Nếu giống nhau tức đó là gía trị seed cần tìm.&lt;/p&gt;
&lt;p&gt;Vấn đề ở cách làm này, khi Python thực hiện khoảng 16 triệu phép +1 mỗi giây (xem &lt;a href="https://cpu.pymi.vn/"&gt;cpu.pymi.vn&lt;/a&gt;), thì để tính 1 tỷ 6 phải mất ít nhất 100 giây.
Mỗi giá trị seed lại sinh nhiều random value, thời gian sẽ gấp thêm 20 - 30 lần. Và khi mang chạy thật, mỗi giây nó tính khoảng được 5000-10000 seed. Tức quá chậm và cần tăng tốc.
Ném thêm các giải pháp như dùng thread/multiprocess cũng không khá hơn là bao.
Sau 30 phút, 1 tiếng không ra kêt quả, và giải xong 1 bài khác trong thời gian chờ này, mình quay lại tối ưu code.&lt;/p&gt;
&lt;p&gt;Thay vì tính hết output của mỗi seed, cho nó dừng lại ngay nếu dòng log đầu tiên khác với dòng đầu tiên trong log.txt.
Sau 1-2 phút đã có kết quả.&lt;/p&gt;
&lt;p&gt;Code: &lt;a href="https://gist.github.com/hvnsweeting/619ecf04aa9b57bd6b44f3fcc57fe8c2"&gt;https://gist.github.com/hvnsweeting/619ecf04aa9b57bd6b44f3fcc57fe8c2&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Russian doll&lt;/h3&gt;
&lt;p&gt;Đề bài cho ở dạng đã mã hóa:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Esp qwlr td DOKnGoIgKSsVvizaEAJmEgxiEShQKjjgyfeLhdutuIhObpZr IIEPL pyncjaepo. Alddhzco stye: iiii.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;và sau khi @pham &lt;a href="https://planetcalc.com/1434/"&gt;dùng tool&lt;/a&gt; để giải mã &lt;a href="https://www.familug.org/2014/12/programming-phe-rot13.html"&gt;ROT15&lt;/a&gt; thì thu được nội dung:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The flag is SDZcVdXvZHhKkxopTPYbTvmxTHwFZyyvnutAwsjijXwDqeOg XXTEA encrypted. Password hint: xxxx.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CTF thường là vậy, sau lớp này sẽ qua lớp khác.
Giờ để ý lại tên bài, cũng với hàm ý tương tự, Russian doll Matryoshka, trong con này là con khác.&lt;/p&gt;
&lt;p&gt;&lt;img alt="doll" src="https://images.unsplash.com/photo-1613981948475-6e2407d8b589?ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;fm=jpg&amp;amp;crop=entropy&amp;amp;cs=tinysrgb&amp;amp;dl=didssph-PB80D_B4g7c-unsplash.jpg&amp;amp;w=640"&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
Photo by &lt;a href="https://unsplash.com/@didsss?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"&gt;Didssph&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/russian-doll?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;với lượng điểm thu được cho bài này là 490/500 lúc  October 6th, 2:44:17 AM, sau ~7 tiếng, thì đây rõ là 1 bài khó.
Hoặc nó tiết lộ 1 phần về công cụ của người chơi đều là Python, vì sao hãy đọc tiếp...
Cho một thuật toán mã hóa cho trước, với key là 4 ký tự, hẳn không khó khăn gì các team có thể tải ngay lib Python trên mạng về và bruteforce vài phút là có ngay kết quả. Đen thay, 2 thư viện tìm thấy đầu tiên, đều có vẻ không dùng được&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/xxtea/"&gt;https://pypi.org/project/xxtea/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;có 1 dòng yêu cầu &lt;code&gt;# Key must be a 16-byte string.&lt;/code&gt;
Trong khi bài này key là 4 ký tự.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/xxtea-py/"&gt;https://pypi.org/project/xxtea-py/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;một cái lib khá oái oăm khi cài thì ok mà dùng thì lại đòi cffi, và hầu hết mọi người dừng lại ở đó.&lt;/p&gt;
&lt;p&gt;Vậy phải làm sao? kết quả khi search cũng trả về nhiều thư viện cho ngôn ngữ khác như C, C++, Golang... mà ngồi viết C sau 10 năm không viết thì rất căng.
Nhưng cuối cùng, Golang lại là giải pháp, nhờ vài năm code Go ăn tiền, sau 5 phút, ten ten có luôn kết quả:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;encoding/base64&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;log&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;strings&amp;quot;&lt;/span&gt;

    &lt;span class="s"&gt;&amp;quot;github.com/xxtea/xxtea-go/xxtea&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;encodedString&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SDZcVdXvZHhKkxopTPYbTvmxTHwFZyyvnutAwsjijXwDqeOg&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;originalStringBytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;base64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StdEncoding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DecodeString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;encodedString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Some error occured during base64 decode. Error %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1234567890&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;keyNow&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="nx"&gt;decrypt_data&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xxtea&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;originalStringBytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nb"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyNow&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;decrypt_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SNYK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;decrypt_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://gist.github.com/hvnsweeting/b8d518fdd67b85e9bf9f6a16af6221af"&gt;Code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;kết luận ở đây là thành thạo thêm một ngôn ngữ backup phổ biến như
C/C++/Java/C#/Golang sẽ rất hữu ích khi không dùng được Python. Nói thì dễ, chứ
thành thạo 1 ngôn ngữ đến mức dùng được lúc áp lực thời gian không phải chuyện
ai cũng có thời gian/tiền của đầu tư, giải pháp khác có vẻ dễ hơn là kiếm team
member với tool set khác nhau.&lt;/p&gt;
&lt;p&gt;PS: lib &lt;code&gt;xxtea-py&lt;/code&gt; sau khi cài &lt;code&gt;sudo apt install -y build-essential python3-dev&lt;/code&gt;
và &lt;code&gt;pip install cffi xxtea-py&lt;/code&gt; trên Ubuntu 20.04, chạy được ra kết quả&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xxtea&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SDZcVdXvZHhKkxopTPYbTvmxTHwFZyyvnutAwsjijXwDqeOg&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decodestring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xxtea&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}{}{}{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SNYK&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Linux/system&lt;/h2&gt;
&lt;h3&gt;All your flags are belong to root - Linux CLI&lt;/h3&gt;
&lt;p&gt;Bài cho 1 user &lt;code&gt;u&lt;/code&gt;, password và 1 địa chỉ để SSH vào.
Sau khi login, thấy như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;all-your-flags-are-belong-to-root-p4j0:~$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;gõ &lt;code&gt;ls&lt;/code&gt; không thấy file gì. &lt;code&gt;cd&lt;/code&gt; lung tung, tới &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt; thấy file &lt;code&gt;/flag&lt;/code&gt; nhưng file này chỉ &lt;code&gt;root&lt;/code&gt; mới đọc được.&lt;/p&gt;
&lt;p&gt;Gõ thử &lt;code&gt;sudo&lt;/code&gt; không có, gõ &lt;code&gt;su -l&lt;/code&gt; để
trở thành root nhận được 1 message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;all-your-flags-are-belong-to-root-p4j0:/$ su -l
su: must be suid to work properly

$ ls -la &lt;span class="sb"&gt;`&lt;/span&gt;which su&lt;span class="sb"&gt;`&lt;/span&gt;
lrwxrwxrwx    &lt;span class="m"&gt;1&lt;/span&gt; root     root            &lt;span class="m"&gt;12&lt;/span&gt; Jun &lt;span class="m"&gt;15&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt;:34 /bin/su -&amp;gt; /bin/busybox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File su này khá khác thường so với máy bình thường:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~$ ls -la `which su`
-rwsr-xr-x 1 root root 67816 Jul 21  2020 /usr/bin/su
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để từ user thường chiếm được quyền root đọc file /flag, cần "làm cách nào đó", và lời gợi ý là &lt;strong&gt;suid&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SUID&lt;/code&gt; là khái niệm ít phổ biến với người dùng CLI thông thường, họ học hết chmod 755 777 400 là khá đủ rồi.
&lt;code&gt;SUID&lt;/code&gt; là một giá trị đặc biệt để cấp quyền cho user, khi user chạy chương trình sẽ dùng UID của người sở hữu file thay vì UID của user, hay
nói cách khác, trở thành người sở hữu / "chiếm quyền" trong lúc chạy chương trình này.
Khi chmod, set SUID sử dụng số &lt;code&gt;4&lt;/code&gt; trước số chmod thông thường. Ví dụ &lt;code&gt;4755&lt;/code&gt;.
Lệnh &lt;code&gt;su&lt;/code&gt; ở trên là 1 ví dụ có SUID.
Lý do mình biết tới SUID, do công việc trước đây có viết một chương trình thực hiện gửi ICMP (ping), mà lại yêu cầu quyền root. Trong khi bình thường gõ lệnh ping thì không phải sudo/su bao giờ. Hóa ra &lt;a href="https://security.stackexchange.com/a/222800/11544"&gt;lệnh ping (ngày xưa) set SUID&lt;/a&gt; (giờ ko set nữa).&lt;/p&gt;
&lt;p&gt;Dùng &lt;code&gt;find&lt;/code&gt; tìm trên máy các file có set SUID:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ find / -perm -4000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tìm thấy file lệnh &lt;code&gt;curl&lt;/code&gt;. &lt;code&gt;curl&lt;/code&gt; là chương trình thường dùng để gửi HTTP request, nó cũng đọc được file khi thay &lt;code&gt;http://&lt;/code&gt; bằng &lt;code&gt;file://&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;all-your-flags-are-belong-to-root-p4j0:/$ curl file:///flag
SNYK{06b0e0ae4995af71335eda2882fecbc5008b01d95990982b439f3f8365fc07f7}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;PS: Nhìn lại, nếu hiểu ý của đề thì đó là lời gợi ý file flag nằm ở &lt;code&gt;/&lt;/code&gt; (root).&lt;/p&gt;
&lt;p&gt;Ref&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://security.stackexchange.com/a/222800/11544"&gt;https://security.stackexchange.com/a/222800/11544&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/sysadmin/suid-sgid-sticky-bit"&gt;https://www.redhat.com/sysadmin/suid-sgid-sticky-bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linuxjournal.com/content/gettin-sticky-it"&gt;https://www.linuxjournal.com/content/gettin-sticky-it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linuxnix.com/suid-set-suid-linuxunix/"&gt;https://www.linuxnix.com/suid-set-suid-linuxunix/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Robert Louis Stevenson - docker&lt;/h3&gt;
&lt;p&gt;Đề cho 1 file Docker image chứa "kho báu". Tải file này về,
không nhớ chính xác là tên gì, tạm gọi là &lt;code&gt;file.tar&lt;/code&gt;.
Bản chất các file "chương trình"/"data" trên máy tính thường là một dạng file archive/nén như zip/tar.
Docker image cũng vậy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# tar xf ../file.tar
# grep -Rin SNYK .
Binary file ./b3b0b5528b213a9d35315784c9907fdeb5d8bf89a0bb012ee63546b3a1c2e10b/layer.tar matches
# tar xf .././b3b0b5528b213a9d35315784c9907fdeb5d8bf89a0bb012ee63546b3a1c2e10b/layer.tar
# grep -Rin SNYK
ak/pp/tv/bc/22/flag:1:SNYK{23acc4111e1905ba1832cab7f1660284e3d1b91d3c2ead7bcec41ee8a4bd5ce9}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ref:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/2012/09/nen-giai-nen-bang-command-line-trong.html"&gt;https://www.familug.org/2012/09/nen-giai-nen-bang-command-line-trong.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moby/moby/blob/master/image/spec/v1.2.md#combined-image-json--filesystem-changeset-format"&gt;https://github.com/moby/moby/blob/master/image/spec/v1.2.md#combined-image-json--filesystem-changeset-format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hvnsweeting/pocker"&gt;https://github.com/hvnsweeting/pocker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="grep: https://www.familug.org/2012/10/vai-combo-lenh-de-nho-d-se-uoc-update.html"&gt;grep: https://www.familug.org/2012/10/vai-combo-lenh-de-nho-d-se-uoc-update.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS: Robert Louis Stevenson là tác giả của truyện "đảo giấu vàng" (Treasure Island)&lt;/p&gt;
&lt;h2&gt;Steganography (stego - giấu tin trong ảnh)&lt;/h2&gt;
&lt;h3&gt;qrrr&lt;/h3&gt;
&lt;p&gt;via &lt;a href="https://github.com/khanhduy8"&gt;khanhduy8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="qr" src="http://pp.pymi.vn/images/ctf_qrrr.png"&gt;&lt;/p&gt;
&lt;p&gt;Bài cho một file ảnh QR đủ màu sắc.
Lấy zalo ra quét thử không được, như vậy file này thực ra không phải QR đúng chuẩn.
Nhìn vào màu sắc của hình thì có vẻ như QR này gồm 3 mã QR tương ứng với 3 đoạn mà khi ghép lại với nhau ta có được flag.
OK. Giờ dùng một công cụ đơn giản để xử lý file ảnh này. Link Tool: &lt;a href="https://stegonline.georgeom.net/upload"&gt;stegonline.georgeom.net&lt;/a&gt;
Một file ảnh màu RGB này có 3 bit planes là (Red, Green, Blue).
Thử với plane Red với giá trị là 6/8 &lt;a href="https://i.ibb.co/zX5y40c/red.png"&gt;ta có&lt;/a&gt;,
trông có vẻ ổn nhưng với ảnh QR để quét thì ta cần reverse lại màu. Sau khi reverse ta được&lt;/p&gt;
&lt;p&gt;&lt;img alt="reversed" src="http://pp.pymi.vn/images/ctf_qrrr2.png"&gt;&lt;/p&gt;
&lt;p&gt;Quét mã này ra: &lt;code&gt;12d99aa3a92f1abbb7d40786&lt;/code&gt;
Do không có {} nên đây chắc là đoạn giữa
Tương tự thử với Green 6 được: SNYK{6947bd4818ffc1768f2
Với Green 7: 5ff8d4e4958d8007a3897}
Ghép 3 đoạn lại ra flag: &lt;code&gt;SNYK{6947bd4818ffc1768f212d99aa3a92f1abbb7d407865ff8d4e4958d8007a3897}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PS: ngày hôm sau, khanhduy8 nhận ra qrrr là lời gợi ý về 3 mã qr.&lt;/p&gt;
&lt;p&gt;PPS: hvn dùng Firefox trên Android mở ra ngay phần đuôi trong 3 mã, kết luận: không dùng zalo.&lt;/p&gt;
&lt;h2&gt;Exploit (khai thác lỗ hổng bảo mật)&lt;/h2&gt;
&lt;h3&gt;Invisible Ink - javascript&lt;/h3&gt;
&lt;p&gt;via &lt;a href="https://github.com/khanhduy8"&gt;khanhduy8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bài này cho 1 link web và một &lt;a href="http://pp.pymi.vn/ctf/index.js"&gt;file source code&lt;/a&gt;, 1 file &lt;a href="http://pp.pymi.vn/ctf/package.json"&gt;package.json&lt;/a&gt;.
Có thể đọc source, thấy nghi nghi rồi google thư viện &lt;code&gt;lodash&lt;/code&gt;, nhưng pro @hvn
setup &lt;a href="https://docs.snyk.io/"&gt;công cụ của Snyk&lt;/a&gt;
để quét rồi nên ta có kết quả vulnerbility&lt;/p&gt;
&lt;p&gt;&lt;img alt="snyk scan" src="http://pp.pymi.vn/images/ctf_snyk_scan.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Chú ý đến vul thứ 2. Đây là PoC của exploit vul này &lt;a href="https://snyk.io/vuln/SNYK-JS-LODASH-450202"&gt;Prototype Pollution in lodash | Snyk&lt;/a&gt;
Trong file source code có đoạn check:
&lt;code&gt;if(output.flag)&lt;/code&gt;
nếu &lt;code&gt;true&lt;/code&gt; sẽ response giá trị của flag
biến output hiện tại đang là:
&lt;code&gt;output = {}&lt;/code&gt; nên sẽ không trả về kết quả chúng ta cần
Trong source code có sử dụng Unsafe Object recursive merge&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;foreach&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;exists&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;both&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;property&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;trong đó target là output còn source là request nên chỉ cần thay request bình thường từ:
&lt;code&gt;{"message": "ping"}&lt;/code&gt;
sang
&lt;code&gt;{"constructor": {"prototype": {"flag": true}}}&lt;/code&gt;
khi này thì Object đã bị thêm vào thuộc tính &lt;code&gt;flag:true&lt;/code&gt;
Do đó &lt;code&gt;output.flag&lt;/code&gt; sẽ trả về true. Ta có response chứa flag:
&lt;code&gt;SNYK{6a6a6fff87f3cfdca056a077804838d4e87f25f6a11e09627062c06f142b10dd}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="snyk scan" src="http://pp.pymi.vn/images/ctf_lodash.jpeg"&gt;&lt;/p&gt;
&lt;h2&gt;Kết quả&lt;/h2&gt;
&lt;p&gt;Team PyMi xếp thứ 44 / 537 đội có ghi điểm, có lúc xếp thứ 24. 3h buồn ngủ quá
ae lăn quay hết nên tụt hạng mạnh :))&lt;/p&gt;
&lt;p&gt;&lt;img alt="44" src="http://pp.pymi.vn/images/ctf_rank.png"&gt;&lt;/p&gt;
&lt;p&gt;Theo đánh giá của 1 dân chơi thì giải CTF này thuộc loại trung bình, chưa khó,
nhưng không phải game chuyên nghiệp do chỉ kéo dài 10 tiếng và lợi thế về
múi giờ cho bên đông Mỹ (8PM giờ Việt Nam -&amp;gt; 6AM), các giải chuyên nghiệp sẽ
kéo dài 24h để đảm bảo công bằng.&lt;/p&gt;
&lt;p&gt;Đi thi với tinh thần cọ sát, các bài thi rất thú vị, học được nhiều điều mới
nên rất vui.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;CTF là một &lt;strong&gt;trò chơi&lt;/strong&gt; thú vị. Như mọi trò chơi khác, nó dễ gây nghiện, và
nghiện quá là không tốt. CTF có loại khó, có loại không khó tẹo nào, để bắt đầu
chơi, hãy học dùng lệnh trên Linux, lập trình 1 ngôn ngữ bất kỳ
và tham gia thử các game dễ như trên &lt;a href="https://overthewire.org/wargames/"&gt;overthewire.org&lt;/a&gt;
hay khó hơn là &lt;a href="https://capturetheflag.withgoogle.com/beginners-quest"&gt;Google CTF beginners quest&lt;/a&gt;
chơi nhiều là khác quen, và làm quen với chuyện "không phải bài nào mình cũng giải được".&lt;/p&gt;
&lt;h2&gt;Updated 2022-02-10 - phần 2 by @pham&lt;/h2&gt;
&lt;h4&gt;Lời nói đầu&lt;/h4&gt;
&lt;p&gt;Đây là một giải CTF của snyk.io - một tổ chức phát triển platform dạng "Audit source code", như nhận định ban đầu thì các task thiên về dạng programming, misc, và một số bài là lỗ hổng web mức độ medium.&lt;/p&gt;
&lt;p&gt;Trong giải thì mình khá là phế khi không giải được mấy task quan trọng, mặc dù đã nhìn ra cách giải, nhưng payload không hiểu sao không work, thật là buồn, thôi năm sau phục thù cùng anh em&lt;/p&gt;
&lt;p&gt;Sau cuộc thi thì mình không viết writeup ngay, đến giờ viết lại thì nội dung không được trọn vẹn, ae thông cảm :)&lt;/p&gt;
&lt;h4&gt;Task Magician&lt;/h4&gt;
&lt;p&gt;Đây là một task old-school về &lt;code&gt;PHP Type Juggling Vulnerabilities&lt;/code&gt;
dạng như:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;240610708&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;QNKCDZO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do không sử dụng toán tử &lt;code&gt;===&lt;/code&gt; (giống nhau về cả value và type) mà sử dụng &lt;code&gt;==&lt;/code&gt;  (chỉ cần giống nhau về value), ta hoàn toàn có thể tìm được strings có md5 thỏa mãn điều kiện bài toán.&lt;/p&gt;
&lt;p&gt;Tham chiếu thêm tại:
&lt;a href="https://www.netsparker.com/blog/web-security/php-type-juggling-vulnerabilities/"&gt;https://www.netsparker.com/blog/web-security/php-type-juggling-vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Task not_hot_dog&lt;/h4&gt;
&lt;p&gt;Task cung cấp cho mình bộ ba &lt;code&gt;n,e,c&lt;/code&gt; ta có thể biết ngay đây là một bài attack RSA, với c là bản mã, sau khi giải mã ra sẽ thu được FLAG.&lt;/p&gt;
&lt;p&gt;Do khi implement RSA họ sử dụng e lớn, nên sẽ bị ảnh hưởng bởi  Wiener attack (đây cũng là dạng old-school RSA trong các giải CTF)
Sử dụng công cụ tại: https://github.com/orisano/owiener để thu được flag.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;owiener&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;387825392787200906676631198961098070912332865442137539919413714790310139653713077586557654409565459752133439009280843965856789151962860193830258244424149230046832475959852771134503754778007132465468717789936602755336332984790622132641288576440161244396963980583318569320681953570111708877198371377792396775817&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;609983533322177402468580314139090006939877955334245068261469677806169434040069069770928535701086364941983428090933795745853896746458472620457491993499511798536747668197186857850887990812746855062415626715645223089415186093589721763366994454776521466115355580659841153428179997121984448771910872629371808169183&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;owiener&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;40127490441880177477224469176371044914847896019034308382923938039797354608313&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Task Browser preview&lt;/h4&gt;
&lt;p&gt;&lt;img alt="done" src="http://pp.pymi.vn/images/browser_preview.png"&gt;&lt;/p&gt;
&lt;p&gt;Với tên và cách setup task này thì có thể thấy đây là một task về bug SSRF (Server-side request forgery)
SSRF như tên gọi thì attacker sẽ khiến cho server thực hiện những request tùy ý (tùy vào từng trường hợp mà các protocol sẽ là http/dns/ftp/smpt/gopher...) như vậy khi có bug SSRF chúng ta sẽ bypass được các bộ filter về source IP  - do request đến từ chính server (localhost)&lt;/p&gt;
&lt;p&gt;Chức năng của web là nhập vào một URL, ta sẽ preview được nội dung trang web đó.
URL phải validate dạng như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;isUrlValid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Pattern&lt;/span&gt; &lt;span class="n"&gt;domainPattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;^https?://[a-z-0-9]+[.][a-z]+.*$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CASE_INSENSITIVE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Matcher&lt;/span&gt; &lt;span class="n"&gt;matcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;domainPattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đọc source thì thấy tiếp  server có handler ở port 7654, có thể read flag thông qua phương thức này.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DebugServer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;HttpServer&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HttpServer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;InetSocketAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7654&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/flag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FlagHandler&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setExecutor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Như vậy ý đồ là quá rõ  ràng, mình sẽ nhập vào một URL dạng localhost:7654/flag để get flag, URL làm sao thỏa mãn được bộ filter trên là OK.
Mình sử dụng URL dạng: http://domain.localhost:7654/flag
Có thể kham khảo các cách &lt;code&gt;bypass localhost&lt;/code&gt; của hacktrick
https://book.hacktricks.xyz/pentesting-web/ssrf-server-side-request-forgery&lt;/p&gt;
&lt;h4&gt;Electronbuzz&lt;/h4&gt;
&lt;p&gt;grep nội dung là ra được FLAG.&lt;/p&gt;
&lt;h4&gt;Instant flag checker&lt;/h4&gt;
&lt;p&gt;Task này mình cũng không còn nhớ rõ đề và script hôm đó viết, chắc hôm đó giải lẹ qua nên viết console luôn, không lưu lại file.&lt;/p&gt;
&lt;p&gt;Về ý tưởng của bài này là dạng bruteforce để thu được flag, vậy tại sao để bruteforce được thành công ?&lt;/p&gt;
&lt;p&gt;Đó là sử dụng time-based, các giá trị đúng sẽ có response time khác với với các giá trị sai.
Trong những vấn đề mà server không phản hồi cho mình nội dung response (tức là bị blind) thì việc áp dụng kỹ thuật time-based (bắt server thực hiện các heavy task) hoặc sử dụng kỹ thuật outbound (đẩy http request hay dns request ra public server khác) thực sự hữu ý.&lt;/p&gt;
&lt;h4&gt;Tổng kết&lt;/h4&gt;
&lt;p&gt;Chân thành cảm ơn các anh em @bác Hưng, @đăng hoàng, @Duy Hồ, @ Khang lê hôm đó đã thức đêm làm cùng.
Hy vọng năm sau ae sẽ phục thì dành được rank cao hơn (target top 20)&lt;/p&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="ctf"></category><category term="hacking"></category><category term="python"></category><category term="docker"></category><category term="regex"></category><category term="golang"></category><category term="stego"></category><category term="javascript"></category></entry><entry><title>Python lên sao kê chậm - làm web được không?</title><link href="http://pp.pymi.vn/article/slow/" rel="alternate"></link><published>2021-09-11T00:00:00+07:00</published><updated>2021-09-11T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-09-11:/article/slow/</id><summary type="html">&lt;p&gt;Python chạy chậm hơn các ngôn ngữ lập trình khác nhưng có đủ nhanh cho bạn?&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://pymi.vn"&gt;Pymi.vn&lt;/a&gt; là một đơn vị đào tạo Python thực chiến ở Việt Nam,
học xong đi làm luôn. Chúng tôi đưa thẳng vấn đề với học viên
một sự thật về Python mà không hề giấu diếm: Python &lt;strong&gt;chạy&lt;/strong&gt; chậm hơn (hầu hết) các
ngôn ngữ lập trình khác. Điều này được đưa vào bài học và học viên được
tự tay đo xem máy của mình tính được bao nhiêu phép +1 trong một giây. Xem kết quả tại: &lt;a href="https://cpu.pymi.vn/"&gt;cpu.pymi.vn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kết quả trung bình ở khoảng 15-30 triệu phép cộng / giây với các máy tính Intel i3 i5 i7.
Để làm mốc so sánh, code C tương tự có thể tính khoảng 1 tỷ phép cộng / giây (30-70x).&lt;/p&gt;
&lt;p&gt;Đa số người mới đi học Python đều không hề biết chuyện này, họ đi học vì sự hot,
sự đơn giản,
ứng dụng khắp nơi của Python từ AI ML, DeepLearning, Blockchain, ...etc. Điều ấy
cho thấy một phần quan trọng về tính chất của người dùng: chọn ngôn ngữ lập trình
không phải vì nó CHẠY nhanh, họ không tìm học C/C++ hay Fortran.&lt;/p&gt;
&lt;p&gt;Trong đó mâu thuẫn hơn cả, là ML/DeepLearning, lĩnh vực cần tính toán cực nhiều,
lại dùng Python phổ biến nhất.
Mâu thuẫn này thường để dành hỏi phỏng vấn các "data scientist" xem có hiểu tại
sao không? Còn với bạn đọc, chúng tôi để dành câu trả lời ở cuối bài.&lt;/p&gt;
&lt;p&gt;&lt;img alt="fast" src="https://images.unsplash.com/photo-1555980483-93e7b3529e1a?ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;fm=jpg&amp;amp;crop=entropy&amp;amp;cs=tinysrgb&amp;amp;dl=kiril-dobrev-UB0QiVPsXgc-unsplash.jpg&amp;amp;w=800"&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;Photo by &lt;a href="https://unsplash.com/@kirildobrev?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"&gt;Kiril Dobrev&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/vietnam-hanoi?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Để so sánh tốc độ, người dùng thực hiện các "benchmark", giải một bài toán cụ thể
và mang các phương án (ngôn ngữ/framework) ra so.&lt;/p&gt;
&lt;p&gt;Trang web
&lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/"&gt;https://benchmarksgame-team.pages.debian.net/benchmarksgame/&lt;/a&gt;
thực hiện giải các bài toán/thuật toán cần tính toán nhiều và đưa ra kết quả.
Python trong bảng so sánh này, chỉ nhanh hơn hai ngôn ngữ phổ biến: Perl và Ruby.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest-more.svg" width="800"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/box-plot-summary-charts.html"&gt;Top 4 đầu bảng: C++, C, Rust, Fortran&lt;/a&gt;,
chú ý dòng kết luận quan trọng trên trang viết:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's important to be realistic: most people don't care about program performance most of the time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Python trong làm web&lt;/h2&gt;
&lt;h3&gt;Trên thế giới&lt;/h3&gt;
&lt;p&gt;Trang web viết bằng Python có lượng người truy cập lớn nhất thế giới hiện nay
có lẽ là Instagram.com - mạng xã hội hình ảnh ban đầu là 1 startup, sau đó
đã được Facebook mua lại.&lt;/p&gt;
&lt;p&gt;Tại thời điểm viết bài, Instagram.com đứng thứ 21 toàn cầu về lượt truy cập
trên bảng xếp hạng của &lt;a href="https://alexa.com"&gt;Alexa&lt;/a&gt;, sau Netflix.com, trước Microsoft.com.
Instagram engineer blog về Python tại &lt;a href="https://instagram-engineering.com/tagged/python"&gt;https://instagram-engineering.com/tagged/python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Một số ví dụ khác như &lt;a href="https://eng.uber.com/building-tincup-microservice-implementation/"&gt;Uber core dùng Python&lt;/a&gt;,
&lt;a href="https://dropbox.tech/tag-results.python"&gt;DropBox dùng Python&lt;/a&gt;,
hay &lt;a href="https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html"&gt;Youtube trước khi Google mua lại dùng Python&lt;/a&gt;
phục vụ hàng triệu request mỗi giây.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The front-end server that drives youtube.com and YouTube’s APIs is primarily
written in Python, and it serves millions of requests per second!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Ở Việt Nam&lt;/h3&gt;
&lt;p&gt;Tại thời điểm viết bài 2021-09-11, Vnexpress.net là trang web của Việt Nam
đứng thứ #4 VietNam và #396 toàn cầu trên &lt;a href="https://www.alexa.com/topsites/countries/VN"&gt;Alexa.com&lt;/a&gt;
3 trang top VN là Google, Youtube, Facebook. Nếu xem tiếp top 50 Việt Nam,
các tên hầu hết là các trang báo mạng, hay thương mại điện tử lớn như Shopee,
Lazada, Tiki.
Các trang này viết bằng công nghệ nào không rõ, nhưng rõ ràng là lượt truy cập
đều ít hơn Instagram đáng kể.&lt;/p&gt;
&lt;h3&gt;Các đơn vị đo tốc độ trang web&lt;/h3&gt;
&lt;h4&gt;Request per seconds (RPS) - throughput&lt;/h4&gt;
&lt;p&gt;RPS - có nơi viết là reqs/s, thường là đơn vị chính dùng để đo xem 1 trang web
có thể phục vụ được bao nhiêu yêu cầu mỗi giây. RPS còn có tên khác là &lt;a href="https://www.techempower.com/blog/2016/02/10/think-about-performance-before-building-a-web-application/"&gt;"throughput"&lt;/a&gt;.
Để bạn đọc hình dung được độ lớn của RPS tại các website thế nào, sau đây là vài ví dụ:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Năm 2020, chương trình Rap Việt đạt kỷ lục có lượng người xem cùng lúc &lt;a href="https://tienphong.vn/thuc-hu-cau-chuyen-rap-viet-lap-ki-luc-nguoi-xem-cao-nhat-the-gioi-post1290225.tpo"&gt;cao
nhất tại Việt Nam với con số
1.051.000&lt;/a&gt;...
cho thấy Youtube chạy ngon lành thế nào.
Đó là đỉnh cao tại Việt Nam, đất nước ~ 100 triệu dân, thì max là 1% xem cùng
một lúc (không ít người ở nước ngoài). Đừng tưởng tượng nước có 100 triệu dân
thì có cái gì 50 triệu người cùng làm một lúc.&lt;/li&gt;
&lt;li&gt;6/9/2021, &lt;a href="https://tuoitre.vn/chu-tich-ubnd-tp-hcm-tra-loi-truc-tuyen-vung-xanh-duoc-di-cho-1-tuan-lan-mo-dan-mot-so-dich-vu-20210906184222848.htm"&gt;chủ tịch thành phố HCM lên livestream giải đáp thắc mắc của người
dân&lt;/a&gt;
, có thể đoán hầu hết chỉ có người dân TPHCM mới xem, lượng view chụp trong ảnh là 74k,
trên tổng &lt;a href="https://tuoitre.vn/toc-do-tiem-vac-xin-o-tp-hcm-dan-tang-cao-da-co-hon-1-trieu-nguoi-tiem-mui-2-20210911085618942.htm"&gt;dân số &amp;gt;=18 tuổi TPHCM cỡ khoảng 7.2 triệu người&lt;/a&gt; - tại thời điểm hầu hết
người dân đều ở nhà giãn cách xã hội theo chỉ thị 16, cho thấy Facebook livestream ngon lành thế nào.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mangadex.dev/mangadex-v5-infrastructure-overview/"&gt;mangadex.org với trung bình ~2000 rps&lt;/a&gt; - #5,895 trên Alexa.com.
soha.vn - 1 trang báo mạng khá lớn của VCCorp, #50 VN, xếp #5,789 thế giới - gần với mangadex.
Nhaccuatui.vn - trang nghe nhạc lớn nhì, ba tại Việt
Nam, chỉ xếp #14,770. Vậy trừ khi bạn làm tại các công ty có website chạy top
50 VN, bạn mới có 2000 RPS.&lt;/li&gt;
&lt;li&gt;2000 RPS =&amp;gt; 2000 * 86400 = 172.800.000 requests/day. &lt;strong&gt;172 triệu lượt truy cập&lt;/strong&gt;
mỗi ngày. Trang web của bạn/ công ty/ startup của bạn liệu có được 86400 reqs/day? (1 RPS).
Việc có một website với trung bình 2000RPS - top 6000 thế giới, khó hơn nhiều nhiều nhiều
lần so với việc viết code xử lý 2000 RPS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mark.mcnally.je/blog/post/My%20%C2%A34%20a%20month%20server%20can%20handle%204.2%20million%20requests%20a%20day"&gt;Một lập trình viên đâu đó ngồi đo&lt;/a&gt; thử với 1 cái máy ảo cloud 1CPU 2GB RAM £4 (5.5 USD == 126.000VND).
có thể chạy web Django với 54.3 RPS (54 * 86400 == 4.665.600 reqs/day),
thêm cache sẽ được 63.50RPS, và nếu chỉ có HTML/JS là 180.54 RPS.
Mức giá này khá rẻ, tại &lt;a href="https://bit.ly/dohvn"&gt;DigitalOcean&lt;/a&gt;,
cấu hình tương đương có giá 10USD/tháng. (Note: link refer, đăng ký bằng link
này được $100 miễn phí cho bạn, $20 cho Pymi.vn).
hay &lt;a href="https://bizflycloud.vn/cloud-server/bang-gia"&gt;BIZFLY CLOUD&lt;/a&gt; của Việt Nam cũng giá ~200.000.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chú ý: việc tính RPS thường tính trung bình, nhưng trên thực tế, mỗi website có
một "pattern" truy cập khác nhau. Ví dụ tại một vài thời điểm trong ngày, sẽ
có nhiều người truy cập đọc báo hơn là lúc 4h sáng. Các website thương mại điện
tử sẽ luôn "peak" khi chạy các khuyến mãi 6-6, 9-9, 11-11, black friday...
Con số mà các lập trình viên/sysadmin quan tâm là RPS lúc peak, số truy cập
đồng thời cao nhất mà hệ thống chịu được.&lt;/p&gt;
&lt;h4&gt;Concurrent User (CCU) - đơn vị mà chủ doanh nghiệp quan tâm&lt;/h4&gt;
&lt;p&gt;RPS mang tính chất con số về mặt kỹ thuật, nhưng khi truy cập 1 website, người
dùng thường thực hiện nhiều hơn 1 request. Ví dụ khi truy cập
&lt;a href="https://pymi.vn"&gt;https://pymi.vn&lt;/a&gt;, trình duyệt
sẽ thực hiện 8 requests (các file HTML/CSS/Javascript/ảnh), còn khi truy cập
vnexpress.net, trình duyệt thực hiện tới 73 requests.&lt;/p&gt;
&lt;p&gt;Chủ doanh nghiệp, website, chỉ quan tâm con số mang tính chất kinh tế,
là có bao nhiêu người dang dùng mà không quan tâm có bao nhiêu request, vậy
nên con số Concurrent User (CCU - số người truy cập cùng lúc) ra đời.
Trong ví dụ Rap Việt trên, có 1 triệu người xem cùng lúc - 1 triệu CCU.
1 triệu CCU tương ứng với tối thiểu 1 triệu RPS, nhưng thường RPS cao hơn nhiều lần.&lt;/p&gt;
&lt;p&gt;Một điều đáng nói khác, rằng không phải 73 requests đều gọi vào vnexpress.net mà
gọi đến các trang khác chứa ảnh, video...&lt;/p&gt;
&lt;p&gt;Khi nói về CCU, chủ doanh nghiệp cũng không quan tâm hệ thống sử dụng bao
nhiêu máy tính ở đây. Nói 1 triệu RPS, không có nghĩa là phải dùng 1 máy,
1 triệu RPS/máy là rất cao, trên thế giới &lt;a href="https://blog.whatsapp.com/1-million-is-so-2011/?lang=en"&gt;Whatsapp đã làm được 1m TCP conn từ
2011&lt;/a&gt;,
&lt;a href="https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections"&gt;Elixir Phoenix fullstack web-framework chạy 2 triệu websocket
connections&lt;/a&gt;
năm 2015. Nhưng không ai cấm bạn chạy 200 máy sau load-balancer cả.
1.000.000 / 200 = 5.000 RPS.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/C10k_problem"&gt;C10k&lt;/a&gt; là 1 vấn đề rất năm 2000, để
xử lý 10.000 connection, cùng với sự ra đời của NGINX.&lt;/p&gt;
&lt;h4&gt;Response time - latency, p95, p99&lt;/h4&gt;
&lt;p&gt;Một đơn vị quan trọng khác khi nói về tốc độ website là &lt;strong&gt;response time&lt;/strong&gt; tên
khác là latency - thời
gian tính tức lúc người dùng gửi request đi cho tới khi nhận được nội dung trang web.
Con số này nói đơn giản chính là sự nhanh/chậm của website.
Response time là 10 giây thì người dùng sau khi vào thanh địa chỉ gõ enter, 10
giây sau mới nhìn thấy nội dung trang web.
(để thấy TOÀN BỘ nội dung trang web, người ta dùng thêm đơn vị đo "load time")&lt;/p&gt;
&lt;p&gt;Nhưng nếu kết quả response lúc nhanh lúc chậm thì biết lấy số nào? đó là lúc
cần lôi bộ môn &lt;a href="https://medium.com/pymi/d%C3%B9ng-python-%C4%91%E1%BB%83-h%E1%BB%8Dc-th%E1%BB%91ng-k%C3%AA-8e41dfdaaf97"&gt;thống
kê&lt;/a&gt;
ra để trình bày. Cách đơn giản nhất là lấy trung bình cộng,
nghe thì dễ, nhưng kết quả này thường vô dụng, bởi (99*2) 198 lần load 1s mà 2 lần 901s
thì trung bình là: (99 * 2 + 901 * 2)/200 == 10s.&lt;/p&gt;
&lt;p&gt;Cách làm phổ biến là dùng quantile 99 (hay 95) để đo: tức giá trị mà
99% các giá trị khác đều nhỏ hơn hoặc bằng, còn có tên gọi p99 (99th percentile).
Trong ví dụ trên, p99 là 1: &lt;code&gt;int(99/100 * 200 số) = 198&lt;/code&gt;, sắp xếp các số tăng
dần thì số thứ 198 có giá trị là 1,
p100 ít khi được nhắc tới, đó là số lớn nhất trong tập.
Xem thêm về quantile và percentile ở phần link tham khảo.&lt;/p&gt;
&lt;p&gt;Tại sao lại bỏ đi 1% như vậy? vì kết quả đo đạc có thể có các sai số do nhiều
lý do khác nhau và không có ý nghĩa với vấn đề (chậm do mạng bị cá mập cắn
trong 1 request, chẳng hạn).&lt;/p&gt;
&lt;p&gt;Giá trị latency gần 0ms là khủng, 100ms là tốt, 500ms là OK, vài giây là lởm,
nhiều giây là rất không ra gì:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;~0ms is superb; 100ms is good; 500ms is okay; a few seconds is bad; and several seconds may be approaching awful. - www.techempower.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Tốc độ lý thuyết&lt;/h3&gt;
&lt;p&gt;Tương tự website benchmark
tốc độ tính toán của các ngôn ngữ, có website benchmark các webframework:
&lt;a href="https://www.techempower.com/benchmarks/#section=data-r20"&gt;techempower&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tại đây, mỗi framework thực hiện 7 loại test và được chấm điểm, đầu bảng hầu hết
là C++ hay Rust, luôn dành chiến thắng về tốc độ, nhưng không mấy ai làm web
site bằng C++ cả.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nhớ rằng: Instagram dùng Django.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Các web framework phổ biến của Python hầu như đều ở phía dưới bảng xếp hạng,
ngang ngửa với Ruby/PHP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Django (359/436)&lt;/li&gt;
&lt;li&gt;Flask (370/436)&lt;/li&gt;
&lt;li&gt;Ruby On Rails (377/436)&lt;/li&gt;
&lt;li&gt;PHP Lavarel (388/436)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Riêng FastAPI cùng khu với Elixir, NodeJS, Java&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go Gin (162/436)&lt;/li&gt;
&lt;li&gt;FastAPI (247/436)&lt;/li&gt;
&lt;li&gt;Elixir Phoenix (251/436)&lt;/li&gt;
&lt;li&gt;NodeJS Express MySQL (287/436)&lt;/li&gt;
&lt;li&gt;Java Spring (317/436)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vậy kết luận dùng &lt;a href="http://pp.pymi.vn/article/go/"&gt;Go&lt;/a&gt; chạy nhanh hơn và đập hết Django, Java, Ruby app đi viết
lại ?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Đừng!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kết quả của việc benchmark rất khó để đưa ra kết luận, và tốc độ thực sự phụ
thuộc vào bài toán cụ thể chứ không phải dựa và kết luận "hello world" của
framework.&lt;/p&gt;
&lt;p&gt;Dù điểm trung bình của Go + Gin framework (nhanh) hơn của FastAPI, nhưng
khi xem từng test cụ thể, như test data update (có sự ảnh hưởng lớn của database)
thì FastAPI bỏ xa xa xa Go + Gin. Website của bạn có update DB không? hầu hết là có, tùy trường
hợp. Khi chỉ đơn thuần tính toán và không động vào DB, Go rõ ràng dành chiến thắng. Xem thêm phần &lt;a href="https://github.com/tiangolo/fastapi/issues/1664#issuecomment-653580642"&gt;thắc mắc về tốc độ của FastAPI tại đây&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Các kết quả benchmark dễ dàng bị đảo ngược chỉ với vài thay đổi phụ thuộc bài toán, như
trường hợp benchmark Flask sau:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://calpaterson.com/async-python-is-not-faster.html"&gt;bài này benchmark kết luận async Python không nhanh hơn sync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.miguelgrinberg.com/post/ignore-all-web-performance-benchmarks-including-this-one"&gt;bài này chỉnh sửa lại 1 chút, và cho kết quả khác hoàn toàn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tác giả &lt;a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;Flask mega tutorial Miguel Grinberg&lt;/a&gt; chỉ đưa ra kết luận cuối cùng với tên bài viết:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ignore All Web Performance Benchmarks, Including This One&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Một bài viết khác thực hiện cải thiện website dùng &lt;a href="https://suade.org/dev/12-requests-per-second-with-python/"&gt;Flask + SQLAlchemy ORM từ 12RPS thành 75RPS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Trong các trang web, tốc độ của website phần lớn phụ thuộc vào database,
kiến trúc, cache, hơn là phụ thuộc vào tốc độ của web framework.&lt;/p&gt;
&lt;h3&gt;Load test Python&lt;/h3&gt;
&lt;p&gt;Cách để rút ra được kết quả chuẩn nhất, có ý nghĩa nhất là tự đo code của mình.
Công cụ để benchmark web site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ab (Apache benchmark tool) &lt;code&gt;sudo apt-get install apache2-utils&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rakyll/hey"&gt;Go hey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wg/wrk"&gt;C wrk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://locust.io/"&gt;Python Locust.io + webUI + distributed + graph report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thử benchmark code Flask+Gunicorn hello world, 1000 CCU:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/fast&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fast&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ gunicorn app:app -w &lt;span class="m"&gt;9&lt;/span&gt; -k gthread
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Rồi chạy &lt;code&gt;wrk&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./wrk -c &lt;span class="m"&gt;1000&lt;/span&gt; -d 10s http://localhost:8000/fast
Running 10s &lt;span class="nb"&gt;test&lt;/span&gt; @ http://localhost:8000/fast
  &lt;span class="m"&gt;2&lt;/span&gt; threads and &lt;span class="m"&gt;1000&lt;/span&gt; connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   &lt;span class="m"&gt;233&lt;/span&gt;.14ms   &lt;span class="m"&gt;61&lt;/span&gt;.78ms &lt;span class="m"&gt;371&lt;/span&gt;.49ms   &lt;span class="m"&gt;68&lt;/span&gt;.27%
    Req/Sec     &lt;span class="m"&gt;2&lt;/span&gt;.13k   &lt;span class="m"&gt;222&lt;/span&gt;.09     &lt;span class="m"&gt;2&lt;/span&gt;.75k    &lt;span class="m"&gt;67&lt;/span&gt;.50%
  &lt;span class="m"&gt;42372&lt;/span&gt; requests &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.08s, &lt;span class="m"&gt;6&lt;/span&gt;.47MB &lt;span class="nb"&gt;read&lt;/span&gt;
Requests/sec:   &lt;span class="m"&gt;4202&lt;/span&gt;.64
Transfer/sec:    &lt;span class="m"&gt;656&lt;/span&gt;.75KB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4200rps với latency avg 200ms, max cũng chỉ là 371ms.&lt;/p&gt;
&lt;p&gt;hay &lt;code&gt;ab&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$  ab -n &lt;span class="m"&gt;10000&lt;/span&gt; -c &lt;span class="m"&gt;1000&lt;/span&gt; http://localhost:8000/fast

Concurrency Level:      &lt;span class="m"&gt;1000&lt;/span&gt;
Requests per second:    &lt;span class="m"&gt;3706&lt;/span&gt;.73 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;

Percentage of the requests served within a certain &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;50&lt;/span&gt;%    &lt;span class="m"&gt;264&lt;/span&gt;
  &lt;span class="m"&gt;66&lt;/span&gt;%    &lt;span class="m"&gt;293&lt;/span&gt;
  &lt;span class="m"&gt;75&lt;/span&gt;%    &lt;span class="m"&gt;312&lt;/span&gt;
  &lt;span class="m"&gt;80&lt;/span&gt;%    &lt;span class="m"&gt;327&lt;/span&gt;
  &lt;span class="m"&gt;90&lt;/span&gt;%    &lt;span class="m"&gt;360&lt;/span&gt;
  &lt;span class="m"&gt;95&lt;/span&gt;%    &lt;span class="m"&gt;397&lt;/span&gt;
  &lt;span class="m"&gt;98&lt;/span&gt;%    &lt;span class="m"&gt;426&lt;/span&gt;
  &lt;span class="m"&gt;99&lt;/span&gt;%    &lt;span class="m"&gt;448&lt;/span&gt;
 &lt;span class="m"&gt;100&lt;/span&gt;%    &lt;span class="m"&gt;476&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;longest request&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Test trên&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;AMD Ryzen &lt;span class="m"&gt;3&lt;/span&gt; 4300U - &lt;span class="m"&gt;4&lt;/span&gt; cores - 8GB RAM

$ lsb_release -d&lt;span class="p"&gt;;&lt;/span&gt; python3 --version
Description:    Ubuntu &lt;span class="m"&gt;20&lt;/span&gt;.04.3 LTS
Python &lt;span class="m"&gt;3&lt;/span&gt;.8.10


Flask               &lt;span class="m"&gt;2&lt;/span&gt;.0.1
gunicorn            &lt;span class="m"&gt;20&lt;/span&gt;.1.0

$ ./wrk --version
wrk a211dd5 &lt;span class="o"&gt;[&lt;/span&gt;epoll&lt;span class="o"&gt;]&lt;/span&gt; Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2012&lt;/span&gt; Will Glozer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Python trong hệ thống&lt;/h2&gt;
&lt;p&gt;Vài trường hợp minh họa code Python viết rất nhanh và chạy đủ nhanh:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pp.pymi.vn/article/10x/"&gt;Khi sử dụng Kafka trong bài tăng tốc độ
10x&lt;/a&gt;, dùng thư viện
https://github.com/confluentinc/confluent-kafka-python, bên dưới thực chất gọi code C librdkafka,
thay Python bằng code Go &lt;a href="https://github.com/confluentinc/confluent-kafka-go/issues/490#issuecomment-655339047"&gt;không làm nhanh
hơn&lt;/a&gt;,
&lt;a href="https://github.com/confluentinc/confluent-kafka-go/issues/567"&gt;thậm chí còn chậm
hơn&lt;/a&gt;, giải pháp
có thể là
tìm một thư viện Kafka viết bằng Go rồi benchmark lại.&lt;/li&gt;
&lt;li&gt;Code C++ thường được coi là &lt;strong&gt;hiển nhiên&lt;/strong&gt; nhanh hơn Python, &lt;a href="https://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python?rq=1"&gt;nhưng phải biết
bật tắt đúng thứ không sẽ chậm hơn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/14205096/c11-regex-slower-than-python"&gt;c++11 regex slower than python - và nhớ rằng tuy nói là Python, nhưng rất nhiều chỗ của Python thực chất gọi code C bên dưới&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Python trong xử lý data&lt;/h2&gt;
&lt;p&gt;Các thư viện tính toán khoa học trong Python đều sử dụng các ngôn ngữ tính toán
nhanh bên dưới, như Numpy/Pandas dùng C, PyTorch/Tensorflow dùng C++. Kết hợp
với cú pháp Python ở trên, tạo nên sự hoàn hảo của cả 2 thế giới: code đẹp, đơn
giản của Python, và tính nhanh (gần) như C/C++/Fortran.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Đọc kết quả benchmark trên mạng rồi đưa ra kết luận là một việc làm rất nguy hiểm,
nên tự học cách benchmark cho trường hợp cụ thể của mình.&lt;/p&gt;
&lt;p&gt;Tốc độ của ngôn ngữ lập trình &amp;amp; framework trên thực tế thường không quan trọng
bằng: tốc độ phát triển tính năng/ dự án, chi phí bỏ ra để viết lại bằng
một ngôn ngữ X chạy nhanh hơn.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.techempower.com/blog/2016/02/10/think-about-performance-before-building-a-web-application/"&gt;techempower - Think about Performance Before Building a Web Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pingdom.com/blog/page-load-time-vs-response-time-what-is-the-difference/"&gt;page load time vs response time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Quantile"&gt;Quantile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Percentile"&gt;Percentile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tiangolo/fastapi/issues/1664#issuecomment-653580642"&gt;FastAPI is fast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/14205096/c11-regex-slower-than-python"&gt;c11-regex-slower-than-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python?rq=1"&gt;why-is-reading-lines-from-stdin-much-slower-in-c-than-python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="performance"></category><category term="benchmark"></category><category term="webframework"></category></entry><entry><title>Học Vật Lý với Python</title><link href="http://pp.pymi.vn/article/vatlipymi/" rel="alternate"></link><published>2021-07-24T00:00:00+07:00</published><updated>2021-07-24T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-07-24:/article/vatlipymi/</id><summary type="html">&lt;p&gt;Ôn tập môn điện dùng MicroPython trên ESP8266&lt;/p&gt;</summary><content type="html">&lt;p&gt;Trong không khí toàn dân ở nhà ôn tập môn Vật Lý vào năm Covid-19 thứ 2,
một "thầy giáo Python" cũng không thể giấu nổi tình yêu với môn học của tự nhiên
này và quyết chuyển sang mở lớp ôn tập môn điện.&lt;/p&gt;
&lt;p&gt;Sau 30 phút chăm chỉ và tập trung, các học viên sẽ có thể thắp sáng 1 cái
đèn (LED) sử dụng MicroPython trên vi xử lý ESP8266.&lt;/p&gt;
&lt;p&gt;&lt;img alt="hi" src="http://pp.pymi.vn/images/bulb.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Trong 3 môn học "tự nhiên" của trường phổ thông, Toán được cho là "công thức",
"trừu tượng", "khô khan",
thì Lý, Hóa lẽ ra phải gần hơn với thực hành.
Ở các trường học "dưới xuôi" có điều kiện, được thực hành trong phòng thí nghiệm,
chơi với mô hình,
thì với học sinh miền núi năm 200X chúng tôi, thứ thực hành duy nhất trong
môn Hóa là giấy quỳ tím thả vào axit chuyển sang đỏ,
còn môn Lý chắc là tự bật cái công tắc bóng đèn nhà mình.&lt;/p&gt;
&lt;p&gt;Cảnh báo: tác giả không có bằng cấp sư phạm môn Vật Lý, cũng không phải kỹ sư
điện.&lt;/p&gt;
&lt;p&gt;Vì là giờ học thực hành, nên học viên cố gắng kiếm thiết bị để làm theo nhé.&lt;/p&gt;
&lt;h2&gt;Chuẩn bị dụng cụ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Một thiết bị vi xử lý ESP 8266 (mức giá &amp;lt; 60.000 VND). Ví dụ &lt;a href="https://shopee.vn/M%E1%BA%A1ch-Thu-Ph%C3%A1t-WiFi-ESP8266-Wemos-D1-mini-(NodeMCU-Mini-D1)-c%C3%B3-k%C3%A8m-b%E1%BB%99-Jump-c%E1%BA%AFm-i.106323333.1791339648?position=11"&gt;Wemos D1 Mini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Máy tính có Python (tốt nhất là dùng hệ điều hành Ubuntu hay MacOS)&lt;/li&gt;
&lt;li&gt;1 Điện trở 220 Ohm (1000 VND?)&lt;/li&gt;
&lt;li&gt;2 dây nối (1000 VND?)&lt;/li&gt;
&lt;li&gt;1 đèn LED (1000 VND?)&lt;/li&gt;
&lt;li&gt;(Khuyến khích - cho đơn giản) hay mua một bộ kit cơ bản gồm cả 3 thứ trên với
  &lt;a href="https://www.cytrontech.vn/p-raspberry-pi-pico-basic-kit-without-pico"&gt;giá 95.000 VND&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Cài đặt MicroPython lên ESP8266&lt;/h2&gt;
&lt;p&gt;Làm theo hướng dẫn trong bài &lt;a href="http://pp.pymi.vn/article/micropython/"&gt;Dùng MicroPython với wifi board ESP-8266&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Mạch điện&lt;/h2&gt;
&lt;p&gt;Hình vẽ sử dụng &lt;a href="https://www.circuit-diagram.org/editor/"&gt;circuit-diagram&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pp.pymi.vn/images/circuit.svg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pp.pymi.vn/images/circuit_h.jpg" width=500&gt;
&lt;img src="http://pp.pymi.vn/images/circuit_topdown.jpg" width=300&gt;&lt;/p&gt;
&lt;h2&gt;Nối mạch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cắm 1 dây vào pin ghi chữ G của ESP8266, nối đầu dây còn lại vào 1 đầu của điện trở&lt;/li&gt;
&lt;li&gt;chân còn lại của điện trở nối vào chân ngắn của đèn LED&lt;/li&gt;
&lt;li&gt;chân dài của đèn LED nối vào pin D5.&lt;/li&gt;
&lt;li&gt;cắm điện cổng USB cho ESP8266.&lt;/li&gt;
&lt;li&gt;bật terminal, kết nối vào ESP8266 qua câu lệnh picocom:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo picocom /dev/ttyUSB0 --baud 115200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Gõ code Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;machine&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="mi"&gt;80000000&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;machine&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;led&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;led&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sẽ thấy đèn LED sáng sau khi &lt;code&gt;led.on()&lt;/code&gt; rồi tắt sau &lt;code&gt;led.off()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://pp.pymi.vn/images/circuit_on.webp" width=300&gt;&lt;/p&gt;
&lt;h2&gt;Pin là gì&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://www.wemos.cc/en/latest/_images/d1_mini_v3.1.0_1_16x16.jpg" width=300&gt;&lt;/p&gt;
&lt;p&gt;16 ô tròn nhỏ trong hình là 16 pin của mạch Wemos D1 Mini.&lt;/p&gt;
&lt;p&gt;Pin là điểm tiếp xúc kim loại, là nơi để vi xử lý tương tác với bên ngoài (như đọc/ghi "dữ liệu",...)
bật tắt bóng đèn, đọc thông tin từ các sensor (cảm biến) như đo nhiệt độ, ...&lt;/p&gt;
&lt;p&gt;Mỗi Pin có chức năng riêng, để biết mỗi mạch có pin nào làm gì, cần tìm tài liệu
của mạch đó (thường ở trang chủ) hoặc trong tài liệu kèm khi bán.
Theo &lt;a href="https://www.wemos.cc/en/latest/d1/d1_mini.html"&gt;wemos.cc&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| Pin  | Function                     | ESP&lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="c"&gt;8266 Pin |&lt;/span&gt;
&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;======&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;==============================&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;==============&lt;/span&gt;&lt;span class="nb"&gt;+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| TX   | TXD                          | TXD          |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| RX   | RXD                          | RXD          |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| A0   | Analog input&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; max 3&lt;/span&gt;&lt;span class="nt"&gt;.&lt;/span&gt;&lt;span class="c"&gt;2V       | A0           |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D0   | IO                           | GPIO16       |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D1   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; SCL                      | GPIO5        |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D2   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; SDA                      | GPIO4        |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D3   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; 10k Pull&lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="c"&gt;up              | GPIO0        |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D4   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; 10k Pull&lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="c"&gt;up&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; BUILTIN_LED | GPIO2        |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D5   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; SCK                      | GPIO14       |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D6   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; MISO                     | GPIO12       |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D7   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; MOSI                     | GPIO13       |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| D8   | IO&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; 10k Pull&lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="c"&gt;down&lt;/span&gt;&lt;span class="nt"&gt;,&lt;/span&gt;&lt;span class="c"&gt; SS        | GPIO15       |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| G    | Ground                       | GND          |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| 5V   | 5V                           | \&lt;/span&gt;&lt;span class="nb"&gt;-&lt;/span&gt;&lt;span class="c"&gt;           |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| 3V3  | 3&lt;/span&gt;&lt;span class="nt"&gt;.&lt;/span&gt;&lt;span class="c"&gt;3V                         | 3&lt;/span&gt;&lt;span class="nt"&gt;.&lt;/span&gt;&lt;span class="c"&gt;3V         |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| RST  | Reset                        | RST          |&lt;/span&gt;
&lt;span class="nb"&gt;+------+------------------------------+--------------+&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;GPIO là gì&lt;/h2&gt;
&lt;p&gt;General-Purpose Input/Output (GPIO) là khái niệm về mặt logic chứ không phải vật
lý như pin nói trên.&lt;/p&gt;
&lt;p&gt;Trong 16 pin của Wemos D1 mini, chỉ có 11 pin được gọi là digital pin D0-D8, G,
RX, TX tương ứng với các GPIO pin.
Chú ý cách đánh số khác nhau giữa pin vật lý (D5) so với GPIO pin (GPIO14),
chúng không có quy luật, để biết chính xác cần tra tài liệu cho từng mạch.&lt;/p&gt;
&lt;p&gt;Khi lập trình điều khiển các GPIO pin, có thể đổi chúng ở 2 trạng thái:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;high (on - 1)&lt;/li&gt;
&lt;li&gt;low (off - 0)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trên Wemos D1 mini, các digital pin đều có điện thế 3.3V khi high, 0V khi low.&lt;/p&gt;
&lt;p&gt;Pinout là tài liệu liệt kê nối pin trên mạch ứng với GPIO pin nào.&lt;/p&gt;
&lt;h2&gt;Resistor - điện trở&lt;/h2&gt;
&lt;p&gt;Resistor /rɪˈzɪstə/ điện trở, là thứ cản trở dòng điện. Trong bài này dùng để giảm
hiệu điện thế trước khi gặp đèn LED - tránh cháy nổ. Trên
resistor thường có 4 vạch màu (color band) trở lên với 10 màu để ký hiệu nó có
điện trở bao nhiêu Ω (đơn vị Ohm. Việt sub: ôm).&lt;/p&gt;
&lt;h3&gt;Cách đọc vạch màu trên điện trở&lt;/h3&gt;
&lt;p&gt;Hai vạch đầu đổi trực tiếp ra số, vạch tiếp theo là hệ số nhân, và vạch cuối cùng là
khả năng chịu đựng sai lệch tính theo phần trăm.&lt;/p&gt;
&lt;p&gt;Trong bài, sử dụng "đỏ đỏ nâu vàng":&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;đỏ(2) đỏ(2) nâu(x10) = 22 * 10 = 220Ω&lt;/li&gt;
&lt;li&gt;vàng = +-5%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cách nhớ các màu theo tiếng Anh:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bad Beer Rots Out Your Guts But Vodka Goes Well – Get Some Now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Bad - Black: 0&lt;/li&gt;
&lt;li&gt;Beer - Brown: 1&lt;/li&gt;
&lt;li&gt;Rots - Red: 2&lt;/li&gt;
&lt;li&gt;Out - Orange: 3&lt;/li&gt;
&lt;li&gt;Your - Yellow: 4&lt;/li&gt;
&lt;li&gt;Guts - Green: 5&lt;/li&gt;
&lt;li&gt;But - Blue: 6&lt;/li&gt;
&lt;li&gt;Vodka - Violet: 7&lt;/li&gt;
&lt;li&gt;Goes - Grey: 8&lt;/li&gt;
&lt;li&gt;Well - White: 9&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="http://pp.pymi.vn/images/resistors.jpg" width=600&gt;&lt;/p&gt;
&lt;h2&gt;LED là gì&lt;/h2&gt;
&lt;p&gt;Light-Emitting Diode (LED) - là một Diode (Việt sub: "đi ốt") có khả năng phát
ra ánh sáng. Trong tiếng Việt thường hay gọi là lét, nhưng trong tiếng Anh,
người ta vẫn đọc từng chữ cái L-E-D (Việt sub: eo-l i đi).&lt;/p&gt;
&lt;p&gt;LED phát ra ánh sáng nhờ việc electron
trong semiconductor (chất bán dẫn) kết hợp với các hố electron (nguyên tử mà bị
thiếu electron) sinh ra năng lượng ở dạng photon ánh sáng. Được phát minh từ
&lt;a href="https://en.wikipedia.org/wiki/Light-emitting_diode"&gt;1907 nhưng mãi tới 1962&lt;/a&gt;
mới được đưa vào sản xuất. Ngày nay LED là công nghệ phát sáng rất quan
trọng được dùng phổ biến để làm bóng đèn,&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nobelprize.org/prizes/physics/2014/summary/"&gt;Năm 2014, giải Nobel Vật Lý được trao cho nhóm phát minh ra LED ánh sáng xanh lam (blue)&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Các loại bóng đèn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bóng đèn dây tóc - loại bóng đèn đầu tiên trên thế giới, được phát minh đồng thời
&lt;a href="https://en.wikipedia.org/wiki/Edison_light_bulb"&gt;bởi Joseph Swan và Edison năm 1879&lt;/a&gt;,
dùng điện làm nóng dây tóc dẫn tới phát sáng.&lt;/li&gt;
&lt;li&gt;Đèn tuýp / đèn huỳnh quang (Fluorescent Lamp): đèn tuýp tên tiếng Anh là
Tubelight - nói đến hình dạng cái ống của nó. Nếu ngày nay
dịch như ngày xưa, ta sẽ lên &lt;code&gt;Diu Tuýp&lt;/code&gt; để xem clip. Loại đèn này sử dụng bột
phốt pho để phát sáng khi có các ánh sáng cực tím va vào. Ánh sáng cực tím
được tạo ra bằng cách phóng điện vào khí trơ (như Argon/Neon) làm thủy ngân bay hơi.
Đèn huỳnh quang có chứa thủy ngân, rất độc hại khi thải ra môi trường.&lt;/li&gt;
&lt;li&gt;Bóng đèn compact: compact tiếng Anh nghĩa là thu gọn/chặt lại. Cái tên được
giữ 1 phần gốc tiếng Anh, tên đầy đủ là compact fluorescent lamp (CFL). Về
mặt nguyên lý vẫn là đèn huỳnh quang, nhưng nhỏ gọn, cho hiệu năng cao hơn,
hay tiết kiệm điện hơn.&lt;/li&gt;
&lt;li&gt;Bóng đèn LED: bóng đèn sử dụng các LED để tạo ánh sáng trắng thay các công
nghệ nói trên. Đây là công nghệ hiện đại nhất ngày này: tiết kiệm, hiệu quả,
ít hại môi trường. LED là công nghệ, nó có thể thay thế cho đèn huỳnh quang và
đóng vai 1 bóng đèn tuýp, hay thay đèn dây tóc như bóng đèn tròn.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LED thường có 2 chân, chân dài là anode (đầu dương +), và chân ngắn là cathode
(đầu âm -).&lt;/p&gt;
&lt;h2&gt;Điện hoạt động thế nào ở đây&lt;/h2&gt;
&lt;p&gt;&lt;img src="http://pp.pymi.vn/images/circuit.svg"&gt;&lt;/p&gt;
&lt;p&gt;Khi code &lt;code&gt;led.on()&lt;/code&gt; chạy xong, ESP8266 đặt hiệu điện thế 3.3V tại GPIO14 (Pin D5),
dòng điện chạy qua chân + của LED, qua chân - tới điện trở rồi theo dây nối
tới pin G (ground - nối đất, điện thế là ~0V). Chiều dòng điện ngược với chiều của electron.
Các electron chạy từ G qua điện trở R, giảm điện thế hai đầu LED, election qua
LED làm phát sáng LED, rồi tới GPIO14.&lt;/p&gt;
&lt;h2&gt;Các câu hỏi vật lý&lt;/h2&gt;
&lt;h3&gt;Voltage - hiệu điện thế&lt;/h3&gt;
&lt;p&gt;Hiệu điện thế (hay điện áp) - ký hiệu ở Việt Nam là U, ký hiệu bên tây là V.
Đơn vị: &lt;strong&gt;volt&lt;/strong&gt; - ký hiệu &lt;strong&gt;V&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Hiệu là kết quả của phép trừ, ở đây chỉ độ chênh lệch về điện thế (electric potential).
Có thể tưởng tượng hiệu điện thế giống như 1 loại áp lực.&lt;/p&gt;
&lt;h3&gt;Current - cường độ dòng điện&lt;/h3&gt;
&lt;p&gt;Cường độ dòng điện - ký hiệu là I.
Đơn vị: &lt;strong&gt;ampere&lt;/strong&gt; - ký hiệu &lt;strong&gt;A&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Cường độ là độ mạnh của dòng điện.&lt;/p&gt;
&lt;h3&gt;Ohm's law - định luật Ohm&lt;/h3&gt;
&lt;p&gt;Khi qua vật dẫn điện, hiệu điện thế và cường độ dòng điện tỷ lệ thuận với nhau.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;I = V/R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hay&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;R = V/I
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tỷ lệ này gọi là "resistance" (điện trở) của vật dẫn điện, ký hiệu chữ R
là từ đây ra.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;1&lt;/span&gt; &lt;span class="n"&gt;Ohm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1&lt;/span&gt; &lt;span class="n"&gt;Volt&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;1&lt;/span&gt; &lt;span class="n"&gt;Ampere&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thứ khái niệm kiểu tỷ lệ như này khá phổ biến trong Vật Lý, như&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vận tốc = quãng đường / thời gian
1 m/s = 1m / 1s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ba khái niệm này có thể hình dung như một thác nước chảy từ trên cao xuống (U),
va vào đá giữa dòng (R) mà giảm tốc độ (I).&lt;/p&gt;
&lt;p&gt;Trong điện dùng hàng ngày, các thiết bị điện hầu hết có điện trở R cố định,
nên khi U lớn thì I cũng sẽ lớn theo (tỷ lệ thuận).&lt;/p&gt;
&lt;h3&gt;Công thức&lt;/h3&gt;
&lt;p&gt;Trong mạch mắc nối tiếp, I không đổi tại mọi điểm.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;V = I*R + I*R_led
V = V1 + I*R_led
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Như vậy việc cho điện trở 220 Ohm vào nhằm giảm hiệu điện thế cho LED.
Cụ thể:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;3.3&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;220&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;R_led&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Không dùng điện trở có sao không?&lt;/h3&gt;
&lt;p&gt;Cháy LED.&lt;/p&gt;
&lt;p&gt;Thứ phá hỏng thiết bị điện khi cắm nhầm thiết bị 110V vào điện 220V là do hiệu
điện thế (như 1 loại áp lực) của dòng cao hơn của thiết bị có thể chịu được.
Cường độ dòng điện không phải là nguyên nhân.&lt;/p&gt;
&lt;h3&gt;Điện trong nhà mắc nối tiếp hay song song&lt;/h3&gt;
&lt;p&gt;Song song.&lt;/p&gt;
&lt;p&gt;Khi mắc song song, V không đổi tại mọi điểm.
V là thứ quan trọng nhất khi nói về dòng điện, vậy nên các thiết bị trong nhà
nối song song để có V như nhau - như được cấp (220V).
Thiết bị này không bị tụt áp V khi dùng thiết bị khác.&lt;/p&gt;
&lt;h3&gt;Đấu ngược chân LED có sao không?&lt;/h3&gt;
&lt;p&gt;LED không chịu được voltage ngược lớn, nên cũng có thể sẽ cháy.&lt;/p&gt;
&lt;p&gt;PS: "cháy" thường là hiện tượng LED nóng và hỏng, có thể có ít khói, chứ hiếm mà
có cả lửa.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Việc học tập, ngoài mục tiêu thu nhận "kiến thức", thì phải vui, không vui học
làm sao vào?
Ngày nay, người học đi học như gánh nặng, người dạy đi dạy như cho xong, trả
bài. Chẳng còn thấy mấy ai nói "đi học cho vui", "vui được đi học" nữa.&lt;/p&gt;
&lt;p&gt;Nếu ngày càng có nhiều giáo viên mang lại hứng thú với môn Vật Lý như trên
mạng những ngày qua, tôi tin rằng một ngày không xa, ở Việt Nam, người người
nói về Vật Lý, ăn Vật Lý, ngủ Vật Lý (như người Nga trong &lt;a href="https://www.imdb.com/title/tt10048342/"&gt;The Queen's
Gambit&lt;/a&gt; mê
chơi cờ vua) thì chẳng bao lâu nữa, Việt Nam sẽ trở thành một cường quốc Vật Lý,
&lt;a href="https://vnexpress.net/viet-nam-gianh-ba-huy-chuong-vang-olympic-vat-ly-quoc-te-4329711.html"&gt;giỏi cả lý
thuyết&lt;/a&gt;
lẫn thực hành như trên các khẩu hiệu. Phóng lên trời, bay qua
Sao Hỏa, bỏ lại xa đằng sau cả Mỹ lẫn Tàu...&lt;/p&gt;
&lt;h2&gt;Đọc bài viết tôi không thấy vui&lt;/h2&gt;
&lt;p&gt;Vì là môn thực hành, nên bạn phải tận tay cắm mạch, thấy bóng đèn sáng, làm cháy
LED khói mù mịt nổ văng tung tóe mới cảm nhận được cảm giác thỏa mãn này.&lt;/p&gt;
&lt;p&gt;Khó có thể có cảm giác gì khi đọc "lý thuyết đánh đàn" hay "các bước nấu bún
giả cầy".&lt;/p&gt;
&lt;h2&gt;Học thêm&lt;/h2&gt;
&lt;p&gt;Nếu có đam mê về phần cơ học, con lắc, điện xoay chiều, vũ trụ, lượng tử, ...
hay tất tần tật Vật Lý phổ thông, hãy tham gia lớp học miễn phí của
cô &lt;a href="https://www.facebook.com/VatliMinhThu/"&gt;VatliMinhThu&lt;/a&gt; nhé!&lt;/p&gt;
&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://electronics.stackexchange.com/a/20689&lt;/li&gt;
&lt;li&gt;https://www.raspberrypi.org/documentation/usage/gpio/&lt;/li&gt;
&lt;li&gt;https://www.arduino.cc/en/reference/board&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Electronic_color_code#Resistor_code"&gt;Color band system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vi.wikipedia.org/wiki/M%E1%BA%A1ch_n%E1%BB%91i_ti%E1%BA%BFp_v%C3%A0_song_song"&gt;Mạch nối tiếp và song song&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Hết&lt;/h2&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="vật lý"></category><category term="điện"></category><category term="esp8266"></category><category term="IoT"></category><category term="voltage"></category><category term="GPIO"></category></entry><entry><title>10x engineer - cắt giảm chi phí 10 lần</title><link href="http://pp.pymi.vn/article/10x/" rel="alternate"></link><published>2021-06-30T00:00:00+07:00</published><updated>2021-06-30T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-06-30:/article/10x/</id><summary type="html">&lt;p&gt;với regex, lambda, kafka - nhờ học hành Python tử tế&lt;/p&gt;</summary><content type="html">&lt;p&gt;10x engineer là một thần thoại (myth) lâu đời trong giới IT, mơ tưởng về
1 developer có khả năng code "hơn" người bình thường 10 lần.
Vì là "myth", nên có người tin, có người không.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/QoVeAANfESY"&gt;&lt;img alt="The Myth" src="https://img.youtube.com/vi/QoVeAANfESY/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Thần thoại 3x 4x 5x ... 10x (xxxxxxxxxx)&lt;/h2&gt;
&lt;p&gt;Việc lên internet tìm kiếm 10x engineer trên thế giới không quá khó khăn, nhưng
gặp khi đi làm ngoài thực tế là chuyện không nhiều.
10x thế giới tạm kể:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Linus_Torvalds"&gt;Linus Torvard&lt;/a&gt; - tác giả Linux, git&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Fabrice_Bellard"&gt;Fabrice Bellard&lt;/a&gt; - tác giả FFmpeg, QEMU, tiny C compiler (tcc), quickJS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/John_Carmack"&gt;John Carmack&lt;/a&gt; - tác giả game Doom, Quake&lt;/li&gt;
&lt;li&gt;&lt;a href="https://norvig.com/"&gt;Peter Norvig&lt;/a&gt; - Director of Research Google&lt;/li&gt;
&lt;li&gt;&lt;a href="http://antirez.com/latest/0"&gt;Antirez&lt;/a&gt; - tác giả redis, hping&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;những ví dụ trên chỉ phục vụ mục đích dễ hình dung, bởi họ thuộc cỡ 100 hay 1000x
chứ không phải 10x.
Bí quyết là gì không rõ, nhưng điểm chung: họ đều đã ngoài 40 và dành hơn nửa
cuộc đời làm software. Không có ai 30 đã về nghỉ hay lên làm manager cả.&lt;/p&gt;
&lt;p&gt;Tiêu chí 10x không rõ ràng, vì đây là "myth", nên mỗi người nghĩ theo
1 kiểu. Theo một tiêu chí ví dụ, mrX gõ nhanh hơn mrY 10 lần, nên cũng có khi
được gọi là 10x engineer.&lt;/p&gt;
&lt;p&gt;Bài viết này không liên quan tới chuyện các 10x nói trên, mà đơn giản chỉ là
tiết kiệm 10x chi phí chạy code Python, nhờ được học Python "tử tế".&lt;/p&gt;
&lt;h2&gt;Ví dụ&lt;/h2&gt;
&lt;p&gt;Sinh ra 1 file .log.gz chứa 1_500_000 dòng (từ 3 dòng lặp đi lặp lại)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;

&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;http 2015-05-13T23:39:43.945958Z my-loadbalancer 192.168.131.39:2817 10.0.0.1:80 0.000073 0.001048 0.000057 200 200 0 29 &amp;quot;GET http://www.example.com:80/index HTTP/1.1&amp;quot; &amp;quot;curl/7.38.0&amp;quot; - - arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067 &amp;quot;Root=1-58337262-36d228ad5d99923122bbe354&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;https 2015-05-13T23:39:43.945958Z my-loadbalancer 192.168.131.39:2817 10.0.0.1:80 0.000086 0.001048 0.001337 200 200 0 57 &amp;quot;GET https://mytest-111.ap-northeast-1.elb.amazonaws.com:443/p/a/t/h?foo=bar&amp;amp;hoge=fuga HTTP/1.1&amp;quot; &amp;quot;curl/7.38.0&amp;quot; DHE-RSA-AES128-SHA TLSv1.2 arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067 &amp;quot;Root=1-58337262-36d228ad5d99923122bbe354&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;https 2015-05-13T23:39:43.945958Z my-loadbalancer 192.168.131.39:2817 10.0.0.1:80 0.000086 0.001048 0.001337 200 200 0 57 &amp;quot;GET https://mytest-111.ap-northeast-1.elb.amazonaws.com:443/p/a/t/h?foo=bar&amp;amp;hoge=fuga:904abc HTTP/1.1&amp;quot; &amp;quot;curl/7.38.0&amp;quot; DHE-RSA-AES128-SHA TLSv1.2 arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067 &amp;quot;Root=1-58337262-36d228ad5d99923122bbe354&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bigfile.log.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1_500_000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;fout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File này có kích thước khá nhỏ (&amp;lt;10MB)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python makelog.py&lt;span class="p"&gt;;&lt;/span&gt; ls -la bigfile.log.gz
-rw-rw-r-- &lt;span class="m"&gt;1&lt;/span&gt; hvn hvn &lt;span class="m"&gt;2960897&lt;/span&gt; Jun &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:42 bigfile.log.gz
$ gunzip bigfile.log.gz&lt;span class="p"&gt;;&lt;/span&gt; wc -l bigfile.log&lt;span class="p"&gt;;&lt;/span&gt; ls -l bigfile.log
&lt;span class="m"&gt;1500000&lt;/span&gt; bigfile.log
-rw-rw-r-- &lt;span class="m"&gt;1&lt;/span&gt; hvn hvn &lt;span class="m"&gt;559000000&lt;/span&gt; Jun &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:42 bigfile.log
$ ls -lh bigfile.log
-rw-rw-r-- &lt;span class="m"&gt;1&lt;/span&gt; hvn hvn 534M Jun &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;22&lt;/span&gt;:42 bigfile.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;nhưng khi giải nén, kích thước lớn hơn rất nhiều lần
(do dữ liệu trùng lặp nhiều nên nén lại từ to thành rất nhỏ).&lt;/p&gt;
&lt;p&gt;Đây là đoạn code ban đầu, nó đọc các dòng text từ 1 file có đuôi &lt;code&gt;.log.gz&lt;/code&gt; ra.
Hãy xem kỹ xem bạn có
thể "tối ưu" được bao nhiêu bước và trở thành mấy x từ đây?&lt;/p&gt;
&lt;p&gt;Code albv1.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;

&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bigfile.log.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Proceeded &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; lines&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File nén có đuôi &lt;code&gt;.gz&lt;/code&gt; được tạo bởi các chương trình &lt;code&gt;gzip&lt;/code&gt;, bên dưới dùng
thư viện &lt;a href="https://www.zlib.net/"&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;.
&lt;a href="https://docs.python.org/3/library/gzip.html"&gt;Thư viện &lt;code&gt;gzip&lt;/code&gt; của Python&lt;/a&gt;
cho phép mở file .gz như file text bình thường,
nó thực hiện giải nén phía sau bức màn bí mật. Mode mở file &lt;code&gt;rt&lt;/code&gt; giúp lib gzip
hiểu ta muốn thu được &lt;code&gt;str&lt;/code&gt; sau khi giải nén, còn khi mặc định nó mở ở mode &lt;code&gt;rb&lt;/code&gt;, trả
về kiểu &lt;code&gt;bytes&lt;/code&gt;. Chạy đoạn code trên, sử dụng
&lt;code&gt;/usr/bin/time -v&lt;/code&gt; để đo thời gian chạy và các thông số chi tiết về bộ nhớ max.
(trên MacOS dùng -l)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time -v python3 albv1.py
Proceeded &lt;span class="m"&gt;10&lt;/span&gt; lines
    ...
    Maximum resident &lt;span class="nb"&gt;set&lt;/span&gt; size &lt;span class="o"&gt;(&lt;/span&gt;kbytes&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;693652&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code này dùng ~ 600 MB RAM.&lt;/p&gt;
&lt;p&gt;Sau khi thay đổi, code chỉ còn dùng ~ 9MB RAM&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time -v python3 albv2.py
Proceeded &lt;span class="m"&gt;10&lt;/span&gt; lines
    ...
    Maximum resident &lt;span class="nb"&gt;set&lt;/span&gt; size &lt;span class="o"&gt;(&lt;/span&gt;kbytes&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;9752&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chỉ thay đổi duy nhất 1 dòng:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ diff albv1.py albv2.py
12c12
&amp;lt;     &lt;span class="k"&gt;for&lt;/span&gt; line &lt;span class="k"&gt;in&lt;/span&gt; f.readlines&lt;span class="o"&gt;()&lt;/span&gt;:
---
&amp;gt;     &lt;span class="k"&gt;for&lt;/span&gt; line &lt;span class="k"&gt;in&lt;/span&gt; f:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Điều này bất kỳ học viên &lt;a href="https://pymi.vn/"&gt;Pymi.vn&lt;/a&gt; nào cũng phát hiện ra
ngay, bởi trong hệ thống bài tập đã có 1 bài xử lý file 30 triệu dòng nặng hơn
500 MB tương tự. Cách xử lý từng dòng một:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;mà không dùng &lt;code&gt;f.readlines()&lt;/code&gt; hay &lt;code&gt;f.read()&lt;/code&gt;, vì chúng đọc toàn bộ nội dung
file từ ổ cứng vào RAM.
Chú ý cả sự chênh lệch, Python đọc file text 534MB vào thành 670MB RAM.&lt;/p&gt;
&lt;p&gt;"Bí kíp" đọc file theo dòng này dù chẳng có gì đặc biệt, &lt;a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects"&gt;ghi rõ trong tài liệu
trang chủ&lt;/a&gt;
nhưng lại trở thành chuyện lạ với hàng ngàn bài hướng dẫn trên mạng,
thậm chí cả sách cũng dạy dùng readlines.
Hãy thử &lt;a href="https://github.com/search?q=%22readlines%22+language%3APython&amp;amp;type=Code"&gt;search
github&lt;/a&gt;
có tới hơn 2 triệu kết quả, dù cho github không search chính xác được, thì
chuyện này vẫn không phải là hiếm.&lt;/p&gt;
&lt;p&gt;Search &lt;a href="https://stackoverflow.com/questions/3925614/how-do-you-read-a-file-into-a-list-in-python"&gt;StackOverFlow python read file into list&lt;/a&gt;, trả về hàng loạt kết quả cũng không ổn tí nào.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;readlines&lt;/code&gt; hay &lt;code&gt;read&lt;/code&gt; hoàn toàn ok khi lập trình viên làm chủ được kích thước
file đầu vào (file cố định, file được cam kết là nhỏ), nhưng khi file có size
tới hàng
MB, nó sẽ chiếm không ít RAM để chạy chương trình.&lt;/p&gt;
&lt;p&gt;Phiên bản &lt;code&gt;v2&lt;/code&gt; có thể xử lý file có kích thước lớn tùy ý, 10GB, 100GB, đều vẫn
chỉ dùng &amp;lt; 10MB (với giả thiết kích thước mỗi dòng không quá khác biệt).&lt;/p&gt;
&lt;p&gt;Vậy chỉ cần được học Python tử tế, đã trở thành 10x rồi.&lt;/p&gt;
&lt;h3&gt;Độ đo&lt;/h3&gt;
&lt;p&gt;Để tính mấy x cho rõ ràng, bài này sẽ sử dụng đơn vị đo mà loài người ưa chuộng nhất: tiền.&lt;/p&gt;
&lt;p&gt;Tính tiền 1 chương trình trong 1 cái máy thì khá khó, nhưng ngày nay, khi
"cloud computing" là thời thượng, chạy code trên &lt;a href="https://www.familug.org/2017/08/serverless.html"&gt;AWS lambda&lt;/a&gt;
giúp chuyện tính tiền dễ như học
toán cấp 1. Xem &lt;a href="https://aws.amazon.com/lambda/pricing/"&gt;AWS Lambda pricing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tiền&lt;/strong&gt; cũng là thước đo lý tưởng khi các công ty ngày nay đua theo
"performance review", "360 review", "data driven"... Một dòng review ghi:
"cắt giảm chi phí 70.000 đô la Biden/năm nhờ tối ưu code" sẽ giúp manager dễ
hiểu, dễ đánh giá hơn hẳn viết "tăng tốc chương trình 100 lần nhờ tối ưu regex
sử dụng non greedy-matching" hay "cải thiện tính đọc được và tính ổn định của
code".&lt;/p&gt;
&lt;p&gt;Theo thử nghiệm trên máy, hai phiên bản v1 và v2 chạy về tốc độ là như nhau
(hoặc chênh 1 2 3 giây trên tổng 60s không đáng kể),
thì phần còn lại của biểu thức phụ thuộc vào lượng RAM sử dụng.
Tăng cấu hình RAM cho Lambda function bao nhiêu lần, thì giá gấp bấy nhiêu.
Code đăng ký dùng 256 MB RAM sẽ có giá đắt gấp đôi code đăng ký 128MB.
Với ví dụ trong bài, mỗi file log kích thước cỡ 300-600 MB, lập trình viên sẽ thường
để mức an toàn là 1024MB (1GB) tránh tình trạng có file 800MB xuất hiện mà thiếu RAM.&lt;/p&gt;
&lt;p&gt;Code v2 luôn dùng 10MB RAM (=&amp;gt; 100x), nhưng mức tối thiểu AWS Lambda cho phép là
128MB, vậy ở đây tiết kiệm 8 lần =&amp;gt; 8x.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cú twist giật mình&lt;/strong&gt;: câu chuyện thực ra không đơn giản vậy, với nhiều RAM hơn,
AWS Lambda sẽ cấp thêm
"năng lượng" cho CPU tỷ lệ với RAM, trong ví dụ này, nếu hầu hết thời gian
chương trình đều để dùng CPU, giảm 8x RAM đăng ký đồng nghĩa với giảm tốc độ CPU 8 lần.
Hay kết quả là v2 chạy mất 8s x 128MB thì v1 chạy mất 1s x 1024 MB, và giá tiền là như nhau.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lambda allocates CPU power in proportion to the amount of memory configured.
Memory is the amount of memory available to your Lambda function at runtime.
You can increase or decrease the memory and CPU power allocated to your
function using the Memory (MB) setting. To configure the memory for your
function, set a value between 128 MB and 10,240 MB in 1-MB increments. At
1,769 MB, a function has the equivalent of one vCPU (one vCPU-second of
credits per second).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-memory.html"&gt;Lambda configuration memory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Theo tài liệu này, nếu function chỉ sử dụng 1 core (code không sử dụng thư viện
multiprocess), tốc độ CPU của nó đạt tối
đa khi cấu hình 1769MB, dù có tăng RAM lên 2048MB thì chỉ tăng thêm 1 core nữa
chứ không làm core ban đầu mạnh lên, hay nói cách khác: không làm code chạy nhanh
hơn.&lt;/p&gt;
&lt;p&gt;PS: trong môi trường lượng CPU là cố định (máy ảo, máy vật lý...), v2 vẫn là 100x.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cú twist số 2&lt;/strong&gt;: việc tính tiền trên các hệ thống cloud không hề đơn giản,
có hàng ngàn dịch vụ &lt;a href="https://www.lastweekinaws.com/"&gt;cung cấp giải pháp phân tích, đọc hiểu, tối ưu code cloud&lt;/a&gt;.
Hay mọc cả ra nghề &lt;a href="https://www.finops.org/introduction/what-is-finops/"&gt;FinOps&lt;/a&gt;
chuyên về tối ưu hóa &lt;a href="https://aws.amazon.com/blogs/enterprise-strategy/introducing-finops-excuse-me-devsecfinbizops/"&gt;cloud cost&lt;/a&gt;,
ngành kinh tế trên mây (cloud economics) với các chuyên gia có nghệ danh "cloud economist".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kết luận 1:&lt;/strong&gt; 100x là có thật, nhưng còn phụ thuộc vào hoàn cảnh, không nằm ngoài
"thuyết tương đối".
Việc giảm 8x RAM ở đây không làm giảm chi phí, công việc tiếp theo là cắt giảm
chi phí bằng cách tăng tốc code.&lt;/p&gt;
&lt;p&gt;Tuy không cải thiện về đơn vị đo của bài này là &lt;strong&gt;tiền&lt;/strong&gt;,
nhưng một đoạn code không
chỉ có mỗi tiền, ngoài hiệu năng, nó còn nhiều tiêu chí khác khó đánh giá hơn
như "tính đọc được" (code dễ đọc), "tính ổn định",...
Dùng &lt;code&gt;for line in f&lt;/code&gt; cải thiện được tính ổn định của chương trình, cho phép nó
chạy ngon lành khi kích thước file đầu vào tăng lên - trong khi chương trình
ban đầu sẽ lỗi do không đủ RAM.&lt;/p&gt;
&lt;h2&gt;Tăng tốc regex&lt;/h2&gt;
&lt;p&gt;Phiên bản sau thêm công đoạn xử lý từng dòng để lọc ra các giá trị mong
muốn, sử dụng công cụ: &lt;a href="https://docs.python.org/3/howto/regex.html"&gt;"regular expression"&lt;/a&gt; - hay gọi ngắn là &lt;strong&gt;regex&lt;/strong&gt;.
Bạn đọc không nên quá tập trung hay sợ hãi khi nhìn vào phần "pattern" viết đống giun dế gì, vì
không nhiều người có khả năng đọc, hiểu, phân tích đoạn này, kể cả có
10 năm đi code hay làm sysadmin. Code regex thường khó đọc khó hiểu,
khi cần dùng chủ yếu các lập trình viên đi copy, đoạn bên dưới cũng là
copy từ link trong comment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;regex&lt;/span&gt;

&lt;span class="c1"&gt;# copied and edited from https://gist.github.com/szinck/d456fbf691483ab77d2453c316db3371&lt;/span&gt;
&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(.*?) (.*?) (.*?) ([0-9.]+):([0-9]*) ([0-9.]+):([0-9]*) ([.0-9]*) ([.0-9]*) ([.0-9]*) (-|[0-9]*) (-|[0-9]*) ([-0-9]*) ([-0-9]*) &amp;quot;(.*?) .*:([0-9]+)([^? ]*)(&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x3f?.*?) (.*?)&amp;quot; &amp;quot;(.*?)&amp;quot; (.*?) (.*?) (.*?) &amp;quot;(.*?)&amp;quot; *$&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# example in AWS docs does not work directly with python https://docs.aws.amazon.com/athena/latest/ug/application-load-balancer-logs.html&lt;/span&gt;

&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bigfile.log.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="c1"&gt;# print(&amp;quot;sending&amp;quot;, result)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Proceeded &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; lines&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Không hiểu gì thì làm sao mà tăng tốc?&lt;/p&gt;
&lt;h3&gt;Học regex trong 7 phút&lt;/h3&gt;
&lt;p&gt;7 phút đủ để quán bia làm xong món "giò nóng 7 phút".
Trong 7 phút đủ để bạn có kiến thức regex bằng với 90% lập trình viên trên thế
giới.&lt;/p&gt;
&lt;h4&gt;regex là gì&lt;/h4&gt;
&lt;p&gt;regex là một ngôn ngữ dùng để mô tả pattern (tiếng Việt hay dịch là dạng, mẫu)
của 1 giá trị.
Ví dụ: một số điện thoại di động ở Việt Nam là một số có 10 hay 11 chữ số.
Các pattern sau sẽ "match" (khớp mẫu) số điện thoại:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\d+&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[0-9]+&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hai pattern này tương đương, nó sẽ match với 1 hoặc nhiều chữ số viết liền nhau.
Dấu &lt;code&gt;+&lt;/code&gt; theo sau là biểu diễn cho "1 hoặc nhiều".
Phổ biến không kém dấu &lt;code&gt;+&lt;/code&gt;, là dấu &lt;code&gt;*&lt;/code&gt;. Dấu &lt;code&gt;*&lt;/code&gt; có nghĩa là match 0 hoặc nhiều:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\d*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[0-9]*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cũng sẽ match số điện thoại di động ở Việt Nam.&lt;/p&gt;
&lt;p&gt;Dùng &lt;code&gt;+&lt;/code&gt; khẳng định phải có ít nhất 1 số từ 0 đến 9 (ký hiệu &lt;code&gt;[0-9]&lt;/code&gt;),
thì dùng &lt;code&gt;*&lt;/code&gt; dễ
dãi hơn, không có số nào cũng được. Pattern &lt;code&gt;.*&lt;/code&gt; là pattern phổ biến nhất với
người học regex với thời lượng dưới 5 ngày.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt; đại diện cho 1 ký tự nào đó, nào cũng được, a b c hay 0 1 2 hay % = # gì
cũng ok. &lt;code&gt;.*&lt;/code&gt; là pattern match được mọi thứ.&lt;/p&gt;
&lt;p&gt;Tránh nhầm lẫn dấu &lt;code&gt;*&lt;/code&gt; hay thấy khi gõ câu lệnh Linux, kiểu như &lt;code&gt;ls ~/*.py&lt;/code&gt;,
&lt;code&gt;*&lt;/code&gt; này không phải regex, đây là khái niệm &lt;code&gt;globbing&lt;/code&gt;, mặc dù tác dụng hơi giống,
nó sẽ trả về tất cả các tên file có đuôi &lt;code&gt;.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Dấu &lt;code&gt;?&lt;/code&gt; match 0 hoặc 1 lần, pattern &lt;code&gt;https?&lt;/code&gt; sẽ match cả &lt;code&gt;http&lt;/code&gt; lẫn &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dùng trang &lt;a href="https://regex101.com/r/2f1NKt/1"&gt;regex101.com&lt;/a&gt; để thử các pattern và xem kết quả cho tiện.&lt;/p&gt;
&lt;p&gt;Hay bật python3 lên rồi gõ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import re
&amp;gt;&amp;gt;&amp;gt; re.findall&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.*&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;0987654321&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0987654321&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Có thể chỉ định số lần match với cú pháp &lt;code&gt;{ít nhất, nhiều nhất}&lt;/code&gt;, pattern
&lt;code&gt;0[0-9]{9, 10}&lt;/code&gt; match số điện thoại di động ở Việt Nam.&lt;/p&gt;
&lt;p&gt;Đơn giản, đúng không? Hãy viết 1 đoạn regex để kiểm tra 1 email có hợp lệ không.&lt;/p&gt;
&lt;p&gt;Mọi người đều biết "chung chung" là email có dạng &lt;code&gt;gìđó@gìđấy.đuôi&lt;/code&gt;, vậy
regex có thể là &lt;code&gt;.+@.+\..+&lt;/code&gt;. Chú ý dấu &lt;code&gt;.&lt;/code&gt; trong tên miền phải gõ &lt;code&gt;\.&lt;/code&gt;, vì
dấu &lt;code&gt;.&lt;/code&gt; là 1 ký hiệu regex đặc biệt đã nói ở trên.
Đây là &lt;a href="http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html"&gt;regex đầy đủ để kiểm tra 1 địa chỉ email&lt;/a&gt;,
và không có một ai trên trái đất này cho rằng nó đơn giản cả.&lt;/p&gt;
&lt;p&gt;Đến đây, đã có 1 manh mối để tối ưu tốc độ rồi...
&lt;code&gt;re&lt;/code&gt; là standard library
của Python, có sẵn, không cài gì cả. Nhưng đoạn code
trên lại import 1 thư viện tên &lt;a href="https://pypi.org/project/regex/"&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt;.
Đây là thư viện phải cài thêm,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This regex implementation is backwards-compatible with the standard ‘re’
module, but offers additional functionality.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thử thay &lt;code&gt;regex&lt;/code&gt; bằng &lt;code&gt;re&lt;/code&gt; giúp cắt giảm 10s trong đoạn code chạy 60s trên máy
tác giả.
Có thể "đoán" rằng &lt;code&gt;re&lt;/code&gt; có trong stdlib và được tối ưu đủ trò nên chạy nhanh hơn.
Những việc đoán này phải dựa trên cơ sở đo. Để đo tốc độ trong Python,
python có sãn thư viện &lt;code&gt;cProfile&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Profiling Python với cProfile&lt;/h3&gt;
&lt;p&gt;Thay regex bằng re,
chạy lại đoạn code với câu lệnh sau để xem các function nào dùng nhiều thời gian
nhất/gọi nhiều lần nhất.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tottime&lt;/code&gt; total time: tổng thời gian function chạy sau N lần,
không tính chuyện gọi function khác.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cumtime&lt;/code&gt; cummulative time: tổng thời gian function chạy sau N lần, bao
gồm cả việc gọi các function khác.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time -v python3 -m cProfile -s tottime albv1.py
Proceeded &lt;span class="m"&gt;50000&lt;/span&gt; lines
         &lt;span class="m"&gt;252074&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; calls &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;251832&lt;/span&gt; primitive calls&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;45&lt;/span&gt;.948 seconds

   Ordered by: internal &lt;span class="nb"&gt;time&lt;/span&gt;

   ncalls  tottime  percall  cumtime  percall filename:lineno&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="m"&gt;50000&lt;/span&gt;   &lt;span class="m"&gt;45&lt;/span&gt;.834    &lt;span class="m"&gt;0&lt;/span&gt;.001   &lt;span class="m"&gt;45&lt;/span&gt;.834    &lt;span class="m"&gt;0&lt;/span&gt;.001 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;match&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;re.Pattern&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.033    &lt;span class="m"&gt;0&lt;/span&gt;.033   &lt;span class="m"&gt;45&lt;/span&gt;.948   &lt;span class="m"&gt;45&lt;/span&gt;.948 albv1.py:1&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;module&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.016    &lt;span class="m"&gt;0&lt;/span&gt;.016    &lt;span class="m"&gt;0&lt;/span&gt;.061    &lt;span class="m"&gt;0&lt;/span&gt;.061 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;readlines&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;_io._IOBase&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
     &lt;span class="m"&gt;2277&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.014    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.014    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;built-in method zlib.crc32&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="m"&gt;50000&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.012    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.012    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;group&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;re.Match&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
     &lt;span class="m"&gt;2275&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.008    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.008    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;decompress&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;zlib.Decompress&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="m"&gt;50054&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.005    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.005    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;join&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;str&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="m"&gt;52282&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000 gzip.py:314&lt;span class="o"&gt;(&lt;/span&gt;closed&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="m"&gt;2276&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.034    &lt;span class="m"&gt;0&lt;/span&gt;.000 _compression.py:66&lt;span class="o"&gt;(&lt;/span&gt;readinto&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Kết quả cho thấy hầu hết thời gian đều dùng vào việc chạy regex method &lt;code&gt;match&lt;/code&gt;.
&lt;a href="https://github.com/python/cpython/blob/3.10/Modules/_sre.c"&gt;&lt;code&gt;re&lt;/code&gt; viết bằng C&lt;/a&gt;,
lẽ ra phải chạy rất nhanh, thì khi copy thử pattern và 1
ví dụ lên regex101, sẽ thấy lý do vì sao nó chậm. Để kiểm tra pattern có match
string ví dụ sau không, &lt;a href="https://regex101.com/r/hmXaTV/1"&gt;re phải dùng tới 112690 bước!!!&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http 2015-05-13T23:39:43.945958Z my-loadbalancer 192.168.131.39:2817 10.0.0.1:80 0.000073 0.001048 0.000057 200 200 0 29 "GET http://www.    example.com:80/index HTTP/1.1" "curl/7.38.0" - - arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067 "    Root=1-58337262-36d228ad5d99923122bbe354"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;con số này quá lớn, dù có viết đoạn code lằng nhằng với 20 câu if, cũng
không thể tới 112690 bước.
Tăng tốc regex không phải chuyện dễ, nhưng có 1 tip rất phổ biến: chỗ nào
dùng &lt;code&gt;.*&lt;/code&gt; chỗ đó có vẻ chậm/sai/cần tối ưu &lt;a href="https://docs.python.org/3/howto/regex.html#greedy-versus-non-greedy"&gt;(khác với &lt;code&gt;.*?&lt;/code&gt;)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Đoạn regex mới&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(.*?) (.*?) (.*?) ([0-9.]+):([0-9]*) ([0-9.]+):([0-9]*) ([.0-9]*) ([.0-9]*) ([.0-9]*) (-|[0-9]*) (-|[0-9]*) ([-0-9]*) ([-0-9]*) &amp;quot;(.*?) https?://[^:]+:([0-9]+)([^? ]*)(&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x3f?.*?) (.*?)&amp;quot; &amp;quot;(.*?)&amp;quot; (.*?) (.*?) (.*?) &amp;quot;(.*?)&amp;quot; *$&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;có 1 điểm khác so với đoạn cũ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(.*?) (.*?) (.*?) ([0-9.]+):([0-9]*) ([0-9.]+):([0-9]*) ([.0-9]*) ([.0-9]*) ([.0-9]*) (-|[0-9]*) (-|[0-9]*) ([-0-9]*) ([-0-9]*) &amp;quot;(.*?) .*:([0-9]+)([^? ]*)(&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x3f?.*?) (.*?)&amp;quot; &amp;quot;(.*?)&amp;quot; (.*?) (.*?) (.*?) &amp;quot;(.*?)&amp;quot; *$&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;chỗ &lt;code&gt;.*:([0-9]+)&lt;/code&gt; dùng để match domain và port như https://pymi.vn:443, thay &lt;code&gt;.*&lt;/code&gt; trong
đoạn này với &lt;code&gt;https?://[^:]+&lt;/code&gt; cho tác dụng tương đương. &lt;code&gt;https?://[^:]+&lt;/code&gt; match
1 đoạn text bắt đầu bằng http hay https, rồi :// rồi bất cứ thứ gì cho tới khi
gặp dấu : thì dừng lại. Đoạn này &lt;a href="https://regex101.com/r/1HqLtV/1"&gt;match sau 524 bước&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chú ý đoạn code mới cho rằng mọi url đều bắt đầu với http hay https, điều này
có thể sai (ví dụ wss:// cho websocket), tùy theo yêu cầu bài toán.&lt;/p&gt;
&lt;p&gt;Một cách khác, là dùng pattern &lt;code&gt;[^:]+:[^:]+:&lt;/code&gt; match mọi thứ có dạng
something:something dừng lại khi gặp dấu : thứ 2.
Pattern sẽ match &lt;code&gt;wss://abcde&lt;/code&gt; trong string &lt;code&gt;wss://abcde:443&lt;/code&gt;,
pattern này &lt;a href="https://regex101.com/r/pjDFEk/1"&gt;match sau 518 bước&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Một cách khác nữa, là dùng &lt;code&gt;.+?:.+?:&lt;/code&gt;.
 &lt;code&gt;+&lt;/code&gt; và &lt;code&gt;*&lt;/code&gt; bình thường sẽ match
nhiều nhất có thể, thì khi thêm &lt;code&gt;?&lt;/code&gt; sau nó, &lt;code&gt;+?&lt;/code&gt; hay &lt;code&gt;*?&lt;/code&gt;  sẽ match ít nhất có thể.
Đây gọi là tính năng &lt;a href="https://docs.python.org/3/howto/regex.html#greedy-versus-non-greedy"&gt;non-greedy&lt;/a&gt;
Cho string &lt;code&gt;abcdabcd&lt;/code&gt;, &lt;code&gt;a.+d&lt;/code&gt; sẽ match &lt;code&gt;abcdabcd&lt;/code&gt; nhưng &lt;code&gt;a.+?d&lt;/code&gt; chỉ
match &lt;code&gt;abcd&lt;/code&gt;.  Pattern này &lt;a href="https://regex101.com/r/qSEnKp/1"&gt;match sau 543 bước&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dấu đóng mở ngoặc &lt;code&gt;()&lt;/code&gt; dùng để capture kết quả,
kết quả match thành công sẽ được lưu
lại thành 1 group, đánh theo thứ tự xuất hiện.
Đoạn code trong bài lấy ra group 17 và 11
từ kết quả match.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time -v python3 -m cProfile -s tottime albv1_regex.py

Proceeded &lt;span class="m"&gt;50000&lt;/span&gt; lines
         &lt;span class="m"&gt;252201&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; calls &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;251956&lt;/span&gt; primitive calls&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.310 seconds

   Ordered by: internal &lt;span class="nb"&gt;time&lt;/span&gt;

   ncalls  tottime  percall  cumtime  percall filename:lineno&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="m"&gt;50000&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.208    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.208    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;match&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;re.Pattern&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.026    &lt;span class="m"&gt;0&lt;/span&gt;.026    &lt;span class="m"&gt;0&lt;/span&gt;.310    &lt;span class="m"&gt;0&lt;/span&gt;.310 albv1_regex.py:1&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;module&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.016    &lt;span class="m"&gt;0&lt;/span&gt;.016    &lt;span class="m"&gt;0&lt;/span&gt;.061    &lt;span class="m"&gt;0&lt;/span&gt;.061 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;readlines&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;_io._IOBase&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
     &lt;span class="m"&gt;2277&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.014    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.014    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;built-in method zlib.crc32&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="m"&gt;50000&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.008    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.008    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;group&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;re.Match&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
     &lt;span class="m"&gt;2275&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.008    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.008    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;decompress&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;zlib.Decompress&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="m"&gt;52282&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000 gzip.py:314&lt;span class="o"&gt;(&lt;/span&gt;closed&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="m"&gt;50054&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000 &lt;span class="o"&gt;{&lt;/span&gt;method &lt;span class="s1"&gt;&amp;#39;join&amp;#39;&lt;/span&gt; of &lt;span class="s1"&gt;&amp;#39;str&amp;#39;&lt;/span&gt; objects&lt;span class="o"&gt;}&lt;/span&gt;
     &lt;span class="m"&gt;2276&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;.004    &lt;span class="m"&gt;0&lt;/span&gt;.000    &lt;span class="m"&gt;0&lt;/span&gt;.030    &lt;span class="m"&gt;0&lt;/span&gt;.000 gzip.py:454&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;read&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;45 giây -&amp;gt; xuống còn 0.3 giây cho ta cảm giác code mới chắc là sai nên mới 150x như vậy.&lt;/p&gt;
&lt;h4&gt;Sửa regex xong làm sao biết đúng sai?&lt;/h4&gt;
&lt;p&gt;Một cách đơn giản là thử, cho 2 pattern match và lấy kết quả ra rồi so sánh lần
lượt với mỗi dòng log, qua cả file đều giống nhau là có vẻ ổn rồi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;m1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;m2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;PS: khi tối ưu đoạn code này, vô tình phát hiện ra đoạn code ban đầu xử lý
không đúng khi URL path có chứa dấu &lt;code&gt;:&lt;/code&gt;, 3 phiên bản mới không gặp phải vấn
đề này.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kết luận 2:&lt;/strong&gt; 150x là có thật và không cần phải học "regex" nâng cao.&lt;/p&gt;
&lt;h4&gt;Học và dùng regex&lt;/h4&gt;
&lt;p&gt;Python có viết 1 tài liệu cơ bản về regex trong mục &lt;a href="https://docs.python.org/3/howto/regex.html"&gt;howto&lt;/a&gt;,
nếu một ngày buồn chán quá không có gì làm, hay muốn tìm ý nghĩa của cuộc sống, bạn có thể ngồi học regex.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xkcd" src="https://imgs.xkcd.com/comics/regular_expressions.png"&gt;&lt;/p&gt;
&lt;p&gt;Hoặc đi tìm một "khóa học regex"? cái này chưa có, cơ hội khởi nghiệp làm giàu còn rất rộng mở
cho các chuyên gia công nghệ bán "khoá học làm chủ regex để học sâu với trí tuệ nhân tạo 4.0".&lt;/p&gt;
&lt;p&gt;Regex là một công cụ mạnh, nhưng khó dùng đúng, nó giải quyết được 1 số bài toán,
&lt;a href="https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags?noredirect=1&amp;amp;lq=1"&gt;1 số thì không và nên dùng cách khác đơn giản hơn như parse HTML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;regex &lt;a href="https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/"&gt;nổi tiếng phức tạp&lt;/a&gt;, và từng tạo ra không ít &lt;a href="https://stackstatus.net/post/147710624694/outage-postmortem-july-20-2016"&gt;sự cố trong các hệ thống lớn toàn cầu&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some people, when confronted with a problem, think "I know, I'll use regular expressions." Now they have two problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Khi một bài toán có thể giải quyết theo 1 cách khác đơn giản hơn, thì nên tránh
dùng regex.&lt;/p&gt;
&lt;p&gt;Chú ý: trong ví dụ này, nhằm mục tiêu giữ lại code gần giống với code
ban đầu nhất, không thay đổi quá nhiều, nên đã không viết lại đoạn code
lọc ra urlpath và statuscode mà vẫn dùng regex.&lt;/p&gt;
&lt;h2&gt;Tăng tốc gửi message đến kafka&lt;/h2&gt;
&lt;h3&gt;Kafka là gì&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Apache Kafka is an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://kafka.apache.org/"&gt;https://kafka.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nói đơn giản, Kafka như hệ thống ống nước, mạng lưới điện, mạng lưới viễn thông,
nó đủ tính năng để đáp ứng mọi nhu cầu truyền tải dữ liệu từ nhiều nguồn đến
nhiều đích. Kafka được dùng phổ biến trong các doanh nghiệp, các hệ thống xử
lý data, logging...&lt;/p&gt;
&lt;p&gt;Kafka có nhiều tính năng, bài này sử dụng nó như 1 hệ thống pub-sub, tức có 1
bên gửi message đi, và 1/nhiều bên nhận message.&lt;/p&gt;
&lt;h3&gt;Cài đặt kafka&lt;/h3&gt;
&lt;p&gt;Cài Java&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install -y openjdk-11-jre-headless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cài đặt kafka đơn giản với &lt;a href="https://kafka.apache.org/quickstart"&gt;5 bước không cần sudo&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -LO https://mirror.downloadvn.com/apache/kafka/2.8.0/kafka_2.13-2.8.0.tgz
tar xvf kafka_2.13-2.8.0.tgz
&lt;span class="nb"&gt;cd&lt;/span&gt; kafka_2.13-2.8.0
bin/zookeeper-server-start.sh config/zookeeper.properties
&lt;span class="c1"&gt;## mở 1 terminal khác&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; kafka_2.13-2.8.0
bin/kafka-server-start.sh config/server.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Python Kafka producer&lt;/h4&gt;
&lt;p&gt;Phiên bản đầy đủ của chương trình trước khi mang đi tối ưu: nó
đọc file log &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/athena-analyze-access-logs/"&gt;AWS ALB&lt;/a&gt;
đã nén &lt;code&gt;.gz&lt;/code&gt;, lấy ra urlpath và status code bằng regex, rồi gửi
kết quả đến kafka.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install kafka-python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kafka&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KafkaProducer&lt;/span&gt;

&lt;span class="n"&gt;producer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KafkaProducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;linger_ms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;65536&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;compression_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lz4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(.*?) (.*?) (.*?) ([0-9.]+):([0-9]*) ([0-9.]+):([0-9]*) ([.0-9]*) ([.0-9]*) ([.0-9]*) (-|[0-9]*) (-|[0-9]*) ([-0-9]*) ([-0-9]*) &amp;quot;(.*?) [^:]+:[^:]+:([0-9]+)([^? ]*)(&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x3f?.*?) (.*?)&amp;quot; &amp;quot;(.*?)&amp;quot; (.*?) (.*?) (.*?) &amp;quot;(.*?)&amp;quot; *$&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bigfile.log.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alblog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Processed &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; lines&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Khi chưa gửi message tới kafka, code chạy mất 8s, khi gửi đến kafka trên cùng
máy, code chạy mất 60s (khi profile chậm hơn nữa do quá trình profile can thiệp ảnh hưởng tới tốc độ):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;Proc&lt;/span&gt;&lt;span class="nb"&gt;es&lt;/span&gt;&lt;span class="nv"&gt;sed&lt;/span&gt; &lt;span class="mi"&gt;1500000&lt;/span&gt; &lt;span class="nv"&gt;lines&lt;/span&gt;
         &lt;span class="err"&gt;133875187&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nv"&gt;calls&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;133873425&lt;/span&gt; &lt;span class="nv"&gt;primitive&lt;/span&gt; &lt;span class="nv"&gt;calls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;91.895&lt;/span&gt; &lt;span class="nv"&gt;seconds&lt;/span&gt;

   &lt;span class="nf"&gt;Ordered&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;internal&lt;/span&gt; &lt;span class="nv"&gt;time&lt;/span&gt;

   &lt;span class="no"&gt;ncalls&lt;/span&gt;&lt;span class="kd"&gt;  tottime&lt;/span&gt;  &lt;span class="nv"&gt;percall&lt;/span&gt;  &lt;span class="nv"&gt;cumtime&lt;/span&gt;  &lt;span class="nv"&gt;percall&lt;/span&gt; &lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;lineno&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500001&lt;/span&gt;    &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;.978&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;8.978&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;match&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;re.Pattern&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;objects&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;8&lt;/span&gt;&lt;span class="nf"&gt;.602&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;   &lt;span class="mf"&gt;73.735&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;kafka.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;538&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;send&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500282&lt;/span&gt;    &lt;span class="err"&gt;7&lt;/span&gt;&lt;span class="nf"&gt;.845&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;   &lt;span class="mf"&gt;14.095&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;default_records.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="nf"&gt;.948&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;   &lt;span class="mf"&gt;39.138&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;record_accumulator.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500282&lt;/span&gt;    &lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="nf"&gt;.675&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;   &lt;span class="mf"&gt;28.579&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;record_accumulator.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;try_append&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="err"&gt;1&lt;/span&gt;    &lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="nf"&gt;.299&lt;/span&gt;    &lt;span class="mf"&gt;4.299&lt;/span&gt;   &lt;span class="mf"&gt;92.439&lt;/span&gt;   &lt;span class="mf"&gt;92.439&lt;/span&gt; &lt;span class="nb"&gt;al&lt;/span&gt;&lt;span class="nv"&gt;bv1_regex2.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="nf"&gt;.147&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;6.439&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;future.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;7501128&lt;/span&gt;    &lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="nf"&gt;.138&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;4.001&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;util.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;encode_varint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="nf"&gt;.754&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;   &lt;span class="mf"&gt;12.242&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;kafka.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;716&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_partition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;3000001&lt;/span&gt;    &lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="nf"&gt;.270&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;2.688&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nb"&gt;cl&lt;/span&gt;&lt;span class="nv"&gt;uster.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;partitions_for_topic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;.946&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;4.090&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nb"&gt;cl&lt;/span&gt;&lt;span class="nv"&gt;uster.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;available_partitions_for_topic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;.840&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;4.318&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;kafka.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;664&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_wait_on_metadata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;65554&lt;/span&gt;    &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;.721&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.721&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="nv"&gt;zlib.crc32&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;1500000&lt;/span&gt;    &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;.682&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;2.811&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="nv"&gt;default_records.py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;563&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;si&lt;/span&gt;&lt;span class="nv"&gt;ze_of&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;15397286/15397055&lt;/span&gt;    &lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="nf"&gt;.615&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.615&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="nv"&gt;builtins.len&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Việc gửi 1.5 triệu message tới kafka chạy cùng máy mất tới 73s (cumtime)
trong output profiling. Trong đó có dòng thứ 3, 4 và 5 đều là "append".
Mở code của thư viện &lt;a href="https://github.com/dpkp/kafka-python/"&gt;kafka-python&lt;/a&gt;
ra xem, phần &lt;a href="https://github.com/dpkp/kafka-python/blob/2.0.2/kafka/producer/record_accumulator.py#L200"&gt;này&lt;/a&gt;
append các message vào
1 list "accumulator", để bao giờ đủ 65536 phần tử mới gửi đi
(batch_size=65536 lúc tạo producer). Batching là tính năng phổ biến trong các
thư viện liên quan tới network, do việc gửi nhận qua network thường chậm, nên
gom lại một đống rồi gửi đi để giảm số lần gửi/nhận. Nhưng trong ví dụ này,
việc batching tốn tới 20s thì có vẻ không ổn.
Sau một hồi chỉnh sửa các tham số (batch_size, linger_ms ...), giải pháp lại là
"think outside of the box", tìm xem Python còn có thư viện kafka nào khác không.&lt;/p&gt;
&lt;p&gt;Thư viện &lt;a href="https://github.com/confluentinc/confluent-kafka-python"&gt;confluent-kafka-python&lt;/a&gt; sử dụng
&lt;a href="https://github.com/edenhill/librdkafka"&gt;librdkafka&lt;/a&gt; viết bằng C hứa hẹn cho một performance
tốt hơn nhiều&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gzip&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;confluent_kafka&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Producer&lt;/span&gt;


&lt;span class="n"&gt;producer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bootstrap.servers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost:9092&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;queue.buffering.max.messages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;65536&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;acks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s1"&gt;&amp;#39;compression.type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lz4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(.*?) (.*?) (.*?) ([0-9.]+):([0-9]*) ([0-9.]+):([0-9]*) ([.0-9]*) ([.0-9]*) ([.0-9]*) (-|[0-9]*) (-|[0-9]*) ([-0-9]*) ([-0-9]*) &amp;quot;(.*?) [^:]+:[^:]+:([0-9]+)([^? ]*)(&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x3f?.*?) (.*?)&amp;quot; &amp;quot;(.*?)&amp;quot; (.*?) (.*?) (.*?) &amp;quot;(.*?)&amp;quot; *$&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bigfile.log.gz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;produce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alblog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;poll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;BufferError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Buffer full, waiting for free space on the queue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;poll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;producer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Processed &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; lines&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;và thực nghiệm thấy đúng là như thế:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Processed&lt;/span&gt; &lt;span class="mi"&gt;1500000&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;
         &lt;span class="mi"&gt;11882360&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;calls&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11882085&lt;/span&gt; &lt;span class="n"&gt;primitive&lt;/span&gt; &lt;span class="n"&gt;calls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;21.700&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;

   &lt;span class="n"&gt;Ordered&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;

   &lt;span class="n"&gt;ncalls&lt;/span&gt;  &lt;span class="n"&gt;tottime&lt;/span&gt;  &lt;span class="n"&gt;percall&lt;/span&gt;  &lt;span class="n"&gt;cumtime&lt;/span&gt;  &lt;span class="n"&gt;percall&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;lineno&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="mi"&gt;1500000&lt;/span&gt;    &lt;span class="mf"&gt;9.328&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;9.328&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;match&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;re.Pattern&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;1500000&lt;/span&gt;    &lt;span class="mf"&gt;4.197&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;4.197&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;produce&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cimpl.Producer&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mf"&gt;3.457&lt;/span&gt;    &lt;span class="mf"&gt;3.457&lt;/span&gt;   &lt;span class="mf"&gt;21.700&lt;/span&gt;   &lt;span class="mf"&gt;21.700&lt;/span&gt; &lt;span class="n"&gt;albv1_regex2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="mi"&gt;1500000&lt;/span&gt;    &lt;span class="mf"&gt;1.511&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.511&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;poll&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cimpl.Producer&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="mi"&gt;65554&lt;/span&gt;    &lt;span class="mf"&gt;0.519&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.519&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;built&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;zlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crc32&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;1500000&lt;/span&gt;    &lt;span class="mf"&gt;0.410&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.410&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;group&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;re.Match&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="mi"&gt;65552&lt;/span&gt;    &lt;span class="mf"&gt;0.386&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.386&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;decompress&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zlib.Decompress&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="mi"&gt;1565559&lt;/span&gt;    &lt;span class="mf"&gt;0.255&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.255&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;314&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;closed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="mi"&gt;1500117&lt;/span&gt;    &lt;span class="mf"&gt;0.232&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;0.232&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;join&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;str&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="mi"&gt;65553&lt;/span&gt;    &lt;span class="mf"&gt;0.218&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.687&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="n"&gt;_compression&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;readinto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;65553&lt;/span&gt;    &lt;span class="mf"&gt;0.207&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt;    &lt;span class="mf"&gt;1.417&lt;/span&gt;    &lt;span class="mf"&gt;0.000&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;454&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Từ 91s -&amp;gt; 21.7s, ta rút gọn thêm được 4x.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kết luận 3:&lt;/strong&gt; thư viện có this có that, hãy tự đo và kiểm tra các options.&lt;/p&gt;
&lt;h2&gt;Kết quả&lt;/h2&gt;
&lt;p&gt;Sau 3 lần tối ưu, code mới dùng 100x ít RAM hơn, nhanh gấp 150 * 4 == 600 lần
code ban đầu, chi phí giảm: 600 lần so với ban đầu. Giả sử đoạn code này hiện
đang tốn $6000/tháng (6 * 12 = $72k/năm), thì sau khi tối ưu còn $10/tháng -&amp;gt; $120/năm.&lt;/p&gt;
&lt;p&gt;$70.000 mỗi năm được tiết kiệm này nên dùng để thưởng nóng cho 10x dev hay
chỉ thưởng $7k?&lt;/p&gt;
&lt;p&gt;Thực tế (kinh tế) thì không phải thế, thưởng nóng $1-2-3k đã là nhiều lắm rồi.
Không bàn tới chuyện quản lý doanh nghiệp/nhân sự/kinh tế ở đây, nhưng có thể
thấy 1 điều, 1 lập trình viên có mức lương cao ngất ngưởng không phải là
chuyện vô lý, khi họ có thể tự trả lương cho mình 1 vài năm trong vòng 1 2 ngày
tối ưu code.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;10x engineering là có thật. 10x phụ thuộc vào
hoàn cảnh, tiêu chí đánh giá, nhưng học Python tại PyMi.vn rõ ràng là khoản đầu tư 10x.
Việc tối ưu code, sử dụng cProfile của Python là một công việc thú vị, nhưng
cần đặt vào đúng chỗ. Tối ưu đoạn code tiêu tốn $72k/năm để còn $120/năm
mang lại lợi ích kinh tế khác biệt (trong môi trường doanh nghiệp) so với tối ưu đoạn code $72/năm còn $0.12/năm.&lt;/p&gt;
&lt;p&gt;Bạn đọc đam mê có thể tiếp tục tối ưu và gửi kết quả tới tác giả bằng cách
tạo &lt;a href="https://github.com/pymivn/people/pulls"&gt;1 pull request trên GitHub&lt;/a&gt;.
Ngoài ra, có thể viết hẳn 1 chương trình hẳn hoi giúp lấy log AWS load balancer
về rồi gửi tới 1 đích đến tùy ý. Đây là &lt;a href="https://www.google.com/search?q=parse+aws+application+load+balancer+logs&amp;amp;hl=en"&gt;một vấn đề phổ biến khi dùng AWS Load Balancer
mà chưa có giải pháp triệt để.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Không phải kết luận&lt;/h2&gt;
&lt;p&gt;Giống như mọi bài viết về optimize/benchmark, kết quả rất phụ thuộc và bài toán
cụ thể, môi trường (phiên bản, hệ điều hành ...) cụ thể.
Bài viết này &lt;strong&gt;KHÔNG&lt;/strong&gt; kết luận:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for line in f&lt;/code&gt; nhanh hay chậm hơn &lt;code&gt;for line in f.readlines()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Lib &lt;code&gt;re&lt;/code&gt; nhanh hơn lib &lt;code&gt;regex&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;confluent-kafka-python nhanh hơn kafka-python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kết quả có thể hoàn toàn bị đảo ngược khi test trên 1 hệ điều hành khác (như
MacOS, Windows) hay một phiên bản Python/thư viện khác, hay từng đoạn code
chạy riêng sẽ khác với khi 2,3 đoạn code kết hợp lại.
Kết luận chỉ nên đưa ra khi đem đi chạy thật với tình huống cụ thể, đến lúc
tính tiền.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/2017/08/serverless.html"&gt;serverless&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/2014/09/shell-globbing-not-regex.html"&gt;globbing vs regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/2020/10/grep-khong-ho-tro-d-va-3-mode-regex.html"&gt;grep &amp;amp; 3 modes of regex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Hết&lt;/h2&gt;
&lt;p&gt;Bài viết thực hiện trên&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ grep &lt;span class="nv"&gt;VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; /etc/os-release&lt;span class="p"&gt;;&lt;/span&gt; python3 --version
&lt;span class="nv"&gt;VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20.04.2 LTS (Focal Fossa)&amp;quot;&lt;/span&gt;
Python &lt;span class="m"&gt;3&lt;/span&gt;.8.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="regex"></category><category term="lambda"></category><category term="kafka"></category><category term="profile"></category><category term="cprofile"></category></entry><entry><title>Có Salt không lo chết đói</title><link href="http://pp.pymi.vn/article/salt/" rel="alternate"></link><published>2021-06-19T00:00:00+07:00</published><updated>2021-06-19T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-06-19:/article/salt/</id><summary type="html">&lt;p&gt;Tự động hóa cài đặt, cấu hình (deploy) Python app với Salt&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="salt" src="https://gitlab.com/saltstack/open/salt-branding-guide/-/raw/master/logos/SaltProject_altlogo_teal.png?inline=true"&gt;&lt;/p&gt;
&lt;h2&gt;Salt là gì&lt;/h2&gt;
&lt;p&gt;Salt (/sɔːlt/ /sɒlt/) là một phần mềm mã nguồn mở, một hệ thống
thuộc nhóm Configuration Management (CM), viết bằng Python, sử dụng YAML làm ngôn
ngữ giao tiếp với người dùng.&lt;/p&gt;
&lt;h2&gt;Salt làm gì?&lt;/h2&gt;
&lt;p&gt;Tính năng của Salt chia làm 2 phần chính: remote execution và configuration
management dựa trên nền tảng remote execution.&lt;/p&gt;
&lt;h3&gt;Remote execution&lt;/h3&gt;
&lt;p&gt;chạy lệnh từ xa. Sau khi cài đặt xong salt-master và các salt-minion, từ
salt-master có thể chạy bất kì câu lệnh nào trên máy cài salt-minion.&lt;/p&gt;
&lt;p&gt;Tưởng tượng bạn cần xoá 1 file trên 10 hay 100 máy, chỉ cần gõ 1 câu lệnh và
tất cả các minion sẽ chạy câu lệnh ấy. Sức mạnh là vô cùng khủng khiếp, giống
như nắm một mạng botnet trong tay vậy. Muốn ping 1 server từ 100 máy? gõ lệnh
&lt;code&gt;ping -c N victim&lt;/code&gt;, và 100 máy sẽ cùng lúc ping đến máy đích.&lt;/p&gt;
&lt;h3&gt;Configuration management&lt;/h3&gt;
&lt;p&gt;đảm bảo trạng thái các thành phần của hệ thống. Cần đảm bảo 1 service NGINX
chạy với file cấu hình nhất định, forward request đến gunicorn app
server trên máy ấy, đã cấu hình để chạy một web application viết bằng Python
với phiên bản mới nhất lấy từ 1 git repository? Salt làm được tất cả điều đó,
và nó có thể đảm bảo rằng mọi thay đổi bằng tay thực hiện trên những thành
phần nói trên sẽ bị thay thế bằng những gì đã định trước.&lt;/p&gt;
&lt;p&gt;Theo &lt;a href="https://www.familug.org/2015/06/saltstack-chao-muoi-em-la-ai.html"&gt;Chào Muối, em là ai? &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Mục tiêu&lt;/h2&gt;
&lt;p&gt;Bài này cài đặt salt qua &lt;code&gt;pip&lt;/code&gt;, và dùng &lt;code&gt;salt-ssh&lt;/code&gt; để điều khiển máy khác.
Mục tiêu đưa ra một bài hướng dẫn thực hành đơn giản hơn bài hướng dẫn trên
trang chủ &lt;a href="https://docs.saltproject.io/en/master/topics/tutorials/walkthrough.html#salt-in-10-minutes/"&gt;Salt in 10 minutes&lt;/a&gt;
và mang lại cảm giác giống đang dùng &lt;a href="https://www.familug.org/2016/12/ansible-command.html"&gt;Ansible&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kết quả: deploy uds bot - 1 chương trình Python lên máy Ubuntu 18.04, cấu hình
systemd chạy vù vù.&lt;/p&gt;
&lt;h2&gt;3 phút dành cho lý thuyết&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Máy ra lệnh gọi là salt master&lt;/li&gt;
&lt;li&gt;Máy bị điều khiển, chạy các câu lệnh gọi là salt minion, trong bài này có IP &lt;code&gt;192.168.0.110&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Trong bài này, master sẽ truy cập vào minion qua ssh.&lt;/li&gt;
&lt;li&gt;Máy master không cần quyền gì đặc biệt và đã cài đặt salt trên Python3.6+&lt;/li&gt;
&lt;li&gt;Máy minion chạy &lt;code&gt;*NIX&lt;/code&gt; OS (Ubuntu, Debian, Fedora, .. MacOS),
  phải có quyền sudo không password hoặc root để toàn quyền điều khiển máy (như cài package qua
apt). &lt;a href="https://docs.saltproject.io/en/latest/topics/installation/windows.html"&gt;Salt có hỗ trợ Windows&lt;/a&gt; nhưng nằm ngoài phạm vi bài viết này.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Trên máy minion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tạo 1 user mới: &lt;code&gt;sudo adduser saltuser&lt;/code&gt;, trả lời các câu hỏi và gõ password&lt;/li&gt;
&lt;li&gt;sudo không password: thêm &lt;code&gt;saltuser ALL=(ALL) NOPASSWD: ALL&lt;/code&gt; vào cuối file /etc/sudoers&lt;/li&gt;
&lt;li&gt;Có chương trình sshd listen trên port 22, cài bằng lệnh &lt;code&gt;sudo apt install openssh-server&lt;/code&gt;, gõ &lt;code&gt;ss -nlt | grep 22&lt;/code&gt; thấy có kết quả là ok.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Trên máy master&lt;/h2&gt;
&lt;p&gt;Tạo SSH key nếu chưa có:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls ~/.ssh/id_rsa &lt;span class="o"&gt;||&lt;/span&gt; ssh-keygen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Copy ssh public key vào minion:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-copy-id saltuser@192.168.0.110
&lt;span class="c1"&gt;# rồi gõ password saltuser vừa tạo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Cài đặt&lt;/h3&gt;
&lt;p&gt;Tạo 1 virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv saltenv
. saltenv/bin/activate
pip install &lt;span class="nv"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;3002&lt;/span&gt;  &lt;span class="c1"&gt;# do bản 3003 mới nhất đang có bug&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cài xong kiểm tra&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ salt-ssh --version
salt-ssh &lt;span class="m"&gt;3002&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Cấu hình master&lt;/h3&gt;
&lt;p&gt;Có 2 file cần tạo: &lt;code&gt;master&lt;/code&gt; và &lt;code&gt;roster&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tạo 1 thư mục tên saltlab:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir -p ~/saltlab/states
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/saltlab
&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File &lt;code&gt;master&lt;/code&gt; chứa 2 dòng, &lt;code&gt;root_dir&lt;/code&gt; giá trị là đường dẫn đầy đủ tới
thư muc saltlab, &lt;code&gt;file_roots&lt;/code&gt; có &lt;code&gt;states&lt;/code&gt; với giá trị là đường dẫn đầy đủ
tới thư mục &lt;code&gt;states&lt;/code&gt;, thư mục states sẽ chứa các file "saltstate"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;root_dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/home/hvn/saltlab&lt;/span&gt;
&lt;span class="nt"&gt;file_roots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/home/hvn/saltlab/states&lt;/span&gt;
&lt;span class="nt"&gt;pillar_roots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/home/hvn/saltlab/pillars&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File &lt;code&gt;roster&lt;/code&gt; chứa thông tin về các máy minion:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;tv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;192.168.0.110&lt;/span&gt;
  &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;saltuser&lt;/span&gt;
  &lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;True&lt;/span&gt;
&lt;span class="nt"&gt;trau&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;103.x.y.z&lt;/span&gt;
  &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;
  &lt;span class="nt"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;22022&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ở đây định nghĩa 2 minion, 1 tên &lt;code&gt;tv&lt;/code&gt; và 1 tên &lt;code&gt;trau&lt;/code&gt;, minion &lt;code&gt;tv&lt;/code&gt; sẽ là đối
tượng của bài này.&lt;/p&gt;
&lt;p&gt;File này tương tự file inventory (hay có tên là &lt;code&gt;hosts&lt;/code&gt;) của Ansible.&lt;/p&gt;
&lt;p&gt;Cấu trúc thư mục trông như sau&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;saltlab/
├── master
├── roster
├── pillars
│   ├── common.sls
│   ├── top.sls
│   └── uds.sls
└── states
    ├── example.sls
    ├── htop.sls
    ├── template.j2
    ├── uds.sls
    └── uds.systemd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Chạy câu lệnh Salt&lt;/h2&gt;
&lt;p&gt;Từ master, trong venv saltenv, gõ lệnh &lt;code&gt;salt-ssh&lt;/code&gt; với đối tượng &lt;code&gt;tv&lt;/code&gt;, câu lệnh
salt &lt;code&gt;cmd.run&lt;/code&gt;, câu lệnh chạy trên &lt;code&gt;tv&lt;/code&gt; là &lt;code&gt;uname -a&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;saltenv&lt;span class="o"&gt;)&lt;/span&gt; $ salt-ssh --config ~/saltlab tv cmd.run &lt;span class="s1"&gt;&amp;#39;uname -a&amp;#39;&lt;/span&gt;
tv:
    Linux MINIPC-PN50 &lt;span class="m"&gt;5&lt;/span&gt;.8.0-55-generic &lt;span class="c1"&gt;#62~20.04.1-Ubuntu SMP Wed Jun 2 08:55:04 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Apply Salt state&lt;/h2&gt;
&lt;p&gt;Saltstate file là &lt;a href="https://docs.saltproject.io/en/latest/topics/yaml/index.html"&gt;file YAML&lt;/a&gt; có đuôi &lt;code&gt;.sls&lt;/code&gt;, khai báo (declare)
trạng thái của hệ thống mong muốn đạt được. File &lt;code&gt;htop.sls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;install htop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="c1"&gt;#  ID của &amp;quot;state&amp;quot;&lt;/span&gt;
  &lt;span class="nt"&gt;pkg.installed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# loại state - tương ứng với 1 python function&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;htop&lt;/span&gt;   &lt;span class="c1"&gt;# các tham số - function argument&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cú pháp YAML trên tương ứng với Python dict sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;install htop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pkg.installed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;htop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi được &lt;code&gt;apply&lt;/code&gt;, state trên sẽ cài package &lt;code&gt;htop&lt;/code&gt; lên máy, sử dụng package
manager của máy minion, dù là apt trên Ubuntu hay yum/dnf trên Fedora.&lt;/p&gt;
&lt;p&gt;Đây là một ưu điểm lớn của Salt, người dùng thậm chí không biết chính xác
câu lệnh để cài thế nào, chỉ cần liệt kê ra những gì mình cần, Salt sẽ lo tất.
Phần này nghe rất "magic", thực chất thì bên dưới pkg là 1 &lt;a href="https://github.com/saltstack/salt/blob/master/salt/states/pkg.py"&gt;Python module&lt;/a&gt;
còn &lt;a href="https://github.com/saltstack/salt/blob/v3003/salt/states/pkg.py#L1007"&gt;&lt;code&gt;installed&lt;/code&gt; là 1 function&lt;/a&gt;
chạy đủ loại if/else kiểm tra hệ thống và chọn &lt;code&gt;apt&lt;/code&gt; hay &lt;code&gt;yum&lt;/code&gt; cho phù hợp.
Salt gọi đây là &lt;a href="https://docs.saltproject.io/en/latest/ref/states/all/index.html"&gt;&lt;code&gt;state module pkg&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Gõ trên master:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ salt-ssh --config ~/saltlab tv state.apply htop
tv:
----------
          ID: install htop
    Function: pkg.installed
        Name: htop
      Result: True
     Comment: The following packages were installed/updated: htop
     Started: &lt;span class="m"&gt;15&lt;/span&gt;:09:22.550836
    Duration: &lt;span class="m"&gt;10969&lt;/span&gt;.17 ms
     Changes:
              ----------
              htop:
                  ----------
                  new:
                      &lt;span class="m"&gt;2&lt;/span&gt;.2.0-2build1
                  old:

Summary &lt;span class="k"&gt;for&lt;/span&gt; tv
------------
Succeeded: &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Failed:    &lt;span class="m"&gt;0&lt;/span&gt;
------------
Total states run:     &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Xem đầy đủ các option, các function khác của &lt;code&gt;pkg state module&lt;/code&gt; tại &lt;a href="https://docs.saltproject.io/en/latest/ref/states/all/salt.states.pkg.html#module-salt.states.pkg"&gt;module-salt.states.pkg&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Copy/render file và chạy câu lệnh&lt;/h3&gt;
&lt;p&gt;File &lt;code&gt;example.sls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;render a config file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;file.managed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;salt://template.j2&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;jinja&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;0400&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/tmp/ahihi.yml&lt;/span&gt;

&lt;span class="nt"&gt;now run a command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;cmd.run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;cat /tmp/ahihi.yml | head&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;cmd.run&lt;/code&gt; dùng để chạy 1 câu lệnh trên minion, lệnh tùy ý. Với &lt;code&gt;cmd.run&lt;/code&gt;,
ta đã có thể làm được mọi thứ, đây là cách đơn giản nhất để thay thế các
bash script mặc dù không phải tối ưu nhất. Ví dụ: nếu chạy apt-get install để
cài package thay vì pkg.installed sẽ mất đi các lợi ích pkg.installed thực hiện
- chạy trên nhiều OS khác nhau, tự động chạy apt update).
Người mới tập dùng Salt có thể dùng &lt;code&gt;cmd.run&lt;/code&gt; để bắt đầu, nhưng nên tìm state
module có sẵn để thu được kết quả tốt hơn.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;file.managed&lt;/code&gt; có thể tải 1 file từ internet, có thể copy 1 file từ X đến Y,
trong ví dụ này nó copy file từ salt://template.j2 tới minion rồi render với
&lt;a href="https://docs.saltproject.io/en/getstarted/config/jinja.html"&gt;Jinja2 template&lt;/a&gt;,
ghi vào &lt;code&gt;/tmp/ahihi.yml&lt;/code&gt; và chmod 0400.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;salt://&lt;/code&gt; trong ví dụ này là &lt;code&gt;file_roots&lt;/code&gt; trong file cấu hình master, tức thư
mục &lt;code&gt;/home/hvn/saltlab/states&lt;/code&gt; trên máy master.&lt;/p&gt;
&lt;p&gt;Nội dung file template.j2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;- &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;meo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ga&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  - &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt;- &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;myuser: user&lt;/span&gt;
&lt;span class="x"&gt;mypassword: passwd&lt;/span&gt;

&lt;span class="x"&gt;os: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;grains&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;osfinger&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;ips: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;grains&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ipv4&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Jinja2 có for if/else như Python, xem
&lt;a href="https://docs.saltproject.io/en/getstarted/config/jinja.html"&gt;Jinja2 template&lt;/a&gt;
để tìm hiểu thêm.&lt;/p&gt;
&lt;h3&gt;5 phút dành cho lý thuyết: grains pillar&lt;/h3&gt;
&lt;p&gt;1 nhược điểm của Salt là theo mốt thời 2010, đặt tên cho mọi khái niệm, và tên
đó không thực sự có nhiều ý nghĩa - đơn giản chỉ là bịa ra (theo mốt của
&lt;a href="https://www.chef.io/"&gt;Chef&lt;/a&gt; - một đối thủ viết bằng Ruby).&lt;/p&gt;
&lt;p&gt;Salt có 2 khái niệm:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grains: chứa các thông tin về máy minion (OS, version, ip, ...)&lt;/li&gt;
&lt;li&gt;pillar: chứa các thông tin truyền từ master (thường là các thông tin bí mật như
  user/password).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;salt  grains&lt;/h4&gt;
&lt;p&gt;Ví dụ trên có truy cập 2 thông tin từ grains là tên hệ điều hành và các IPv4 của
máy minion. state.apply&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;          &lt;span class="nt"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;render a config file&lt;/span&gt;
   &lt;span class=" -Error"&gt; &lt;/span&gt;&lt;span class="nt"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;file.managed&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/tmp/ahihi.yml&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Result&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;True&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Comment&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;File /tmp/ahihi.yml is in the correct state&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Started&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;19:33:25.337228&lt;/span&gt;
    &lt;span class="nt"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;34.549 ms&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Changes&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;----------&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ID&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;now run a command&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Function&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;cmd.run&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;cat /tmp/ahihi.yml | head&lt;/span&gt;
      &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Result&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;True&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Comment&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Command &amp;quot;cat /tmp/ahihi.yml | head&amp;quot; run&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Started&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;19:33:25.372408&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Duration&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;7.672 ms&lt;/span&gt;
     &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Changes&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
              &lt;span class="l l-Scalar l-Scalar-Plain"&gt;----------&lt;/span&gt;
              &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pid&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
                  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;42905&lt;/span&gt;
              &lt;span class="nt"&gt;retcode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;0&lt;/span&gt;
              &lt;span class="nt"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="nt"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

                    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;meo&lt;/span&gt;
                    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;bo&lt;/span&gt;
                    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ga&lt;/span&gt;

              &lt;span class=" -Error"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;myuser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;user&lt;/span&gt;
                  &lt;span class="nt"&gt;mypassword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;passwd&lt;/span&gt;

                  &lt;span class="nt"&gt;os&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Ubuntu-20.04&lt;/span&gt;
                  &lt;span class="nt"&gt;ips&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;192.168.0.110&amp;#39;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để liệt kê tất cả grains của minion, dùng Salt command &lt;code&gt;grains.items&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ salt-ssh -c ~/saltlab tv grains.items
tv:
    ----------
    biosreleasedate:
        &lt;span class="m"&gt;08&lt;/span&gt;/27/2020
    biosversion:
        &lt;span class="m"&gt;0416&lt;/span&gt;
    cpu_flags:
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;salt pillar&lt;/h4&gt;
&lt;p&gt;Pillar chỉ nằm trên master, nó map file nào dành cho minion nào. File &lt;code&gt;top.sls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;base:
  &amp;#39;*&amp;#39;:
    - common
  &amp;#39;trau&amp;#39;:
    - uds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt; tức mọi minion đều có thể truy cập các pillar item trong file &lt;code&gt;common.sls&lt;/code&gt;,
chỉ &lt;code&gt;trau&lt;/code&gt; mới truy cập được nội dung trong file &lt;code&gt;uds.sls&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Các file pillar là các file &lt;code&gt;.sls&lt;/code&gt; theo syntax YAML, biểu diễn các dictionary
của Python. Ví dụ: &lt;code&gt;uds.sls&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;telegram_token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;this_is_token&lt;/span&gt;

&lt;span class="nt"&gt;database&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;
  &lt;span class="nt"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;toor&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để liệt kê tất cả pillar item dành cho minion, dùng Salt command &lt;code&gt;pillar.items&lt;/code&gt;
(chú ý grains có s, pillar không có).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ salt-ssh -c ~/saltlab trau pillar.items
trau:
    ----------
    database:
        ----------
        password:
            toor
        username:
            root
    telegram_token:
        this_is_token
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ví dụ 1 file dùng pillar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# /lib/systemd/system/uds.service&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Unit&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Description=UDS telegram bot&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;[Service]&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;User=uds&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Environment=BOT_TOKEN={{ pillar[&amp;#39;telegram_token&amp;#39;] }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Deploy 1 Python project&lt;/h3&gt;
&lt;p&gt;Link này viết 1 salt formula (tên của 1 "bộ cài bằng Salt") để cài
bot telegram &lt;code&gt;uds&lt;/code&gt; chạy trên Ubuntu 18.04 với systemd.
&lt;a href="https://github.com/pymivn/udsbot-salt"&gt;udsbot-salt&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;Khi kêt quả chạy apply không thành công, thêm &lt;code&gt;-ldebug&lt;/code&gt; để xem log chi tiết.&lt;/p&gt;
&lt;h2&gt;Dùng Ansible "xịn hơn" không?&lt;/h2&gt;
&lt;p&gt;Không, Ansible giống Salt đến bất ngờ, cũng viết bằng Python với các module
tương ứng, cũng dùng Jinja2, cũng viết cấu hình bằng file YAML.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hvnsweeting/elbisna/blob/master/redis/roles/redis/tasks/main.yml"&gt;Xem ví dụ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ngày nay, Ansible phổ biến hơn nhờ nó đơn giản hơn để bắt đầu, do ít
từ khóa hay khái niệm lạ. Năm 2015, RedHat mua lại Ansible khiến cho nó
càng trở nên phổ biến hơn.&lt;/p&gt;
&lt;p&gt;Salt thành công trước Ansible (2012 2013), đứng sau là công ty SaltStack, đến
năm 2020 cũng được ông lớn &lt;a href="https://www.vmware.com/support/acquisitions/saltstack.html"&gt;VMWare
mua lại&lt;/a&gt;. Salt có
nhiều ưu điểm so với Ansible (đặc biệt là nhanh),
cung cấp nhiều tính năng phức tạp - dùng trong môi trường phức tạp.&lt;/p&gt;
&lt;p&gt;Dùng Salt chuyển sang Ansible mất nửa ngày để map lại khái niệm.&lt;/p&gt;
&lt;h2&gt;Học salt là học gì&lt;/h2&gt;
&lt;p&gt;Đa phần là học các salt module (như &lt;code&gt;pkg.installed&lt;/code&gt;) có sẵn để viết các
state, dùng chúng như các viên gạch để tự động quá trình cài đặt / cấu hình
phần mềm trên hệ thống.
Cách thực hành đơn giản nhất là dùng Salt cài các phần mềm trên chính máy tính
của mình đang dùng, thay vì gọi &lt;code&gt;salt-ssh&lt;/code&gt;, dùng&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo salt-call --local state.apply FORMULA_NAME -linfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;Tạo 1 salt formula để deploy app Flask hello world chạy bằng gunicorn
với NGINX server rồi tạo Pull Request vào &lt;a href="https://github.com/pymivn/flask-salt"&gt;pymivn/flask-salt&lt;/a&gt;
để trăm hay đều như tay quen.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Năm COVID-19 thứ 2, 2021, Salt, Ansible, Chef hay Puppet không còn mới mẻ gì,
từng là "điểm cộng" trong các vòng tuyển dụng thì giờ là yêu cầu hiển nhiên
cho giới "DevOps", thế giới cũng đã đu theo một trend mới hơn, hot hơn
có tên Docker+Kubernetes, nhưng các CM vẫn luôn có đất dùng. Trend lên rồi sẽ
xuống, hot rồi sẽ nguội, cái gì hợp lý thì ta dùng.&lt;/p&gt;
&lt;p&gt;Đến đây, đã đủ để các Python dev deploy code như 1 DevOps engineer thực thụ,
không phải nhọc nhằn code bash.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Life's too short to remember how to write Bash code. I feel liberated.  — @laheadle on Clojurians Slack&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.saltproject.io/en/latest/topics/ssh/"&gt;salt-ssh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://github.com/saltstack/salt/issues/59942&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/2015/06/saltstack-chao-muoi-em-la-ai.html"&gt;Chào Muối, em là ai? &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https://docs.saltproject.io/en/latest/contents.html&lt;/li&gt;
&lt;li&gt;Các formula cộng đồng &lt;a href="https://github.com/saltstack-formulas"&gt;saltstack-formulas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ủng hộ tác giả&lt;/h3&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="saltstack"></category><category term="salt"></category><category term="deploy"></category><category term="devops"></category><category term="ansible"></category><category term="sysadmin"></category></entry><entry><title>Học Haskell không phải trầm trồ - theo cách Pymi.vn</title><link href="http://pp.pymi.vn/article/haskell1/" rel="alternate"></link><published>2021-06-10T00:00:00+07:00</published><updated>2021-06-10T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-06-10:/article/haskell1/</id><summary type="html">&lt;p&gt;ngôn ngữ lập trình luôn được xếp vào nhóm "khó học nhất" - giống Python bất ngờ - phần 1.&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;Cảnh báo: rất giống Python&lt;/li&gt;
&lt;li&gt;Chú ý: không cần biết Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Haskell (/ˈhæskəl/) - visub: ha-s-kồ - 1990 (lớn hơn Python 1 tuổi)
Trang chủ: &lt;a href="https://www.haskell.org/"&gt;https://www.haskell.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Haskell" src="https://www.haskell.org/img/haskell-logo.svg"&gt;&lt;/p&gt;
&lt;p&gt;Haskell là ngôn ngữ functional (lập trình hàm), thuộc nhóm "pure" blah blah blah
có thể bỏ qua và gõ cho đến cuối bài, work first, talk is cheap, later.&lt;/p&gt;
&lt;h2&gt;Cài đặt&lt;/h2&gt;
&lt;p&gt;Hướng dẫn &lt;a href="https://www.haskell.org/downloads/#linux-mac-freebsd"&gt;trang chủ&lt;/a&gt;, hỗ trợ cả Windows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl --proto &lt;span class="s1"&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://get-ghcup.haskell.org &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;enter enter enter ... rồi mở terminal mới, gõ &lt;code&gt;ghci&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ghci --version
The Glorious Glasgow Haskell Compilation System, version 8.10.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trên Ubuntu có thể dùng:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install -y haskell-stack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;REPL&lt;/h2&gt;
&lt;p&gt;REPL - Read Eval Print Loop, là chương trình nhận code người dùng nhập vào
(Read), chạy code đó (Eval), in kết quả ra màn hình (Print), và cứ tiếp tục vậy
(Loop).&lt;/p&gt;
&lt;p&gt;Khái niệm này bắt nguồn từ ngôn ngữ lập trình cổ thứ 2 thế giới: LISP.&lt;/p&gt;
&lt;p&gt;Việc viết code khi dùng các ngôn ngữ có REPL thường theo các bước:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bật REPL lên&lt;/li&gt;
&lt;li&gt;gõ code thử cho tới khi thu được kết quả mong muốn&lt;/li&gt;
&lt;li&gt;copy code đó vào editor/IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Câu lệnh bật REPL của Haskell có tên &lt;code&gt;ghci&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ghci&lt;/span&gt;
&lt;span class="kt"&gt;GHCi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="mf"&gt;8.10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="kt"&gt;://&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;haskell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ghc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;  &lt;span class="kt"&gt;:?&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;
&lt;span class="mi"&gt;2048&lt;/span&gt;

&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;:&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;span class="kt"&gt;Leaving&lt;/span&gt; &lt;span class="kt"&gt;GHCi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Haskell Hello world&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Prelude&amp;gt; print &lt;span class="s2"&gt;&amp;quot;Hello Pymier!&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;Hello Pymier!&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Integer&lt;/h2&gt;
&lt;p&gt;cộng &lt;code&gt;+&lt;/code&gt; trừ &lt;code&gt;-&lt;/code&gt; nhân &lt;code&gt;*&lt;/code&gt; mũ/lũy thừa &lt;code&gt;^&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Prelude&amp;gt; &lt;span class="m"&gt;54&lt;/span&gt; + &lt;span class="m"&gt;5&lt;/span&gt; * &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; + &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;69&lt;/span&gt;
Prelude&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; ^ &lt;span class="m"&gt;1000&lt;/span&gt;
&lt;span class="m"&gt;10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Float&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mf"&gt;2.0&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mf"&gt;2.5&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;2.5&lt;/span&gt;
&lt;span class="mf"&gt;2.0&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;
&lt;span class="mf"&gt;0.30000000000000004&lt;/span&gt;

&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;
&lt;span class="kt"&gt;False&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://pymi.vn/blog/why-not-float/"&gt;Tại sao 0.1 + 0.1 + 0.1 /= 0.3&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Boolean&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Prelude&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; &amp;lt; &lt;span class="m"&gt;5&lt;/span&gt;
True
Prelude&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; &amp;gt; &lt;span class="m"&gt;5&lt;/span&gt;
False
Prelude&amp;gt; &lt;span class="m"&gt;1&lt;/span&gt; + &lt;span class="nv"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
True
Prelude&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; /&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
True
Prelude&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
True
Prelude&amp;gt; &lt;span class="m"&gt;1&lt;/span&gt;/0
Infinity
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Prelude&amp;gt; True &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; True
True
Prelude&amp;gt; True &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; False
False
Prelude&amp;gt; False &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; True
False
Prelude&amp;gt; False &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; False
False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt;
&lt;span class="kt"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;not&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;False&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Haskell boolean có tính &lt;a href="https://pymi.vn/tutorial/boolean/"&gt;short-circuit&lt;/a&gt; -
dừng lại ngay khi có thể kết luận kết quả biểu thức boolean.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ne"&gt;error&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;huhu&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="kt"&gt;Exception:&lt;/span&gt; &lt;span class="n"&gt;huhu&lt;/span&gt;
&lt;span class="kt"&gt;CallStack&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="kt"&gt;HasCallStack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="kt"&gt;:&lt;/span&gt;
  &lt;span class="ne"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="kt"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="kt"&gt;:Ghci2&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="ne"&gt;error&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;huhu&amp;quot;&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;False&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="ne"&gt;error&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;huhu&amp;quot;&lt;/span&gt;
&lt;span class="kt"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hay nói cụ thể:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;||&lt;/code&gt; sẽ dừng lại và trả về kết quả ngay khi gặp &lt;code&gt;True&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; sẽ dừng lại và trả về kết quả ngay khi gặp &lt;code&gt;False&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Với các ngôn ngữ khác, boolean có short-circuit hay không thì tùy từng ngôn
ngữ quyết định, nhưng với một tính năng nổi bật của Haskell: &lt;strong&gt;Lazy&lt;/strong&gt;,
short-circuit là chuyện đương nhiên.&lt;/p&gt;
&lt;h2&gt;type&lt;/h2&gt;
&lt;p&gt;Các câu lệnh trong &lt;code&gt;ghci&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:help&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:info&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;:&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="n"&gt;mod&lt;/span&gt;
&lt;span class="kr"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Integral&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Constraint&lt;/span&gt;
&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Real&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Enum&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Integral&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kr"&gt;where&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="n"&gt;mod&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="c1"&gt;-- Defined in ‘GHC.Real’&lt;/span&gt;
&lt;span class="kr"&gt;infixl&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;&lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt;

&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;:&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kr"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;Num&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Constraint&lt;/span&gt;
&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kr"&gt;where&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="c1"&gt;-- Defined in ‘GHC.Num’&lt;/span&gt;
&lt;span class="kr"&gt;infixl&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hiển thị type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;:&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;

&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nf"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;

&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;
&lt;span class="mf"&gt;0.1&lt;/span&gt;
&lt;span class="nf"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Fractional&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;số nguyên 1 có kiểu &lt;code&gt;Num&lt;/code&gt;, số float &lt;code&gt;0.1&lt;/code&gt; có kiểu &lt;code&gt;Fractional&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="kt"&gt;True&lt;/span&gt;
&lt;span class="nf"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Bool&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;giá trị boolean True có kiểu &lt;code&gt;Bool&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;con mèo trèo&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;con m&lt;/span&gt;&lt;span class="se"&gt;\232&lt;/span&gt;&lt;span class="s"&gt;o tr&lt;/span&gt;&lt;span class="se"&gt;\232&lt;/span&gt;&lt;span class="s"&gt;o&amp;quot;&lt;/span&gt;
&lt;span class="nf"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;Char&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;con mèo trèo&amp;quot;&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="nf"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;string là 1 list của các &lt;code&gt;Char&lt;/code&gt; (character - ký tự)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nf"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Num&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Enum&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;kiểu list được biểu diễn bởi dấu &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;it&lt;/code&gt; là biểu thức/kết quả cuối cùng bạn đã gõ. Tương tự &lt;code&gt;_&lt;/code&gt; trong Python interpreter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;ProjectEuler problem 1&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://projecteuler.net/problem=1"&gt;https://projecteuler.net/problem=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chú ý: theo chương trình học của &lt;a href="https://pymi.vn"&gt;Pymi.vn&lt;/a&gt;, phần này được
học ở buổi số 4. Bạn đọc cần biết Python để hiểu phần này hoặc chỉ cần
gõ theo. Có thể đọc thêm tại &lt;a href="https://pp.pymi.vn/article/tuple_comps/"&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tạo list các số từ 1 đến 5&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Haskell không dùng &lt;code&gt;%&lt;/code&gt; cho phép chia lấy phần dư (modulo/remainder), code Python &lt;code&gt;10 % 3&lt;/code&gt; tương đương với viết Haskell &lt;code&gt;mod 10 3&lt;/code&gt; hoặc
&lt;code&gt;rem 10 3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Haskell dùng &lt;code&gt;|| &amp;amp;&amp;amp;&lt;/code&gt; thay Python &lt;code&gt;or and&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/whatsnew/2.0.html#list-comprehensions"&gt;Python 2.0 &lt;strong&gt;MƯỢN&lt;/strong&gt; list comprehension từ Haskell&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="mi"&gt;233168&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Haskell dùng &lt;code&gt;|&lt;/code&gt; thay chữ &lt;code&gt;for&lt;/code&gt;, dùng &lt;code&gt;&amp;lt;-&lt;/code&gt; thay chữ &lt;code&gt;in&lt;/code&gt;, dùng &lt;code&gt;,&lt;/code&gt; thay chữ &lt;code&gt;if&lt;/code&gt; so với Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;mod&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;mod&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;233168&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bonus:
bài &lt;a href="https://projecteuler.net/problem=16"&gt;PE16&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tính tổng các chữ số của 2 mũ 1000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Integer&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="mi"&gt;1366&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Các đặc tính nổi bật của Haskell&lt;/h2&gt;
&lt;p&gt;Theo &lt;a href="https://wiki.haskell.org/Introduction"&gt;wiki Haskell&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Haskell is a computer programming language. In particular, it is a polymorphically statically typed, lazy, purely functional language, quite different from most other programming languages. The language is named for Haskell Brooks Curry, whose work in mathematical logic serves as a foundation for functional languages. Haskell is based on the lambda calculus, hence the lambda we use as a logo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;polymorphically statically typed&lt;/li&gt;
&lt;li&gt;lazy&lt;/li&gt;
&lt;li&gt;purely functional&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hoặc xem phần features trên https://www.haskell.org/&lt;/p&gt;
&lt;h3&gt;lập trình hàm là gì&lt;/h3&gt;
&lt;p&gt;Haskell là ngôn ngữ thuộc nhóm functional (lập trình hàm).&lt;/p&gt;
&lt;p&gt;Trên lý thuyết,
có nghĩa nó dựa trên &lt;a href="https://wiki.haskell.org/Lambda_calculus"&gt;"lambda calculus"&lt;/a&gt;, một mô hình/hệ thống
tính toán dùng các function (hàm toán học), khác với mô hình Turing Machine mà
các ngôn ngữ lập trình C, Java, Python, Go... dựa trên.
Hai mô hình này được chứng minh về mặt toán học là có khả năng như nhau.&lt;/p&gt;
&lt;p&gt;Về mặt thực hành, code với 1 ngôn ngữ functional thường có nghĩa là:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;không dùng vòng lặp for/while mà dùng các function có sẵn để làm việc tương tự
(vd: map, filter, fold, reduce,...) hoặc viết các &lt;a href="https://pymi.vn/blog/print-recursively/"&gt;recursive function&lt;/a&gt; để thu được
kết quả tương ứng.&lt;/li&gt;
&lt;li&gt;Các kiểu dữ liệu thường là immutable, khi thay đổi 1 list, Haskell sẽ
tạo ra 1 list mới với những thay đổi đã thực hiện (và bỏ list cũ đi).&lt;/li&gt;
&lt;li&gt;First class function: quen với việc dùng function này làm đầu vào cho function
khác. Ví dụ map &lt;code&gt;map (\x -&amp;gt; x * 2) [1..5]&lt;/code&gt; nhận function &lt;code&gt;\x -&amp;gt; x * 2&lt;/code&gt; và 1 list
để thực hiện function đó trên tất cả các phần tử trong list.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Haskell purely functional là gì&lt;/h3&gt;
&lt;p&gt;pure function là một function không có "side effect", giống hàm toán học, kết
quả đầu ra chỉ phụ thuộc đầu vào.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;luôn&lt;/span&gt; &lt;span class="n"&gt;luôn&lt;/span&gt; &lt;span class="n"&gt;bằng&lt;/span&gt; &lt;span class="mi"&gt;61&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Side effect là việc
function thực hiện 1 thay đổi nào đó (thay đổi phần tử 1 list, đọc ghi 1 file,
in ra màn hình, kết nối internet, sleep chương trình, ...) hay phụ thuộc vào
yếu tố khác với đầu vào (một chương trình phụ thuộc vào thời gian lúc nó chạy)
nghe hơi vô lý khi
một ngôn ngữ mà không tương tác với thế giới bên ngoài thì... chỉ để học toán.
Nhưng Haskell sẽ dựa trên 1 khái niệm/cơ chế hoàn toàn khác để thực hiện các
việc nói trên.&lt;/p&gt;
&lt;h3&gt;Haskell lazy là gì&lt;/h3&gt;
&lt;p&gt;lazy là chỉ thực hiện tính toán khi thực sự cần tới giá trị.
Ví dụ có thể viết code tạo ra list từ 1 tới vô cùng, nhưng vì Haskell lazy,
nó chỉ lấy ra phần tử nó cần, chứ không tạo list từ 1 tới vô cùng từ đầu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;take&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;take&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong Python, khái niệm gần nhất với lazy là &lt;a href="https://pp.pymi.vn/article/tuple_comps/"&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Để Haskell bắt buộc phải tính list [1..] tới vô cùng, ta dùng 1 function cần
phải duyệt đến phần tử cuối cùng của list - như tính độ dài : &lt;code&gt;length&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;Prelude&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="kt"&gt;CInterrupted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;code này sẽ chạy mãi cho tới khi người dùng tắt chương trình hoặc bấm Ctrl-C.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Ngày đầu của Haskell không hề khó hơn ngày đầu học Python. Đừng vì "cộng đồng
mạng" nói khó mà chưa thử đã tin!&lt;/p&gt;
&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://pymi.vn/tutorial/python-integer/&lt;/li&gt;
&lt;li&gt;https://pymi.vn/tutorial/python-calculation-2/&lt;/li&gt;
&lt;li&gt;&lt;a href="http://book.realworldhaskell.org/read/getting-started.html"&gt;RealWorldHaskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What next?&lt;/h2&gt;
&lt;p&gt;Loạt bài viết dự kiến có 6-8 bài, ứng với 6-8 buổi &lt;a href="https://pymi.vn"&gt;học Python tại pymi.vn&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Ủng hộ tác giả viết phần tiếp theo&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="haskell"></category></entry><entry><title>Python free variable</title><link href="http://pp.pymi.vn/article/free/" rel="alternate"></link><published>2021-06-07T00:00:00+07:00</published><updated>2021-06-07T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-06-07:/article/free/</id><summary type="html">&lt;p&gt;tự do như biến&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python có 2 loại variable (biến): local, global, và free (đếm từ 0, tất nhiên).&lt;/p&gt;
&lt;p&gt;&lt;img alt="free" src="https://images.unsplash.com/photo-1546672117-f83291ce87a9?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=max&amp;amp;fm=jpg&amp;amp;ixid=MnwyMzI1MzN8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MjMwNzQxNTI&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=600"&gt;&lt;/p&gt;
&lt;h2&gt;binding&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;x = 42&lt;/code&gt; trong Python đọc là bind name x tới object 42.
Tham khảo thêm tại bài &lt;a href="https://pymi.vn/blog/call-by/"&gt;Python call by gì?&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3 loại variable trong Python&lt;/h2&gt;
&lt;h3&gt;global variable&lt;/h3&gt;
&lt;p&gt;Đoạn code sau&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;x&lt;/code&gt; viết sát lề, gọi là global variable. Chạy đoạn code trên sẽ hiện ra
exception:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ne"&gt;NameError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;do code dùng x trước khi x được bind tới object 42.&lt;/p&gt;
&lt;h3&gt;local variable&lt;/h3&gt;
&lt;p&gt;Đoạn code tiếp theo, chạy sẽ thấy gì? Gợi ý: không phải NameError:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;x = 42&lt;/code&gt; nằm trong 1 block (trong thân function hay class), gọi là local variable.
Trong 1 block, dùng 1 variable/name trước khi bind nó (tức là có bind, nhưng
bind sau khi dùng), exception sẽ xảy ra là&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ne"&gt;UnboundLocalError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;referenced&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;assignment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;free variable&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Xóa &lt;code&gt;x = 42&lt;/code&gt; trong ví dụ phần local, ta chạy đoạn code này, lại thấy NameError.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ne"&gt;NameError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lần này không xảy ra UnboundLocalError, do đoạn code không bind x = 42
trong thân function (block). &lt;code&gt;x&lt;/code&gt; ở đây là một free variable.&lt;/p&gt;
&lt;p&gt;Free variable hoạt động theo cách ... rất tự do. Khi không tìm thấy x trong
foo, Python sẽ đi tìm x ở global (bên ngoài function foo).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;
&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Màn hình sẽ hiện ra &lt;code&gt;42&lt;/code&gt;, &lt;code&gt;100&lt;/code&gt; hay &lt;code&gt;96&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Việc tính toán tên &lt;code&gt;x&lt;/code&gt; có giá trị gì, được thực hiện khi function &lt;strong&gt;CHẠY&lt;/strong&gt;.
Khi gọi &lt;code&gt;foo()&lt;/code&gt; ở trên, x đã có giá trị là 96.&lt;/p&gt;
&lt;h2&gt;Static analysis&lt;/h2&gt;
&lt;p&gt;Việc dùng các công cụ (phần mềm/chương trình) để phân tích/tìm lỗi code bằng
cách đọc code (text) - mà không cần chạy code, gọi là static analysis.
Trong Python phổ biến các công cụ như &lt;code&gt;pep8&lt;/code&gt;, &lt;code&gt;flake8&lt;/code&gt;, &lt;code&gt;pylint&lt;/code&gt;, &lt;a href="https://pp.pymi.vn/article/mypy/"&gt;&lt;code&gt;mypy&lt;/code&gt; cũng
có thể tính luôn&lt;/a&gt;, hay các tính năng
tích hợp sẵn của IDE như Pycharm.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flake8&lt;/code&gt; cơ bản giống &lt;code&gt;pep8&lt;/code&gt; (tên mới là &lt;code&gt;pycodestyle&lt;/code&gt;), thêm tính năng phát
hiện thư viện không dùng tới/ hay biến không tồn tại.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;khi chạy &lt;code&gt;flake8&lt;/code&gt; với file code, &lt;code&gt;flake8&lt;/code&gt; sẽ phát hiện ra thư viện
&lt;code&gt;math&lt;/code&gt; được import nhưng không dùng, tên &lt;code&gt;x&lt;/code&gt; chưa được định nghĩa.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;flake8&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;F401&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;math&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;imported&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;unused&lt;/span&gt;
&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;F821&lt;/span&gt; &lt;span class="n"&gt;undefined&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;F841&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;assigned&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;flake8&lt;/code&gt; rất hữu ích khi dễ dàng phát hiện các lỗi đơn giản như gõ nhầm tên
biến hay dùng biến không tồn tại như trên.
Nhưng khi &lt;code&gt;x&lt;/code&gt; là free variable, không công cụ nào của Python có thể phát hiện
ra lỗi này cho tới khi chạy mới thấy exception:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;

&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do &lt;code&gt;x&lt;/code&gt; là free variable, các công cụ phải quét hết cả file code để tìm &lt;code&gt;x&lt;/code&gt;,
và nó tìm thấy, nên tin rằng &lt;code&gt;x&lt;/code&gt; có tồn tại, nhưng đã quá muộn rồi.
Một ví dụ vô lý hơn nữa, để thấy sự bất lực của các công cụ static analysis:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;Hạn chế hết mức việc sử dụng global variable, free variable, cần biến gì thì
đưa argument vào function biến đó, code "sát tường" cho hết vào 1 function
main và gọi main() nếu cần chạy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;flake8&lt;/code&gt; sẽ làm tốt nhiệm vụ phát hiện ra &lt;code&gt;x&lt;/code&gt; chưa được định nghĩa trong ví dụ trên:
&lt;code&gt;F821 undefined name 'x'&lt;/code&gt;, và đoạn code này có thể viết lại để không
còn dùng global/free variable nữa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n_pymi_vn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Tính dynamic của Python khiến các công cụ khó có thể xử lý mọi trường hợp,
công cụ sẽ chỉ giúp một phần, phần còn lại là sự cẩn thận của lập trình viên.&lt;/p&gt;
&lt;p&gt;Tự do phải chăng cần trong khuôn khổ?&lt;/p&gt;
&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.familug.org/p/ung-ho.html"&gt;Ủng hộ tác giả 🍺&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/reference/executionmodel.html#interaction-with-dynamic-features"&gt;https://docs.python.org/3/reference/executionmodel.html#interaction-with-dynamic-features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="python"></category></entry><entry><title>Cứ đi là đến (go)</title><link href="http://pp.pymi.vn/article/go12/" rel="alternate"></link><published>2021-03-11T00:00:00+07:00</published><updated>2021-03-11T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2021-03-11:/article/go12/</id><summary type="html">&lt;p&gt;Học vừa đủ Golang để nguy hiểm - phần 2 - hết&lt;/p&gt;</summary><content type="html">&lt;p&gt;Phần tiếp theo của loạt bài viết &lt;a href="http://pp.pymi.vn/article/go/"&gt;&lt;strong&gt;Học vừa đủ Golang để nguy hiểm&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Chi tiết về các khái niệm chỉ có trong Go mà không có trong Python như Pointer,
sự khác biệt về cách tổ chức package trong Go, declaration &amp;amp; initialization
(khai báo và khởi tạo variable), cùng các standard library quan trọng nhất
cho một SysAdmin/DevOps.&lt;/p&gt;
&lt;p&gt;Code trong loạt bài này lược bỏ phần package/import/declare function main, người đọc tự thêm vào để chạy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pp.pymi.vn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// WRITE CODE HERE&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Extended Backus-Naur Form (EBNF)&lt;/h2&gt;
&lt;p&gt;Cú pháp dùng để mô tả Go syntax có tên &lt;a href="https://golang.org/ref/spec#Notation"&gt;EBNF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Có vẻ không dễ đọc, nhưng không phải là không thể đọc nổi, bỏ qua nếu
bạn không quan tâm. Một ví dụ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;Production&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;production_name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;Expression&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Expression&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Alternative&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;|&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;Alternative&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Alternative&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Term&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Term&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Term&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;production_name&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;…&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Group&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Option&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Repetition&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Group&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;Expression&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Option&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;Expression&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Repetition&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;Expression&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://docs.python.org/3.9/reference/grammar.html"&gt;Python 3.9 dùng EBNF kết hợp với PEG&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Khai báo và khởi tạo&lt;/h2&gt;
&lt;p&gt;Declaration &amp;amp; initialization&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;VarDecl&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;var&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;VarSpec&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;VarSpec&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;)&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;VarSpec&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;IdentifierList&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;ExpressionList&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;ExpressionList&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để sử dụng 1 biến (variable) trong Go, cần làm 2 bước declaration (khai báo) và
initialization (khởi tạo giá trị).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt;
    &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="kt"&gt;float64&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="c1"&gt;// 0 false +0.000000e+000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Khai báo biến sử dụng từ khóa &lt;code&gt;var&lt;/code&gt;, nếu không gán giá trị khởi tạo
(initialization), các biến sẽ có &lt;a href="https://golang.org/ref/spec#The_zero_value"&gt;zero
value&lt;/a&gt; tương ứng với kiểu
của nó. Tức int sẽ = 0, bool = false, string = "", pointer = nil. Nếu có gán
giá trị, biểu thức theo sau sẽ được tính toán và biến sẽ chứa giá trị này.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Short variable declarations&lt;/em&gt;, không cần ghi type, và dùng dấu &lt;code&gt;:&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ShortVarDecl = IdentifierList &amp;quot;:=&amp;quot; ExpressionList .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pymier&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Pymier679&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;https://golang.org/ref/spec#Variable_declarations&lt;/p&gt;
&lt;h2&gt;Scope&lt;/h2&gt;
&lt;p&gt;Scope là phạm vi hoạt động của một biến.
Mỗi tên biến chỉ có thể được định nghĩa duy nhất 1 lần trong mỗi block
(đánh dấu bởi &lt;code&gt;{}&lt;/code&gt;) như trong if/for/switch
hay function, biến này không thoát ra ngoài block - hay có scope trong block đó.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Python&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;//Python&lt;/span&gt;
    &lt;span class="c1"&gt;//3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;điều này nghĩa là nếu khai báo 1 variable trong vòng &lt;code&gt;for&lt;/code&gt; hay trong
điều kiện &lt;code&gt;if&lt;/code&gt;, thì chúng không thoát ra ngoài khỏi các khối ấy, sẽ
không có hiện lượng &lt;strong&gt;leak&lt;/strong&gt; variable như trong Python for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Mi&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Kết quả hiện ra 2, không hiện ra Mi&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; is hoc sinh gioi&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Tính năng&lt;/em&gt; này dễ dẫn đến bug nếu ta chuyển code đi xung quanh, hay vô tình đặt tên giống nhau tại các nơi khác, trong cùng 1 function.&lt;/p&gt;
&lt;p&gt;Trong Go:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Mi&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="c1"&gt;// 3 Mi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;https://golang.org/ref/spec#Declarations_and_scope&lt;/p&gt;
&lt;h2&gt;Struct&lt;/h2&gt;
&lt;p&gt;struct là khác biệt lớn đầu tiên với người code Python không dùng class (mà dùng dict).
Do trong Go không thể tạo 1 map chứa các value khác kiểu, không
có đoạn code tương tự với code Python sau đây nếu chỉ dùng map:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;boy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Pika&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;students&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;20088888&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;boy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;20089999&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Doraemon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;students&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20088888&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;# Pika&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vậy nên khi cần biểu diễn 1 object trong Go, cần tạo struct:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Student&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;age&lt;/span&gt;  &lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;boy&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pika&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;boy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// {Pika 18}&lt;/span&gt;
&lt;span class="nx"&gt;students&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nx"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;20088888&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;20089999&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Student&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Doraemon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;students&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20088888&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Pika&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và vì thế, map trong Go sẽ chỉ còn được dùng khi cần "ghép cặp" key-value, tối
ưu cho việc tìm kiếm theo key. BIG NOTE: Go không có kiểu set built-in.&lt;/p&gt;
&lt;p&gt;Để viết code Python "đúng" nhất theo Go, hãy tạo class mỗi khi cần 1 object,
việc này hợp lý trên lý thuyết, nhưng trong thực hành, khi nhận được 1 JSON
string rồi &lt;code&gt;json.loads&lt;/code&gt; lên, không mấy ai ngồi viết class cả.
Trong Go thì bắt  buộc phải ngồi viết struct cho JSON đó, hoặc dùng thư viện
cung cấp sẵn struct tương ứng giá trị JSON nói trên nếu dịch vụ có Go client
SDK.&lt;/p&gt;
&lt;h2&gt;Pointer&lt;/h2&gt;
&lt;p&gt;Now is the famous POINTER!&lt;/p&gt;
&lt;p&gt;pointer vốn làm rụng tóc hàng ngàn sinh viên đại học khi học C, pointer trong
Go không khác nhiều với pointer trong C, nhưng sẽ là thứ rất khác biệt với
người đến từ Python.&lt;/p&gt;
&lt;p&gt;Code trước, nói sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;
&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Value of p: %v - Type of p: %T\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Value of p: 0xc000014110 - Type of p: *int&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0xff == 255: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// 0xff == 255:  true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;p&lt;/code&gt; có kiểu &lt;code&gt;*int&lt;/code&gt;, và point to &lt;code&gt;x&lt;/code&gt; (trỏ tới &lt;code&gt;x&lt;/code&gt;), dấu &lt;code&gt;*&lt;/code&gt; ở đây là
ký hiệu của kiểu pointer, đứng trước kiểu mà nó trỏ tới.
&lt;code&gt;p&lt;/code&gt; là một pointer trỏ tới &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; có kiểu &lt;code&gt;int&lt;/code&gt; nên &lt;code&gt;p&lt;/code&gt; có kiểu &lt;code&gt;*int&lt;/code&gt;.
Còn giá trị của &lt;code&gt;p&lt;/code&gt; là gì? &lt;code&gt;0xc000014110&lt;/code&gt; là cách viết hệ hexadecimal (hệ 16),
thường được dùng tới khi viết địa chỉ bộ nhớ máy tính.&lt;/p&gt;
&lt;p&gt;Trong Python cũng vậy, khi print 1 instance của class (object):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;print(object())&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f2025653c80&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chú ý kết quả trên máy bạn sẽ khác, do mỗi lần chạy, Go sẽ cấp 1 memory address
khác nhau.&lt;/p&gt;
&lt;h3&gt;Địa chỉ bộ nhớ (memory address)&lt;/h3&gt;
&lt;p&gt;Còn có các tên gọi khác như memory location, address.&lt;/p&gt;
&lt;p&gt;Trong máy tính, bộ nhớ (RAM) lưu giữ các giá trị của chương trình
đang chạy, các thanh RAM có nhiều "ô", và mỗi ô được đánh số
(trên thực tế phưc tạp hơn khi phân thành 2 loại physical address/logical
 address nhưng không bàn tới ở đây).
Khi tạo ra 1 giá trị trong Go, giá trị đó được chứa trong 1 ô, sử dụng phép
toán &lt;a href="https://golang.org/ref/spec#Address_operators"&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; (address operator)&lt;/a&gt; sẽ
lấy được địa chỉ này là một số int &amp;gt; 0 biểu diễn ở dạng hex.&lt;/p&gt;
&lt;h3&gt;Pointer là gì&lt;/h3&gt;
&lt;p&gt;Một pointer là một memory address - chỉ có vậy.
Nói &lt;code&gt;p&lt;/code&gt; là một pointer point đến &lt;code&gt;x&lt;/code&gt; là cách nói thuật ngữ của câu
&lt;code&gt;p&lt;/code&gt; là giá trị memory address của ô chứa &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Trong Go, một pointer luôn phải trỏ tới 1 giá trị x nào đó, ngoại trừ pointer mới declare sẽ có giá trị &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nếu 1 tấm biển có ghi địa chỉ của 1 quán ăn, thì tấm biển chính là pointer tới quán ăn đó.&lt;/p&gt;
&lt;p&gt;Để lấy giá trị mà &lt;code&gt;p&lt;/code&gt; trỏ tới - tức là &lt;code&gt;x&lt;/code&gt;, dùng ký hiệu: &lt;code&gt;*p&lt;/code&gt;.
Tránh nhầm lẫn dấu &lt;code&gt;*&lt;/code&gt; ở đây với dấu &lt;code&gt;*&lt;/code&gt; trong kiểu của pointer. Dấu &lt;code&gt;*&lt;/code&gt; ở đây gọi là &lt;code&gt;pointer indirection&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;
&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Value of *p: %v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;
&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Value of x: %v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Value of *p: 96&lt;/span&gt;
&lt;span class="c1"&gt;// Value of x: 99&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thay đổi &lt;code&gt;*p&lt;/code&gt; chính là thay đổi &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Pointer dùng để làm gì?&lt;/h3&gt;
&lt;p&gt;Vì pointer là memory address, tức một con số kiểu &lt;code&gt;int&lt;/code&gt;, nó rất nhỏ, nhẹ. Người
ta dùng nó vì muốn "nhẹ", muốn tiết kiệm bộ nhớ (RAM).
Pointer thường được dùng để pass argument cho function hay return kết quả từ
function.&lt;/p&gt;
&lt;h4&gt;Call by value là gì&lt;/h4&gt;
&lt;p&gt;Go function &lt;a href="https://golang.org/ref/spec#Calls"&gt;call by value&lt;/a&gt;, tức nếu gọi function với argument nào, thì function được gọi sẽ nhận được 1 bản &lt;strong&gt;copy&lt;/strong&gt; của argument đó. Khi function return, giá trị return này được &lt;strong&gt;copy&lt;/strong&gt; tới function gọi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;meo Meo&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ToUpper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ví dụ trên, &lt;code&gt;main&lt;/code&gt; gọi &lt;code&gt;ToUpper&lt;/code&gt;, &lt;code&gt;ToUpper&lt;/code&gt; sẽ nhận được 1 bản copy của &lt;code&gt;n&lt;/code&gt;, khi &lt;code&gt;ToUpper&lt;/code&gt; xử lý xong, &lt;code&gt;main&lt;/code&gt; sẽ nhận được 1 bản copy của kết quả mà &lt;code&gt;ToUpper&lt;/code&gt; return.&lt;/p&gt;
&lt;p&gt;Copy không có vấn đề gì khi kích thước nhỏ, nhưng khi kích thước dữ liệu lớn, copy sẽ tốn RAM/CPU, vậy nên người ta dùng pointer để chia sẻ chung address, dùng chung 1 giá trị thay vì copy để tiết kiệm RAM.
Việc này thực hiện bằng cách gọi function với pointer argument và return kiểu pointer. Khi call function với pointer argument, pointer argument vẫn được copy, nhưng copy address chỉ là copy 1 số int nhỏ bé.&lt;/p&gt;
&lt;p&gt;Note: &lt;a href="https://pymi.vn/blog/call-by/"&gt;Python call by object reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dẫn tới câu hỏi tiếp theo...&lt;/p&gt;
&lt;h3&gt;Bao nhiêu là lớn, khi nào thì dùng pointer?&lt;/h3&gt;
&lt;p&gt;Một giá trị kiểu &lt;code&gt;int&lt;/code&gt; với kích thước lớn nhất trong Go là &lt;code&gt;int64&lt;/code&gt; có kích thước 64 bits hay 64/8 == 8 bytes, đây được coi là nhỏ. Vậy bao nhiêu là lớn? 80 bytes? 800 bytes? 8 Kilobyte (8000B, 8KB) ...? quyết định sao là ở lập trình viên, &lt;a href="https://stackoverflow.com/questions/23542989/pointers-vs-values-in-parameters-and-return-values"&gt;và vì lập trình viên nhiều khi cũng không biết thế nào là lớn, nên hầu hết đều mặc định dùng pointer cho "tiết kiệm RAM"/nhẹ.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nếu tác giả của Go cũng nghĩ vậy, có lẽ họ mặc định function call by reference (dùng chung thông qua chia sẻ địa chỉ) thay vì call by value (copy giá trị) luôn cho khỏi phải nghĩ.&lt;/p&gt;
&lt;p&gt;Nhìn kỹ ra, lý do dùng pointer nói trên là 1 cách để "tối ưu" về bộ nhớ và tốc độ, nhưng việc này lại không tối ưu cho sự đơn giản, dễ hiểu của code - thứ luôn được đánh giá quan trọng hơn trong các chương trình thực tế.&lt;/p&gt;
&lt;p&gt;Không bao giờ bạn thấy function &lt;code&gt;sump&lt;/code&gt; nào trông thế này cả, kể cả nó
có vẻ như dùng ít tài nguyên hơn:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;sump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;sump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu tới đây vẫn chưa hiểu pointer là gì, hãy thử vận may với bài viết của &lt;a href="https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back"&gt;Dave Cheney&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Method&lt;/h2&gt;
&lt;p&gt;method của struct là một cú pháp rất sáng tạo và khác biệt với các ngôn ngữ phổ biến (C, Python)... nhưng nó chỉ là 1 cách viết đơn giản (syntactic sugar) để pass struct argument cho method. Ví dụ sau đây, method addAge và
function addAge là như nhau.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="nx"&gt;age&lt;/span&gt;  &lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;addAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;addAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;u&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pika&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pika&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;addAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v == %v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Kết quả như nhau&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;struct&lt;/code&gt; argument được mặc định pass vào cho method gọi là &lt;code&gt;method receiver&lt;/code&gt;,
method receiver hầu hết đều là pointer, lý do xem lại phần pointer và link đính kèm.
&lt;code&gt;method receiver&lt;/code&gt; giống như &lt;code&gt;self&lt;/code&gt; argument trong method của Python class.&lt;/p&gt;
&lt;h2&gt;Interface&lt;/h2&gt;
&lt;p&gt;Một var kiểu &lt;code&gt;interface{}&lt;/code&gt; có thể chứa mọi giá trị, biến Go thành dynamic
typing giống như Python, nhưng đấy không phải lý do người ta tạo ra interface.&lt;/p&gt;
&lt;p&gt;Trích Go &lt;a href="https://golang.org/ref/spec#Interface_types"&gt;spec&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An interface type specifies a method set called its interface. A variable of interface type can store a value of any type with a method set that is any superset of the interface. Such a type is said to implement the interface. The value of an uninitialized variable of interface type is nil.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;InterfaceType&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;interface&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;MethodSpec&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;InterfaceTypeName&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;MethodSpec&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;MethodName&lt;/span&gt; &lt;span class="nx"&gt;Signature&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;MethodName&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;identifier&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;InterfaceTypeName&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;TypeName&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;kiểu &lt;code&gt;interface&lt;/code&gt; dùng để định nghĩa 1 bộ các method. Thay vì cách dùng trong OOP phổ biến (Java, C#), một giá trị kiểu A là một giá trị kiểu A hoặc kế thừa kiểu A (inheritance), thì Go nói một giá trị kiểu A nếu nó có đủ các method trong interface A.
Nhờ tính năng này, Go có thể viết 1 function nhận vào 1 interface, và khi gọi, có thể nhận vào bất kỳ kiểu nào đã implement interface này. Đây gọi là &lt;code&gt;polymorphism&lt;/code&gt; - 1 trong &lt;a href="https://www.freecodecamp.org/news/four-pillars-of-object-oriented-programming/"&gt;4 đặc tính quan trọng của OOP&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Packages&lt;/h2&gt;
&lt;p&gt;Mỗi thư mục trong Go là 1 package riêng biệt, thư mục con là 1 package khác, không liên quan gì tới thư mục chứa nó.
&lt;a href="https://docs.google.com/document/d/1e8kOo3r51b2BWtTs_1uADIA5djfXhPT36s6eHVRIvaU/edit#!"&gt;Thư mục &lt;code&gt;internal/&lt;/code&gt; chỉ cho phép các thư mục chứa nó dùng, không cho phép các thư mục/project  khác dùng&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Concurrency&lt;/h2&gt;
&lt;p&gt;Concurrency &lt;strike&gt;trong Go&lt;/strike&gt; là một vấn đề phức tạp.
Mặc dù concurrency là một thế mạnh của Go so với các ngôn ngữ khác,
nó vẫn đầy những vấn đề khó khăn, dễ sai, và không hoàn hảo (goroutine leak).
thread &amp;amp; multiprocess &amp;amp; async trong Python, hay các ngôn ngữ khác, cũng không phải ngoại lệ.&lt;/p&gt;
&lt;h2&gt;Cost&lt;/h2&gt;
&lt;p&gt;Một triết lý trong thiết kế của Go là khiến lập trình viên nhìn thấy
"cost" của code mình viết.
Ví dụ trong Python viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# O(n)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;# O(1)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;chỉ thấy 1 chữ &lt;code&gt;in&lt;/code&gt; và không thấy &lt;strong&gt;rõ&lt;/strong&gt; là phải mất bao nhiêu phép tính, thì Go tối ưu thiết kế cho việc đó, dẫn tới việc muốn tìm 1 giá trị trong 1 slice/array, chỉ có cách là dùng 1 vòng for duyệt qua từng phần tử -&amp;gt; O(n).&lt;/p&gt;
&lt;h2&gt;Stdlib for DevOps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xử lý CLI argument: &lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Logging: &lt;code&gt;log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Testing: &lt;code&gt;testing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Xử lý file, thư mục, process: &lt;code&gt;io&lt;/code&gt;, &lt;code&gt;os&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HTTP: &lt;code&gt;net/http&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;JSON: &lt;code&gt;encoding/json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cộng đồng Go &lt;a href="https://go-proverbs.github.io/"&gt;ưa chuộng việc copy 1 chút thay vì cài thêm thư viện bên ngoài&lt;/a&gt;, ưu chuộng dùng bộ stdlib có sẵn.&lt;/p&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;p&gt;Script liệt kê các GitHub repositories của 1 GitHub user (NOTE: no pagination)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;Script lists GitHub repos of given username.&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;encoding/json&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;flag&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;log&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;os&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;urlFmt&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://api.github.com/users/%s/repos&amp;quot;&lt;/span&gt;

    &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Parse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage: ./cli username\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;urlFmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to get URL: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewDecoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;repos&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Name&lt;/span&gt;    &lt;span class="kt"&gt;string&lt;/span&gt;
        &lt;span class="nx"&gt;HtmlUrl&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="s"&gt;`json:&amp;quot;html_url&amp;quot;`&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;decoder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed to decode JSON: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;repos&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%3d %s %s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HtmlUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Go đơn giản, nhưng không dễ&lt;/h2&gt;
&lt;p&gt;Go đơn giản - đơn giản tức là ít khái niệm, ít cú pháp. Nhưng không dễ - dễ tức là không mất nhiều suy nghĩ, nhiều công sức làm một việc. Kiểm tra 1 phần tử trong slice, thêm 1 phần tử vào giữa array, ... các "bài toán nhỏ" mà Python chỉ mất 1 dòng code, thì trong Go là cả một vấn đề lớn mà người ta phải viết hẳn &lt;a href="https://github.com/golang/go/wiki/SliceTricks"&gt;wiki rồi chia sẻ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.arp242.net/go-easy.html"&gt;Go is simple, but not easy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Go có không it trap/gotchas dù ngôn ngữ có vẻ đơn giản:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/"&gt;50 Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rytisbiel.com/2021/03/06/darker-corners-of-go/"&gt;Darker Corners of Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Like &amp;amp; Dislike&lt;/h2&gt;
&lt;p&gt;Vậy anh có thích Go hay không?&lt;/p&gt;
&lt;p&gt;Đó là 1 câu hỏi bẫy! ngày còn 20, tôi sẽ trả lời ngay là không hay có, nhưng giờ nhận ra, cuộc sống đâu phải là binary mà chỉ có 0 với 1. Khi ta thích thứ gì, ta có thể thích chỗ này không thích chỗ kia. Khẩu vị con người cũng thay đổi, thứ không thích hôm nay có khi mai lại "từ thích thích thành thương thương"... Ngôn ngữ lập trình cũng chỉ là công cụ, có gì mà phải yêu với ghét...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/OWQMcEa6fr4"&gt;&lt;img alt="Amee" src="https://img.youtube.com/vi/OWQMcEa6fr4/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Like&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Compile thành binary + cross compiling: deploy trở thành câu chuyện rất đơn giản: copy file.&lt;/li&gt;
&lt;li&gt;Bộ stdlib đầy đủ: HTTP, JSON - hai công cụ quan trọng của DevOps.&lt;/li&gt;
&lt;li&gt;Được hỗ trợ rộng rãi bởi các nhà cung cấp dịch vụ: AWS, GCP... tất nhiên Python cũng được hỗ trợ nhiều, nhưng nếu bạn dùng 1 ngôn ngữ trẻ nào đó như... Elixir, &lt;a href="https://blog.darklang.com/new-backend-fsharp/"&gt;Rust hay già mà không rất phổ biến như Erlang, Ocaml thì đều không được hỗ trợ nhiều vậy&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Dislike&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Code dài dòng&lt;/li&gt;
&lt;li&gt;Không easy&lt;/li&gt;
&lt;li&gt;Quản lý package thay đổi liên tục từ 2014, giờ chắc đã ổn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Go là một ngôn ngữ đơn giản nhưng không dễ, ai cũng học được nhưng để có thể
dùng thoải mái sẽ cần một thời gian luyện tập cho quen sau khi đã dính lời
nguyền ngắn gọn, dễ dàng của Python. Go là một ngôn ngữ hiện đại, tốt, đáng bỏ
thời gian đầu tư làm quen để cho vào bộ công cụ của bạn... và vẫn yêu Python.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/ref/spec"&gt;Go spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://go-proverbs.github.io/"&gt;go-proverbs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.darklang.com/new-backend-fsharp/"&gt;Ocaml to F#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.darklang.com/new-backend-fsharp/"&gt;Dave Cheney on pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.arp242.net/go-easy.html"&gt;Go easy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ardanlabs/gotraining"&gt;Ultimate Go - non-free course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/presentations/Simple-Made-Easy/"&gt;Simple made easy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;
sau một lần nữa 6 tháng code Go và chắc lại còn lâu mới code nữa...&lt;/p&gt;</content><category term="Trang chủ"></category><category term="golang"></category><category term="go"></category></entry><entry><title>Mẹ ơi, con trượt rồi!</title><link href="http://pp.pymi.vn/article/dh/" rel="alternate"></link><published>2020-10-05T00:00:00+07:00</published><updated>2020-10-05T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-10-05:/article/dh/</id><summary type="html">&lt;p&gt;Trượt đại học, rồi sao? không học đại học, thì làm cái gì?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tôi là một người may mắn, và tôi không phải nói câu này.
Nhưng giờ đã 12 năm sau cái ngày đó (2008), nhìn lại, thì đại học mang lại
cho tôi những gì?
Và nếu bạn trượt đại học, thì giờ làm gì đây?&lt;/p&gt;
&lt;h2&gt;Trượt đại học thì sao?&lt;/h2&gt;
&lt;p&gt;Thì buồn.&lt;/p&gt;
&lt;p&gt;Đấy là điều đầu tiên có thể cảm nhận được. Dù chưa trải qua, chỉ cần nhìn những
đứa bạn kém may mắn hơn chúng nó buồn, thậm chí còn xa lánh mình, sẽ hiểu
trượt đại học thì buồn.&lt;/p&gt;
&lt;h3&gt;Thế tại sao lại buồn?&lt;/h3&gt;
&lt;p&gt;Xã hội sinh ra một định kiến: học hết cấp 3 thì PHẢI thi đại học, và đỗ
đại học là giỏi, là vinh quang, còn trượt thì là ... không giỏi.
Bạn sẽ bị coi như 1 kẻ kém cỏi, hàng xóm, người quen, bạn bố mẹ sẽ hỏi thăm.
Và bởi vì nó đã là một định kiến xã hội, nên 1 2 con người thay đổi cũng
gặp rất nhiều khó khăn.
Cái sức ép xã hội khiến bạn phải buồn, khiến bạn nghĩ rằng mình kém cỏi, vậy nên
bạn buồn. Hay đơn giản buồn vì bố mẹ/người thân bạn buồn.
Ngoài ra, phải rời xa bạn bè vì chúng nó đều đi lên thành phố học hết, cũng buồn.&lt;/p&gt;
&lt;p&gt;Nhớ rằng "học tài, thi phận", bởi nếu như bạn được 25 điểm mà cái trường bạn
chọn năm nay nó tăng nhanh như chỉ số PM 2.5 ở thủ đô, lấy hản 27 thay vì 23
như năm trước, thì đâu phải do bạn kém?
Hay thằng hàng xóm được 15 điểm, đăng ký vào trường năm nay lấy 15, thì nó
lại đỗ. Hay con ông kia ôn trúng tủ, còn bạn thì lệch, nó đỗ là may hơn, chứ
đâu phải giỏi hơn.&lt;/p&gt;
&lt;p&gt;Năm 18 tuổi, tôi thi đại học vì 1 lý do đơn giản: vì đấy là điều
ai cũng làm sau khi học xong lớp 12. Trong cái đầu của 1 thằng học sinh miền núi
đi thi được cộng thêm 1.5 điểm, không hề từng nghĩ đến câu "tại sao lại phải học đại học",
hay "học đại học để làm gì?". Chuyện chọn trường cũng đơn giản chỉ là "thích nghịch
máy tính thì vào bách khoa" chứ chả hiểu bách khoa dạy cái gì để làm với máy tính.&lt;/p&gt;
&lt;p&gt;Thế nên bạn có thể buồn, nhưng nhớ nghĩ kỹ hơn chút, là tại sao mình phải buồn.&lt;/p&gt;
&lt;h2&gt;Học đại học để làm gì&lt;/h2&gt;
&lt;p&gt;Ngày ấy, hiểu đơn giản là cứ đi đại học thôi, đi đại học là thành công,
đi đại học để học đại học.
Học để ra trường, kiếm được 1 tấm &lt;strong&gt;bằng đại học&lt;/strong&gt;, rồi cầm về để mang đi xin
việc, làm ở cơ quan nào đó.&lt;/p&gt;
&lt;p&gt;Giờ ngẫm lại, xã hội muốn mình đi học đại học mục đích ra là để kiếm
cho mình được 1 công việc, nuôi bản thân, đóng góp cho xã hội.&lt;/p&gt;
&lt;p&gt;Cái bằng là thứ công cụ để xin việc của thời ngày xưa, là tấm vé giải độc đắc
để kiếm được 1 chỗ ngon trong cơ quan toàn là cán bộ.&lt;/p&gt;
&lt;p&gt;Còn giờ là năm thứ 20 của thế kỷ 21, tấm bằng trở nên bớt quan trọng hơn nhiều,
kể cả cầm 1 tấm bằng, đi xin việc thì vẫn phải THI (hay gọi nhẹ nhàng hơn là &lt;a href="http://pp.pymi.vn/article/phongvan/"&gt;"phỏng vấn"&lt;/a&gt;).
Ngoài ra, rất nhiều nơi / ngành nghề, không hề quan tâm đến bằng cấp, đặc biệt
là ngành công nghệ thông tin.&lt;/p&gt;
&lt;p&gt;Nếu anh giỏi, anh làm được, thì mang cái sản phẩm của mình ra mà khoe, còn
anh chả có gì khoe, thì đành thôi: mang khoe cái bằng.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xin chào, đây là website tôi làm ra, giải quyết vấn đề này, sử dụng công nghệ
kia ... app di động 1 triệu lượt tải trên app store ...&lt;/li&gt;
&lt;li&gt;Xin chào, em không biết code web/app nhưng em có bằng khá Bách Khoa, em chưa
làm ra sản phẩm nào ngoài đoạn code tính tổng từ 1 đến 1000.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cái bằng, không phải là mục đích của việc học đại học. Học đại học là để có được
"kỹ năng"/"trình độ", cái bằng chỉ là "bằng chứng" do trường đại học đó đánh giá,
theo tiêu chuẩn của trường đó.
Vậy nên nếu không học đại học, ta sẽ không có "bằng chứng" do trường đại học đó
cung cấp, nhưng không hề liên quan đến chuyện "kỹ năng"/"trình độ", thứ mà
hoàn toàn có thể học ở chỗ khác.&lt;/p&gt;
&lt;h2&gt;Học đại học được gì&lt;/h2&gt;
&lt;p&gt;Nếu coi trường học như một cỗ máy, thì đầu vào là các sinh viên khá "thông minh"
do điểm thi đầu vào trên mức N, còn đầu ra sẽ các kỹ sữ biết làm việc mà họ
được đào tạo.  Lý thuyết là vậy, còn thực tế thì khác hoàn toàn lý thuyết.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Khuôn mặt một sinh viên mùa ôn thi" src="http://pp.pymi.vn/images/ray-hennessy-2NwntN4J2Gw-unsplash.jpg"&gt;
&lt;span&gt;Khuôn mặt một sinh viên mùa ôn thi - Photo by &lt;a href="https://unsplash.com/@rayhennessy?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ray Hennessy&lt;/a&gt; on &lt;a href="https://unsplash.com/t/nature?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Nhìn lại, 5 năm đại học tôi có được:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Được lên thủ đô sống, làm quen với "văn minh xã hội". Lần đầu xuống nhập học
được học ngay bài học ăn phở không hỏi giá, bị chém đẹp 50k (thời 2008).&lt;/li&gt;
&lt;li&gt;Những người bạn. Vui vẻ cùng nhau đến lớp ngủ, cùng nhau vượt qua các kỳ thi
lại, cùng nhau uống rượu, cùng nhau đi chơi...
Thứ tình bạn trong sáng (như hồi cấp 3), những người anh em chia ngọt sẻ bùi,
điều mà sau này đi làm rồi, hay có gia đình riêng rồi, sẽ rất khó mà kiếm được.&lt;/li&gt;
&lt;li&gt;Quãng thời gian sinh viên, học hành thì ít mà chơi thì nhiều, những va vấp
nhẹ nhàng với xã hội khi lần đầu rời xa gia định đến 1 nơi xa lạ.&lt;/li&gt;
&lt;li&gt;Một ngôi trường có cháo lòng, cháo sườn, bánh mì, rượu ốc ngon.&lt;/li&gt;
&lt;li&gt;Những hoạt động thanh niên cấp tiến như sinh viên tình nguyện, tiếp sức mùa
thi, chiếc khăn gió ấm, mùa đông không lạnh...&lt;/li&gt;
&lt;li&gt;Khả năng tự học: cái này là kỹ năng tự luyện được, lôi sách lôi vở ra mà
đọc mà luyện đề thi còn qua môn, chứ làm gì có ai dạy cho.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Còn kiến thức? không nhiều lắm. Những kiến thức ngày nay đi làm, đều do tôi
tự mày mò, nhờ sự ham mê máy tính từ ngày còn nhỏ.
Blog &lt;a href="https://www.familug.org/"&gt;FAMILUG&lt;/a&gt; viết từ năm thứ 2 đại học là bằng chứng
ấy. Tôi code Python khi ở Việt Nam chẳng mấy ai biết tên, tôi dùng Ubuntu
khi mọi người còn không biết nó tồn tại.&lt;/p&gt;
&lt;p&gt;Nói vậy không có nghĩa là 5 năm trường không dạy gì. Trường có dạy,
vấn đề là bạn có học hay không? và học có giỏi hay không? Một phần nhỏ sinh viên
thuộc nhóm có học, và học giỏi, ra sẽ học lên cao, xin học bổng nước ngoài,
được giữ làm giảng viên, hay xin được công việc phù hợp. Nhưng nhớ là số này
rất ít, một khóa học 100 sinh
viên thì có 1, 2, 3, 4 thằng, chứ không phải là 20 thằng. Với nhóm này, học đại học
còn có thêm cái lợi: quan hệ tốt với thầy cô, nhiều cơ hội xin học bổng du học
lên cao, làm đề tài nghiên cứu khoa học cùng thầy cô ...
Đây là cái đầu ra mong ước, chuẩn của các trường. Số còn lại, chiếm tới hơn 90%,
mới là phần đáng nói của câu chuyện.&lt;/p&gt;
&lt;p&gt;Bằng giỏi Bách Khoa thời ấy, hiếm như khẩu trang đầu mùa COVID-19, sinh viên
ra trường đúng hạn thì ít, bằng khá đã là học hành tử tế lắm rồi. Bằng khá Bách
Khoa nó không nhiều nhan nhản như bằng giỏi bên kinh tế nha. Số này cỡ
2 chục người trong 1 khóa 100 người, cũng bằng số sinh viên ra trường trước hạn,
bỏ học/đuổi học/quên đăng ký môn học... rồi bị đuổi.&lt;/p&gt;
&lt;p&gt;Cái nhóm 60 sinh viên bằng "trung bình", ra trường không đúng hạn ấy, học được gì
ở trường? Năm 2008-2013+, khoa/viện toán ứng dụng và tin học Bách Khoa Hà Nội dạy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 năm học đại cương: toán, lý, hóa, nhiệt, điện, cơ học kỹ thuật, vẽ kỹ
thuật, điện tử, triết học Mac Lê Nin, tư tưởng Hồ Chí Minh, ... các môn học
được coi là nền tảng phải có của mọi kỹ sư. Và để thêm chắc, các môn toán lý hóa
có tới 5 7 môn khác nhau, lý 1 2 3 nữa cho nó chắc. Đây là thời kỳ học chán nản
nhất cho các sinh viên, trượt/thi lại triền miên, bởi đây toàn những môn lý thuyết
khó nhai. Có những môn học lại 10 kỳ, cho đến khi qua được thì cũng là lúc ra trường.
Gọi là học, chứ thi xong là coi như trả hết chữ thầy, kiến thức cũng chẳng dùng
đến bao giờ, như cách tra biểu đồ nhiệt chẳng hạn. Ở đâu đó, ai đó làm một
nghề nào đó, có thể đang dùng, thậm chí là quan trọng. Sinh viên ra trường đi
làm có người dùng tới có người không, nên nhớ đây là chương trình để đào tạo
hàng loạt người, nên đứng dưới góc độ nhà trường, bạn thà dạy thừa còn hơn thiếu.&lt;/li&gt;
&lt;li&gt;3 năm học chuyên ngành: Toán-Tin. Hầu hết sinh viên khóa này học toán-tin đơn
giản là vì trượt nguyện vọng 1, rơi tự do xuống mà vào toán tin. Bách Khoa thời
ấy, học 1 năm đại cương, lấy điểm 2 kỳ đầu để xét phân khoa. Đây cũng là thời mà hận những thằng giỏi học đại cương, chúng nó nộp vào CNTT
ầm ầm, chỉ đơn giản là vì ngành hot, ra dễ kiếm việc lương cao - chứ thậm chí
chưa chạm tay vào máy tính 1 lần.
Khoa nào nhiều người vào thì hot, điểm cao, khoa nào không ai đăng ký... thì
rơi tự do.
Không nhiều sinh viên vào Toán-Tin để học toán, chắc cũng là một phần lý do
mà kết quả học tập cũng không mấy đẹp đẽ gì. Hơn nửa chương trình chuyên ngành
3 năm này là toán, một chút ít "tin" cho có gọi là. Sinh viên muốn làm được
đồ án tin để ra trường, phải tự kiếm chỗ mà học lập trình cho tử tế (tự học mà
giỏi được thì tốt, ai cũng làm được thì người ta không phải mở trường,
dựng trung tâm). Đừng hy vọng sẽ được học lập trình, ra thành 1 lập trình viên
chuyên nghiệp từ
đây. Với những sinh viên muốn theo ngành "tin học", thì phần toán kia rất khó
nuốt, khô khan, chẳng có chỗ dùng, không có hứng học, thi khó qua, điểm sẽ thấp.
Chương trình học lạc hậu, đặc biệt với các môn tin, khi mà công nghệ thay đổi
hàng năm còn toán thì trăm năm mới đổi. Đây là tên vài môn toán kinh (khủng)
điển: giải tích hàm, phương trình đạo hàm riêng,
giải tích số, giải tích phức, toán kinh tế, các phương pháp tối ưu, hệ mờ ?!?
Chất lượng giảng dạy thì rất phụ thuộc vào giảng viên, một số môn có thầy cô
dạy hay, phong cách hay, lôi cuốn sinh viên học dù môn học không có nhiều tính
ứng dụng thấy ngay, có môn thầy đến lớp hì hục chép đầy 6 cái bảng 9 lần rồi về,
sinh viên ra vào thậm chí không biết...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Đấy là thời đó, cũng gần 10 năm rồi, thời ấy học mạng neuron và hệ mờ trên giấy,
chỉ biết lấy công thức ra tính, chả ai biết để làm gì,
chưa ai nghe tới Machine Learning hay Deep Learning.
Còn giờ thì &lt;a href="https://vnexpress.net/dai-hoc-bach-khoa-ha-noi-lay-diem-chuan-cao-nhat-la-29-04-4171374.html"&gt;Toán Tin đầu vào hẳn 27.56&lt;/a&gt;, xin được mừng cho viện nhà.&lt;/p&gt;
&lt;p&gt;Xem &lt;a href="http://sami.hust.edu.vn/co-van-hoc-tap/ke-hoach-hoc-tap-chuan/"&gt;chương trình đào tạo mới tại đây&lt;/a&gt;
thấy đã bớt được nhiều môn học &lt;strong&gt;nền tảng&lt;/strong&gt;, &lt;strong&gt;quan trọng&lt;/strong&gt; như hóa hay nhiệt
đi rồi, mừng cho các tài năng đất nước.&lt;/p&gt;
&lt;p&gt;Nói vậy, không nghĩa là không nên học đại học. Đỗ rồi thì đi học thôi,
nhưng nên thử để biết mình thích gì/hợp làm gì, mà tìm học thêm, chứ đừng
thụ động ngồi chờ trường dạy cho.&lt;/p&gt;
&lt;h2&gt;Trượt đại học thì làm gì&lt;/h2&gt;
&lt;p&gt;Trượt đại học thì đi học cái khác, hoặc đi làm. Học đại học là con đường có vẻ
như "dễ"/"sáng" nhất để dẫn đến "thành công"/"thành tài", nhưng không phải con
đường duy nhất. Cũng chẳng có gì đảm bảo, hàng năm &lt;a href="https://vnexpress.net/topic/thac-si-that-nghiep-17483"&gt;sinh viên đại học, thậm chí
cao học, ra trường vẫn thất nghiệp ầm ầm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nếu muốn, nghỉ ngơi 1 thời gian rồi 3 tháng sau bắt đầu ôn thi để sang năm...
chơi lại trò chơi may rủi.&lt;/p&gt;
&lt;p&gt;Học đại học thời nay là một khoản đầu tư không nhỏ, học phí các trường công
giờ cũng cao chót vót, mỗi kỳ học đóng học phí bằng 1/2 -&amp;gt; 1 con iPhone mới
nhất vừa ra. Học 10 kỳ là 10 con (~tối thiểu 60 triệu cho 5 năm học), chưa kể
thi lại, chưa tính chi phí ăn ở 4-5 năm.
Nên nếu chỗ nào học phí 50 triệu, trong vòng 2 năm, hay &lt;a href="https://pymi.vn/"&gt;5 triệu trong vòng 2
tháng&lt;/a&gt;
mà cho bạn cơ hội kiếm việc làm lương 8-10 triệu/tháng thì đừng xem là đắt,
đi làm vài tháng là hồi vốn.
Ngoài ra, nếu tôi học nửa năm rồi đi làm, sau 5 năm tôi có 4.5 năm kinh nghiệm,
lương thừa X3 mấy cậu sinh viên mới rón rén ra trường.&lt;/p&gt;
&lt;p&gt;Điều quan trọng là tìm ra thứ khiến mình thích thú, đam mê. Nếu có rồi, cứ thế
mà học theo, nếu chưa biết, đỗ đại học, đi học 5 năm chăm chỉ ra rồi nhận ra mình không
thích mới đổi, lúc ấy mới là muộn, đó mới là thất bại đáng lo.&lt;/p&gt;
&lt;p&gt;Những thứ quan trọng cần đầu tư:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ngoại ngữ: phổ biến, dễ học nhất là tiếng Anh. Dù học đại học hay không, đây
vẫn là thứ quan trọng nhất. Nó mở ra cả 1 chân trời cơ hội, hàng triệu tài
liệu hướng dẫn miễn phí bằng tiếng Anh trên internet, dù học bất cứ thứ gì,
điều kiện làm các công việc lương cao, công ty nước ngoài.&lt;/li&gt;
&lt;li&gt;Rèn luyện sức khỏe: tập gì cũng được, có sức khỏe, có cơ thể đẹp
là một lợi thế cả đời, cực lớn, thậm chí giúp kiếm được nhiều công việc lương
cực cao, ngàn đô 1 ngày!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nếu muốn học ngành Công Nghệ Thông Tin, học xong đi kiếm việc làm lương khởi điểm
8-10 triệu, ghé ngay &lt;a href="https://pymi.vn"&gt;PyMi.vn&lt;/a&gt; để đăng ký học lập trình Python
tại Hà Nội - Sài Gòn (TP HCM).&lt;/p&gt;
&lt;h3&gt;Học có 1.5 tháng mà đi làm được?&lt;/h3&gt;
&lt;p&gt;Tất nhiên là phải học, phải đầu tư thời gian, chăm chỉ luyện bài, thì học ra mới
dễ xin được việc, mỗi tuần dành ~ 20 tiếng để cày cuốc bài tập.
Chứ đừng nghĩ tới lớp xem giảng bài, về nhà bận đi chơi, rồi
ra thì có người mời đi làm, sorry babe, ở đây không bán rượu mơ.&lt;/p&gt;
&lt;p&gt;PyMi không chỉ dạy Python, mà sử dụng các công cụ / practice của lập trình viên
trong suốt quá trình học (vd: Git/GitLab/CI/Code Review).&lt;/p&gt;
&lt;h3&gt;Lương chỉ có 8-10 triệu?&lt;/h3&gt;
&lt;p&gt;Đây là mức lương khởi điểm cho vị trí lập trình viên Python (thường là lập
trình web-backend). Mức lương này ngang ngửa với sinh viên đại học mới ra trường.
Còn muốn học 2 tháng ra làm lương ngàn đô, có lẽ qua bên các kênh đầu tư tài
chính thì nhiều cơ hội hơn.&lt;/p&gt;
&lt;p&gt;Sau khi đi làm 1 2 năm có thể tăng lên 15 triệu, hay $1000, và cứ thế tăng tiếp...
PS: muốn &amp;gt; $1000, phải có ngoại ngữ tốt.&lt;/p&gt;
&lt;h3&gt;Tài liệu trên mạng đầy, lên youtube xem rồi tự học&lt;/h3&gt;
&lt;p&gt;Tự học là một kỹ năng không phải ai cũng có.
Kỹ năng tự học phải luyện nhiều, mới có. Cũng chẳng phải đến đại học thì mới biết
tự học. Cứ tự học nhiều (như 5 năm ở Bách Khoa) thì khác dần biết cách thôi.
Nếu tự học mà hiệu quả được, đó là điều rất đáng mừng, bạn cũng không cần
phải đi đại học làm gì cho mất thời gian.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lên youtube xem/đọc tài liệu không hiểu thì lấy ai để hỏi?&lt;/li&gt;
&lt;li&gt;Tài liệu chất lượng kém, đặc biệt các tài liệu tiếng Việt dùng Google
Translate rồi paste vào. Tài liệu viết bởi những người không có trình độ, liệu
bạn có phân biệt được?&lt;/li&gt;
&lt;li&gt;Lên các diễn đàn/FaceBook group để hỏi rồi ngồi chờ hy vọng có ai đó tốt giúp
trả lời, mà trả lời đúng hay sai cũng không chắc nữa.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nếu lý do ngồi chờ cộng đồng trả lời sau vài ngày rồi mới học tiếp
là để "tiết kiệm tiền", thì chỉ chứng minh 1 điều là thời gian của bạn
quá rẻ.&lt;/p&gt;
&lt;p&gt;Tự học ngoài ra còn gặp một số vẫn đề như: "đâm đầu vào tường" nhiều, do không
ai chỉ cho đâu là đúng sai, phải tự tìm ra, vậy nên mất thời gian hơn. Đi học,
không hỏi thầy thì còn hỏi bạn, nhanh hơn rất nhiều.
Ngoài ra bạn còn không biết mình không biết những gì.&lt;/p&gt;
&lt;p&gt;Một khi đã tự học rồi, thì lo tập trung vào việc học, làm bài tập,
tránh mất thời gian ít bổ ích trên các group online.&lt;/p&gt;
&lt;h3&gt;Các khóa học tiếng Anh trên mạng rẻ bèo, như Udemy&lt;/h3&gt;
&lt;p&gt;Nếu xem được mà hiểu thì trình độ tiếng Anh của bạn cũng thuộc top trên của
người Việt Nam đó, chúc mừng nha. Như đã viết ở trên, nếu đã có tiếng Anh,
thì toàn bộ phần còn lại chỉ là game dễ.&lt;/p&gt;
&lt;p&gt;Các khóa học cũng có loại this, loại that. Học code mà chỉ xem video, không thò
tay vào code, không có bài tập, không có sửa bài, thì chỉ là xem video.&lt;/p&gt;
&lt;p&gt;Code là kỹ năng, muốn giỏi phải luyện tập nhiều.
Làm ra phải được chấm (review), để biết là tốt hay xấu, đúng hay sai.&lt;/p&gt;
&lt;h3&gt;Học đại học 5 năm ra còn chẳng ăn ai, đòi học vài tháng&lt;/h3&gt;
&lt;p&gt;Bạn đã thấy có thằng học như điên 3 năm, học đủ cả sinh sử địa, giáo dục công
dân nữa để "rèn luyện tư duy" mà trượt đại học khối A, còn có thằng đi ôn lò
vài tháng, trúng tủ đỗ luôn chưa?&lt;/p&gt;
&lt;p&gt;5 năm đại học không phải là học cả 5 năm, thời gian chơi có khi hết 4 năm rưỡi.
10 thằng học giỏi có đến 90 thằng loại bình thường.&lt;/p&gt;
&lt;p&gt;Xem lại chương trình đại học Bách Khoa ở trên để thấy nếu muốn làm lập trình
viên (nghề ghi đầu tiên trong bảng quảng cáo học Toán Tin), thì chỉ có vài môn
học cuối khóa có chút liên quan, mà muốn ra đi làm được vẫn phải học thêm rất
nhiều.&lt;/p&gt;
&lt;p&gt;Học lâu mà sai không có ý nghĩa gì so với học đúng mà nhanh.&lt;/p&gt;
&lt;p&gt;Kiến thức ở các trường đại học Việt Nam đều rất chậm thay đổi, trong khi công
nghệ thay đổi hàng năm. 5 năm học, dùng C/Pascal vài ba project nhỏ ở trường
sẽ khống kiếm cho bạn 1 công việc dev Python.&lt;/p&gt;
&lt;p&gt;Giờ không biết đã trường nào dạy dùng git chưa, hay vẫn Turbo C màn hình xanh
menu đỏ rồi tự hào công nghệ?&lt;/p&gt;
&lt;h3&gt;Học vậy không có "kiến thức cơ bản"/"kiến thức nền tảng"&lt;/h3&gt;
&lt;p&gt;"Kiến thức cơ bản" cụ thể là cái gì? hiểu cách các vi mạch điện hoạt động
rồi chạy code như thế nào? (học đại học ở Việt Nam cũng không giúp bạn hiểu cái
này), hay hiểu cách đổi 8 bit thành 1 byte?&lt;/p&gt;
&lt;p&gt;Hay kiến thức cơ bản là môn "cấu trúc dữ liệu giải thuật/toán rời rạc"
học trên giấy trong 1 kỳ mà cứ ngỡ như không đi đại học thì không được học/
không học được? Có bao nhiêu kiến thức cơ bản ấy ở lại trong sinh viên sau
5 năm ra trường, học môn ấy từ năm thứ 2.&lt;/p&gt;
&lt;p&gt;Có 2 cách tiếp cần vấn đề, từ dưới lên, hoặc từ trên xuống. Các trường đại học
dạy theo kiểu từ dưới lên, đến lúc lên đến trên thì sinh viên đã quên hết cái
bên dưới.&lt;/p&gt;
&lt;p&gt;Các trung tâm thì sẽ dạy từ trên xuống, học cái làm được luôn, có gì không hiểu
thì đào sâu, tìm hiểu thêm.&lt;/p&gt;
&lt;p&gt;Đừng nghĩ biết code mấy cái thuật toán sắp xếp học ở trường mà hơn người ta
gõ &lt;code&gt;list.sort()&lt;/code&gt;, cái bạn học ở trường, lúc đi ra làm, đâu có dùng?
Bạn có biết &lt;code&gt;list.sort()&lt;/code&gt; của Python dùng thuật toán gì không?&lt;/p&gt;
&lt;p&gt;Nếu bạn thuộc "on the top của hành tinh này", thiết kế thuật toán sắp xếp phù
hợp với bài toán cụ thể, rõ ràng bạn không phải đối tượng của bài viết này.&lt;/p&gt;
&lt;h3&gt;Sao bài này toàn ví dụ viện Toán Tin - Bách Khoa Hà Nội&lt;/h3&gt;
&lt;p&gt;Vì tác giả đã học ở đó. Bạn học khoa khác, cậu chuyện có thể khác.&lt;/p&gt;
&lt;h3&gt;Học xong có làm được cái này, cái kia không?&lt;/h3&gt;
&lt;p&gt;Vui lòng &lt;strong&gt;đọc kỹ&lt;/strong&gt; trang chủ &lt;a href="https://pymi.vn"&gt;Pymi&lt;/a&gt; và CV mẫu của học viên
(cũng có link trên trang chủ).&lt;/p&gt;
&lt;p&gt;Nói tóm lại, người muốn, sẽ tìm cách, còn không muốn, sẽ tìm lý do.&lt;/p&gt;
&lt;h2&gt;Hành động của chúng ta (Action Item)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tự hỏi xem học đại học để làm gì?&lt;/li&gt;
&lt;li&gt;Ngừng huyễn hoặc bản về sự cao siêu của đại học, hay "chỉ học đại học mới được học".&lt;/li&gt;
&lt;li&gt;Hồi tưởng xem học đại học đã học được gì có ích? và viết 1 bài.&lt;/li&gt;
&lt;li&gt;Tìm cái bằng đại học xem nó ở góc nào.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;Don&amp;#39;t let schooling interfere with your education.&amp;quot; - Mark Twain
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trượt đại học nó không khủng khiếp như trượt vỏ chuối. Có đau vì sức ép xã hội,
chứ không lo đập đầu xuống đất mà mất trí.&lt;/p&gt;
&lt;p&gt;Đứng dậy, cầm laptop lên và đi học Python tại &lt;a href="https://pymi.vn"&gt;PyMi.vn&lt;/a&gt; đi nhé.&lt;/p&gt;
&lt;h2&gt;Đọc thêm&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pp.pymi.vn/article/phongvan/"&gt;"phỏng vấn"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pymi.vn"&gt;Trang chủ PyMi.vn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="life"></category></entry><entry><title>Vừa đủ để đi (go)</title><link href="http://pp.pymi.vn/article/go/" rel="alternate"></link><published>2020-09-06T00:00:00+07:00</published><updated>2020-09-06T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-09-06:/article/go/</id><summary type="html">&lt;p&gt;Học vừa đủ Golang để nguy hiểm - phần 1&lt;/p&gt;</summary><content type="html">&lt;p&gt;Series bài viết giúp lập trình viên đã biết Python bắt đầu code Go mượt mà hơn - tài liệu bổ trợ cho &lt;a href="https://tour.golang.org/"&gt;Go tour&lt;/a&gt; chứ không để thay thế - phần 1.&lt;/p&gt;
&lt;p&gt;Đã có phần 2 &lt;a href="http://pp.pymi.vn/article/go12/"&gt;&lt;strong&gt;Cứ đi là đến&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Golang là gì&lt;/h2&gt;
&lt;p&gt;&lt;img alt="gopher" src="https://golang.org/lib/godoc/images/home-gopher.png"&gt;&lt;/p&gt;
&lt;p&gt;Go (hay còn gọi là Golang theo tên trang chủ &lt;a href="https://golang.org"&gt;golang.org&lt;/a&gt;) là một ngôn ngữ lập
trình mới xuất hiện trong công chúng vào năm 2009 (vs: Python 1991, Java 1995),
tại Google.&lt;/p&gt;
&lt;p&gt;Go được thiết kế ra với mục tiêu thay thế cho C++, nhưng khi tung ra cộng
đồng, nó lại trở thành ngôn ngữ hấp dẫn đối với các lập trình viên dùng
ngôn ngữ bậc cao hơn như &lt;a href="http://www.catb.org/~esr/reposurgeon/GoNotes.html"&gt;Python&lt;/a&gt;,
&lt;a href="https://blog.iron.io/how-we-went-from-30-servers-to-2-go/"&gt;Ruby&lt;/a&gt;, PHP, NodeJS... nhờ khả năng chạy code
nhanh, dùng ít tài nguyên hơn, deploy dễ hơn so với các ngôn ngữ này.&lt;/p&gt;
&lt;p&gt;Go trở thành một trào lưu (trend) công nghệ trên internet, với các bài viết
"Write X in Go" luôn trở thành bài hot (và giờ thì tới Rust).
Go được sử dụng như một ngôn ngữ "backend", rất thịnh hành tại các startup
công nghệ để viết "service" trong các hệ thống "microservice", web API.
&lt;a href="https://blog.golang.org/survey2019-results"&gt;Go còn được dùng phổ biến để viết các câu lệnh command line&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Go đã ở giai đoạn "production ready", đủ ổn định và đã được chạy trên các &lt;a href="https://github.com/golang/go/wiki/GoUsers"&gt;hệ thống
lớn trên toàn cầu&lt;/a&gt;.
Các sản phẩm opensource viết bằng Go được dùng rộng rãi như:
Kubernetes, Docker, Terraform, InfluxDB, Prometheus, Grafana, ...
Go trở thành ngôn ngữ được ưa chuộng và phổ biến trên các dịch vụ cloud,
devops.&lt;/p&gt;
&lt;p&gt;Những lĩnh vực khác cũng đã có mặt Go nhưng chưa thực sự thành công: mobile,
frontend (JavaScript), làm website (như Django/RubyOnRails), Machine Learning.&lt;/p&gt;
&lt;h2&gt;Những ưu điểm nổi bật của Go&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ngôn ngữ đơn giản: Go có ít khái niệm hơn các ngôn ngữ lập trình khác
C++/Java/Python/Ruby... Go tại năm 2020 có &lt;a href="https://golang.org/ref/spec#Keywords"&gt;25
keywords&lt;/a&gt;, &lt;a href="https://docs.python.org/3.8/reference/lexical_analysis.html#keywords"&gt;Python 3.8 có 35
keywords&lt;/a&gt;.
Hầu hết các công ty tuyển lập trình viên Go đều không yêu cầu kinh nghiệm code
Go,
 chỉ cần tuyển 1 lập trình viên đã dùng ngôn ngữ khác, qua training 1-2 tuần
 là đã có thể viết code production, trông không khác gì lập trình viên lâu năm.&lt;/li&gt;
&lt;li&gt;Code Go viết bằng chính Go, ai cũng có thể đọc &lt;a href="https://github.com/golang/go/blob/master/src/runtime/map.go"&gt;kiểu dữ liệu map được viết thế nào&lt;/a&gt; - so với Python (CPython) sẽ phải đọc code C.&lt;/li&gt;
&lt;li&gt;Hệ thống thư viện có sẵn (stardard library) đa dạng, đầy đủ - ngang ngửa Python, thậm chí còn hơn: gửi HTTP request chỉ cần dùng &lt;code&gt;net/http&lt;/code&gt;, không phải &lt;a href="http://pp.pymi.vn/article/requests/"&gt;cài requests như Python (mặc dù Python có thể dùng urllib nhưng không mấy ai dùng)&lt;/a&gt;, đầy đủ &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;regexp&lt;/code&gt;, cho tới HTTP server sẵn sàng chạy production.&lt;/li&gt;
&lt;li&gt;Compile nhanh: so với các ngôn ngữ C/C++/Java/C#... thì Go compile nhanh gấp
nhiều lần&lt;/li&gt;
&lt;li&gt;Sản phẩm compile tạo ra là 1 file binary. Sau đó
 chỉ cần mang file này đi chạy là xong - điểm này khác biệt lớn so với Python,
 NodeJS, Ruby - phải cài các "dependency" (pip/npm/gem) rồi mới chạy được code (Go cũng cần
 tải các dependency, nhưng chỉ cần thực hiện trước khi compile ra file binary).&lt;/li&gt;
&lt;li&gt;Code chạy nhanh: Go tuy không nhanh bằng C/C++/C#/Java trong hầu hết các
  trường hợp, chậm hơn cỡ 2-5 lần, nhưng nhanh hơn Python/Ruby cỡ &lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/which-programs-are-fastest.html"&gt;20-100 lần&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Tốn ít memory - bộ nhớ: ít hơn &lt;a href="https://blog.iron.io/how-we-went-from-30-servers-to-2-go/"&gt;Ruby cỡ 15 lần&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Quản lý bộ nhớ tự động (tương tự Python/Ruby/Java...)&lt;/li&gt;
&lt;li&gt;Dễ viết code concurrency, dùng multi-core (thay vì dùng thread/async).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Những khác biệt chủ yếu với Python&lt;/h2&gt;
&lt;h3&gt;Cách viết và chạy code&lt;/h3&gt;
&lt;p&gt;Go là compiled language, trước khi chạy được code phải qua 1 bước compile để
tạo ra file binary, rồi sau đó mới chạy được file này.
&lt;a href="http://pp.pymi.vn/article/repl/"&gt;Go không có sẵn REPL, không bật lên gõ code trực tiếp như Python được&lt;/a&gt;.
Mỗi lần sửa gì, thử gì, phải compile lại rồi mới chạy được.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;go build
./filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vậy nên cách nhanh nhất để thử 1 đoạn code trong Go có lẽ là viết unittest.
&lt;a href="https://golang.org/doc/code.html#Testing"&gt;test rất phổ biến với một Go project&lt;/a&gt;,
là một phần có sẵn trong bộ công cụ dev.&lt;/p&gt;
&lt;p&gt;Với 1 file code đơn giản, có thể dùng lệnh &lt;code&gt;go run main.go&lt;/code&gt; để làm gộp 2 bước,
compile rồi chạy file kết quả luôn.&lt;/p&gt;
&lt;h3&gt;Auto format - go fmt&lt;/h3&gt;
&lt;p&gt;Go là ngôn ngữ lập trình đầu tiên đưa 1 công cụ format code tự động vào tiêu chuẩn,
chấm dứt mọi tranh cãi về code-style/format code. Ý tưởng tuyệt vời này sau được
copy sang nhiều ngôn ngữ khác (như &lt;a href="http://pp.pymi.vn/article/black/"&gt;Python black&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;go fmt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Chú ý&lt;/h4&gt;
&lt;p&gt;Không xuống dòng tùy tiện trong &lt;code&gt;()&lt;/code&gt; như Python (Vd: khi gọi function). Ví dụ
sau sẽ &lt;a href="https://play.golang.org/p/dluh98DPVIR"&gt;không compile&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Go &lt;a href="https://golang.org/ref/spec#Semicolons"&gt;tự động thêm &lt;code&gt;;&lt;/code&gt; vào các dòng
khi nó xử lý file code&lt;/a&gt;. Tốt nhất là
viết hết trên 1 dòng rồi để gofmt lo chuyện format.&lt;/p&gt;
&lt;h3&gt;Static typing&lt;/h3&gt;
&lt;p&gt;Python là ngôn ngữ dynamic typing, Go là static typing.
Nếu chưa từng code ngôn ngữ static typing hay chưa dùng type annotation của Python,
khác biệt này sẽ gây chút khó khăn lúc bắt đầu code Go.&lt;/p&gt;
&lt;p&gt;Theo &lt;a href="https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language"&gt;python wiki&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a statically typed language, the type of variables must be known (and
usually declared) at the point at which it is used. Attempting to use
it will be an error. In a dynamically typed language, objects still have a
type, but it is determined at runtime. You are free to bind names (variables)
to different objects with a different type. So long as you only perform
operations valid for the type the interpreter doesn't care what type they
actually are.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Static/dynamic typing nói tới kiểu (type) của 1 biến (variable/name).
Trong dynamic typing, kiểu của 1 biến có thể thay đổi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyMi&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong static typing, kiểu của 1 biến là cố định, và được khai báo ngay từ
trước khi dùng, code sau sẽ gặp lỗi khi compile, và không tạo ra binary nào để chạy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;PyMi&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cannot use &lt;span class="s2"&gt;&amp;quot;PyMi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; untyped string&lt;span class="o"&gt;)&lt;/span&gt; as &lt;span class="nb"&gt;type&lt;/span&gt; int &lt;span class="k"&gt;in&lt;/span&gt; assignment
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong Python3.6+, &lt;a href="http://pp.pymi.vn/article/mypy/"&gt;sử dụng type annotation, kết hợp với mypy&lt;/a&gt;
để check cũng sẽ
cho lỗi tương tự (nhưng vẫn chạy được).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyMi&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy typetest.py
typetest.py:2: error: Incompatible types &lt;span class="k"&gt;in&lt;/span&gt; assignment &lt;span class="o"&gt;(&lt;/span&gt;expression has &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;str&amp;quot;&lt;/span&gt;, variable has &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Found &lt;span class="m"&gt;1&lt;/span&gt; error &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; file &lt;span class="o"&gt;(&lt;/span&gt;checked &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Kiểu của các biến trong Go nói chung phải khai báo (declare), Go có thể tự suy
luận (type inference) được trong một vài trường hợp đơn giản.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;PyMi&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Low level&lt;/h3&gt;
&lt;p&gt;Được thiết kế nhằm thay C/C++ pha lẫn sự đơn giản dễ đọc của Python,
code Go thường đơn giản hơn code C/C++ nhưng khá "thủ công"/"low level"
so với code Python. Lập trình viên Python code Go nên quen với việc bỏ bớt
đi nhiều tính năng tiện lợi, phải viết nhiều code hơn.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go không có list comprehension&lt;/li&gt;
&lt;li&gt;Go không có map/filter&lt;/li&gt;
&lt;li&gt;Go không có kiểu set&lt;/li&gt;
&lt;li&gt;Go không có &lt;code&gt;4 in [2,3,4]&lt;/code&gt; để &lt;a href="https://stackoverflow.com/questions/38654383/how-to-search-for-an-element-in-a-golang-slice"&gt;kiểm tra phần tử có trong list không&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sort trong Go chắc chắn dài hơn &lt;code&gt;L.sort(reverse=True)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reverse string sẽ không phải là&lt;code&gt;s[::-1]&lt;/code&gt; mà &lt;a href="https://stackoverflow.com/questions/1752414/how-to-reverse-a-string-in-go"&gt;dài cả mét&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Không đơn giản chỉ &lt;code&gt;json.loads&lt;/code&gt; để biến &lt;code&gt;str&lt;/code&gt; thành &lt;code&gt;dict&lt;/code&gt; mà phải định
  nghĩa struct theo cấu trúc của JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code Go nhìn chung sẽ dài hơn code Python, vậy nên lập trình viên nên sắm cho
mình một IDE xịn (như GoLand/IntelliJ IDEA , VSCode hay &lt;code&gt;vim&lt;/code&gt; + &lt;code&gt;vim-go&lt;/code&gt;), với khả năng &lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets"&gt;dùng snippet để
sinh code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sự bất tiện này sẽ đỡ khó chịu đi nhiều khi đã quen dùng snippet.&lt;/p&gt;
&lt;h2&gt;Học lập trình Go (khi đã biết Python)&lt;/h2&gt;
&lt;h3&gt;Bao nhiêu là đủ? Em vui là được có phải không!&lt;/h3&gt;
&lt;p&gt;Không ai đọc hết quyển từ điển tiếng Việt rồi mới ra nói câu đầu tiên,
không ai học lên tiến sỹ âm nhạc rồi mới chạm tay vào đánh đàn. Khi &lt;a href="https://pymi.vn"&gt;học Python
tại PyMi.vn&lt;/a&gt;, ta học từng chút, dùng từng chút, chứ không học hết lý thuyết
cả Python rồi mới thực hành. Cũng không phải học &lt;code&gt;async&lt;/code&gt;, &lt;code&gt;threading&lt;/code&gt;, &lt;a href="https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python"&gt;metaclass&lt;/a&gt;
rồi mới chịu đi làm.&lt;/p&gt;
&lt;p&gt;Học Go cũng vậy, dùng gì học đấy, cần gì học đấy.
Cần gì thì phụ thuộc vào bạn định làm gì, một Python web developer sẽ học
Django, ORM, làm việc với database trong khi một SysAdmin/DevOps engineer lại
làm việc với file, process...&lt;/p&gt;
&lt;h3&gt;Tài liệu&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Tài liệu chính thống, đầy đủ và hiệu quả để học go là Go Tour: &lt;a href="https://tour.golang.org/"&gt;https://tour.golang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bài tập có giải trên &lt;a href="https://exercism.io/tracks/go"&gt;exercism.io&lt;/a&gt; - chọn practice mode.&lt;/li&gt;
&lt;li&gt;FAQ giải đáp các thắc mắc thường gặp: &lt;a href="https://golang.org/doc/faq"&gt;https://golang.org/doc/faq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Effective Go hướng dẫn viết Go theo cách của Gophers: &lt;a href="https://golang.org/doc/effective_go.html"&gt;https://golang.org/doc/effective_go.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Các tài liệu khác: &lt;a href="https://github.com/golang/go/wiki/Learn"&gt;learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Viết code Go&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://golang.org/doc/tutorial/getting-started"&gt;Cài Go lên máy rồi viết code ra file&lt;/a&gt;, hoặc code online trên trang Play &lt;a href="https://play.golang.org/"&gt;https://play.golang.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go chạy code từ function &lt;code&gt;main&lt;/code&gt; thuộc &lt;code&gt;package main&lt;/code&gt;. code "Hello world!" như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Naming&lt;/h3&gt;
&lt;p&gt;Go dùng &lt;code&gt;camelCase&lt;/code&gt;, với ý nghĩa đặc biệt khi chữ cái đầu viết hoa hay viết thường.
Nếu viết hoa, var/function/type đó sẽ trở thành "public", code bên ngoài package hiện tại truy cập được, còn không viết hoa sẽ là "private".&lt;/p&gt;
&lt;h3&gt;Data types&lt;/h3&gt;
&lt;h4&gt;Built-in&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;nil: &lt;code&gt;nil&lt;/code&gt; là một giá trị, không có kiểu, đại diện cho sự "không tồn tại".&lt;/li&gt;
&lt;li&gt;bool: kiểu boolean gồm 2 giá trị &lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt;, các boolean operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and), &lt;code&gt;||&lt;/code&gt; (or) tuân theo &lt;a href="https://pymi.vn/tutorial/boolean/"&gt;&lt;code&gt;short-circuit&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;int: các kiểu số trong Go đều có kích thước, int có kích thước 32 hoặc 64 bits &lt;a href="https://golang.org/doc/faq#q_int_sizes"&gt;tùy theo bản (chủ yếu 64 bits)&lt;/a&gt;.
  Các kiểu cụ thể &lt;code&gt;int8 int16 int32 int64&lt;/code&gt;, có kích thước là 2 mũ n, int8 int16 thường chỉ dùng khi tối ưu về memory. int64 biểu diễn được giá trị trong khoảng (&lt;code&gt;-2**64/2, 2**64/2&lt;/code&gt;), muốn tính giá trị lớn có thể &lt;a href="https://golang.org/pkg/math/big/#Int.String"&gt;sử dụng package có sẵn &lt;code&gt;math/big&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float32&lt;/code&gt; hoặc &lt;code&gt;float64&lt;/code&gt;: chú ý không có kiểu &lt;code&gt;float&lt;/code&gt;. &lt;a href="https://pymi.vn/blog/why-not-float/"&gt;Tuân theo chuẩn IEE754&lt;/a&gt; nên &lt;code&gt;x, y, z := 0.1, 0.1, 0.1&lt;/code&gt; thì &lt;code&gt;x + y + z == 0.3&lt;/code&gt; sẽ trả về false. Chú ý ở trên tạo các biến để các giá trị 0.1 có kiểu float64, nếu viết trực tiếp &lt;code&gt;0.1 + 0.1 + 0.1 == 0.3&lt;/code&gt; sẽ là so sánh constants và trả về true &lt;a href="https://play.golang.org/p/TWRRr_lM7jk"&gt;https://play.golang.org/p/TWRRr_lM7jk&lt;/a&gt;. Đọc thêm về constants tại &lt;a href="https://blog.golang.org/constants"&gt;blog Go&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;string: giống như string của Python, immutable, có thể truy cập các chữ cái &lt;a href="https://blog.golang.org/strings"&gt;bằng cách chuyển thành runes&lt;/a&gt; (&lt;code&gt;s := []rune(sting)&lt;/code&gt;) rồi  dùng index: &lt;code&gt;s[3]&lt;/code&gt;. String bên dưới là 1 chuỗi các byte, hay một byte array/byte slice &lt;code&gt;[]byte{'h', 'e', 'l', 'l', 'o'}&lt;/code&gt;, có thể convert thành string: &lt;code&gt;string(bytes)&lt;/code&gt;. Python cũng có kiểu &lt;code&gt;bytes&lt;/code&gt;, cũng chuyển thành &lt;code&gt;str&lt;/code&gt; bằng cách decode &lt;code&gt;b'abc'.decode('utf-8')&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;array/slice: Go array giống như C, các phần tử phải cùng kiểu, và kích thước cố định không đổi. &lt;a href="https://www.youtube.com/watch?v=5DVV36uqQ4E"&gt;Array ít được dùng trực tiếp&lt;/a&gt;
  nó được dùng bên dưới slice và slice linh hoạt như list trong Python. Ví dụ về slice&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;ns&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ns&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ns&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// như extend trong python list&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/SCW8F0EqCmW"&gt;https://play.golang.org/p/SCW8F0EqCmW&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;map: giống dict của Python, key phải so sánh &lt;code&gt;==&lt;/code&gt; được, map và slice không
làm key được, thứ tự key là ngẫu nhiên. Map trong Go dùng khi cần nối
key-value, tìm kiếm nhanh, nhưng không dùng như 1 object như dict Python
&lt;code&gt;{"name": "Pymier", "age": 20}&lt;/code&gt;,
do map phải có kiểu cố định cho key, value. &lt;a href="https://play.golang.org/p/JRu3lp_mEGj"&gt;Xem code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20081269&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pymier69&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20081234&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pymier1&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20081239&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pymier2&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d: %s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20081239&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cú pháp &lt;a href="https://golang.org/ref/spec#Composite_literals"&gt;&lt;code&gt;composite literal&lt;/code&gt;&lt;/a&gt; giúp tạo giá trị cho struct/slice/array/map.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class="nx"&gt;xs&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kd"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="mi"&gt;345&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các kiểu khác &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;interface&lt;/code&gt;, &lt;code&gt;channel&lt;/code&gt;
sẽ được nhắc tới sau, xem đầy đủ tại &lt;a href="https://golang.org/ref/spec#Types"&gt;spec&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Struct &amp;amp; method&lt;/h4&gt;
&lt;p&gt;Python có class, cung cấp đủ các tính năng tiêu chuẩn của OOP (object-oriented
programming - lập trình hướng đối tượng).  Định nghĩa 1 class tạo ra 1
kiểu dữ liệu mới và cho phép đóng gói dữ liệu (data) với tính năng (method) lại
với nhau.&lt;/p&gt;
&lt;p&gt;Go &lt;code&gt;struct&lt;/code&gt;: A struct is a collection of fields.&lt;/p&gt;
&lt;p&gt;struct không cung cấp các tính năng của OOP (như inheritance), nhưng cũng
tạo ra 1 kiểu dữ liệu mới và cho phép đóng gói dữ liệu (data) với tính năng
(method) lại với nhau. &lt;a href="https://play.golang.org/p/tQMPLn9OXcj"&gt;https://play.golang.org/p/tQMPLn9OXcj&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Width&lt;/span&gt;  &lt;span class="kt"&gt;float64&lt;/span&gt;
    &lt;span class="nx"&gt;Height&lt;/span&gt; &lt;span class="kt"&gt;float64&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Area&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;float64&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Height&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%f %T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Area&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code tương tự trong Python3, với type annotation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;area&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong Go, function gắn với các struct gọi là method, &lt;code&gt;(r Rectangle)&lt;/code&gt; gọi là receiver, đứng trước tên &lt;code&gt;Area()&lt;/code&gt; trông lạ so với các ngôn ngữ khác, nhưng nó đóng vai trò như &lt;code&gt;self&lt;/code&gt; trong Python method.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember: a method is just a function with a receiver argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;interface, type assertion, type switch&lt;/h4&gt;
&lt;p&gt;Một interface type định nghĩa 1 tập hợp các method.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An interface type is defined as a set of method signatures.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Một value của type interface có thể chứa bất kỳ giá trị nào implement các method qui định trong interface đó.&lt;/p&gt;
&lt;p&gt;Empty interface &lt;code&gt;interface{}&lt;/code&gt; là trường hợp đặc biệt, nó có thể chứa mọi giá
trị do không cần có method nào.&lt;/p&gt;
&lt;p&gt;Một value kiểu &lt;code&gt;interface{}&lt;/code&gt; đánh sập mọi đảm bảo về type trong Golang, biến
Go thành dynamic typing như Python. Nó như lối thoát linh hoạt giữa mọi
sự cứng nhắc/static.&lt;/p&gt;
&lt;p&gt;Sử dụng type assertion để truy cập giá trị ẩn dưới &lt;code&gt;interface{}&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;anything&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="nx"&gt;anything&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;PyMi.vn&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v %T\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;anything&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v %T\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%v %T\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;anything&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/mNXTI-4C3pU"&gt;https://play.golang.org/p/mNXTI-4C3pU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;hoặc dùng &lt;code&gt;switch&lt;/code&gt; để xử lý các kiểu khác nhau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Twice %v is %v\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%q is %v bytes long\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Control flow (if/else/for)&lt;/h3&gt;
&lt;p&gt;Go không có while, dùng for để loop đủ kiểu. Để lặp vô hạn như while, dùng &lt;code&gt;for { }&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;if cho phép định nghĩa một biến chỉ dùng trong if, khá giống với warus operator của Python 3.8.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;big number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;We don&amp;#39;t talk any more&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;ns&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;meo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;bo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ga&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;ns&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d %s\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/rHJP4ghomzo"&gt;https://play.golang.org/p/rHJP4ghomzo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Function&lt;/h3&gt;
&lt;p&gt;Định nghĩa function không khác Python đáng kể, ngoại trừ việc thay vì return tuple, Go có thể return nhiều giá trị (và không có kiểu tuple).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TwiceAndThrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://golang.org/doc/faq#overloading"&gt;Go không hỗ trợ overloading - một function dùng với số lượng argument khác nhau&lt;/a&gt;
, nên cũng không hỗ trợ default argument &lt;code&gt;pyfunc(x, y=10)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Cách duy nhất để gọi function là đưa vào các argument theo thứ tự, không
có &lt;a href="https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments"&gt;keyword argument như Python&lt;/a&gt; (&lt;code&gt;python_function(x=5, y=7)&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Có thể dùng function làm argument của function khác, việc này rất phổ biến trong Go, khái niệm này có tên &lt;code&gt;first class function&lt;/code&gt;.
Function nhận function khác làm argument được gọi là &lt;code&gt;higher order function&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Error handling&lt;/h3&gt;
&lt;p&gt;Go không có exception, lỗi không được xử lý khiến chương trình kết thúc qua việc gọi function "panic" (runtime error).
Ví dụ khi dùng type assertion để truy cập kiểu string dưới 1 empty interface chứa giá trị int.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;conversion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các function thay vì tạo ra exception, thường trả về giá trị kiểu &lt;code&gt;error&lt;/code&gt; kèm kết quả.
Ví dụ function trong package &lt;code&gt;strconv&lt;/code&gt; dùng để convert string thành int:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu thành công, error sẽ là &lt;code&gt;nil&lt;/code&gt; còn biến kiểu int chứa giá trị, nếu s không phải dạng string của 1 số int, error sẽ có giá trị khác &lt;code&gt;nil&lt;/code&gt; và thường chứa chi tiết về lỗi xảy ra. &lt;code&gt;error&lt;/code&gt; là kiểu dữ liệu interface.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;mọi kiểu dữ liệu có method &lt;code&gt;Error()&lt;/code&gt; return &lt;code&gt;string&lt;/code&gt; đều có thể là 1 &lt;code&gt;error&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Do các function đều viết theo cách này, nên code gọi 1 function trong Go thường đi kèm với 1 đoạn kiểm tra &lt;code&gt;error&lt;/code&gt; ngay sau đó rồi mới xử lý giá trị nhận được:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;42&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;strconv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cách làm này gây nhiều tranh cãi, nhưng vẫn là cách làm chính thống của Go.
Go dễ dãi hơn so với Java (khi 1 function xảy ra exception gì thì phải khai báo có thể xảy ra exception, và code gọi bắt buộc phải xử lý).
Bỏ qua giá trị của &lt;code&gt;err&lt;/code&gt; là chuyện hoàn toàn làm được, như viết code Python không xử lý exception, khi có error xảy ra, chương trình thường sẽ... chết.&lt;/p&gt;
&lt;p&gt;Cách return error này không ÉP được lập trình viên phải xử lý mọi lỗi, nhưng tạo ra 1 nền văn hóa trong cộng đồng code Golang: luôn xử lý (hay ít nhất là nghĩ tới) error mọi lúc, mọi nơi.&lt;/p&gt;
&lt;h3&gt;Import&lt;/h3&gt;
&lt;p&gt;Cú pháp tương tự Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;packagename&amp;quot;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;rồi gọi function qua &lt;code&gt;package.Function&lt;/code&gt;, vd: &lt;code&gt;fmt.Println&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Package &amp;amp; Install 3rd packages&lt;/h3&gt;
&lt;p&gt;Đầu mỗi file code Go phải bắt đầu bằng&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;packagename&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tất cả các file go trong cùng 1 thư mục (không tính thư mục con) phải khai
báo cùng package, chúng sẽ được gộp lại làm một (trừ phần import, mỗi file
phải tự import thư viện mình dùng). Có thể coi việc các file khác nhau chỉ để
thuận tiện tổ chức code, chứ vẫn là trong 1 file. Các function trong cùng 1
package (khác file) có thể gọi nhau thoải mái, không cần import lẫn nhau.&lt;/p&gt;
&lt;p&gt;Việc này khác với Python, mỗi file.py tự động là 1 module riêng biệt.&lt;/p&gt;
&lt;p&gt;Go cài package bằng lệnh &lt;code&gt;go get&lt;/code&gt;, sau đó import tên package - là một đường dẫn theo cấu trúc URL online.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ go get github.com/stretchr/testify/assert
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Package "testing" của Go không có "assert", cài package từ github rồi dùng
assert.Equal để kiểm tra 2 giá trị có bằng nhau không, và message hiển thị khi chúng không bằng nhau.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// main_test.go&lt;/span&gt;
&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;github.com/stretchr/testify/assert&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;testing&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;TestSomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// assert equality&lt;/span&gt;
    &lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;they should be equal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; $ go &lt;span class="nb"&gt;test&lt;/span&gt; -v
&lt;span class="o"&gt;===&lt;/span&gt; RUN   TestSomething
--- PASS: TestSomething &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="o"&gt;)&lt;/span&gt;
PASS
ok      _/home/hvn/MyData   &lt;span class="m"&gt;0&lt;/span&gt;.002s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Danh sách các package xem tại &lt;a href="https://github.com/avelino/awesome-go"&gt;awesome-go&lt;/a&gt; và &lt;a href="https://godoc.org/"&gt;godoc&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;IO: read/write file&lt;/h3&gt;
&lt;p&gt;Đọc file từng dòng và ghi file:&lt;/p&gt;
&lt;p&gt;Ghi file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tạo file với os.Create, thu được 1 File struct&lt;/li&gt;
&lt;li&gt;Gọi method File.WriteString để ghi string&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bundau.mamtom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bundau\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu bỏ qua phần xử lý error thì cũng không khác Python là mấy.&lt;/p&gt;
&lt;p&gt;Đọc file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mở file bằng os.Open, thu được 1 File struct&lt;/li&gt;
&lt;li&gt;Tạo 1 "Scanner" để giúp xử lý logic đọc file theo từng dòng&lt;/li&gt;
&lt;li&gt;Lặp qua scanner.Scan() để lấy từng dòng qua scanner.Text()&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bundau.mamtom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;defer&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;scanner&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;bufio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewScanner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;scanner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;lines&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;scanner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;scanner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://play.golang.org/p/Jv80_bRJc2H"&gt;https://play.golang.org/p/Jv80_bRJc2H&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;Giải bài &lt;a href="https://projecteuler.net/problem=1"&gt;Project Euler 1&lt;/a&gt; bằng Go:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Find the sum of all the multiples of 3 or 5 below 1000.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giải bài &lt;a href="https://projecteuler.net/problem=16"&gt;Project Euler 16&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the sum of the digits of the number 2 to the power of 1000?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;math/big&amp;quot;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;strconv&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;twoToThePowerOf1000&lt;/span&gt; &lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;
    &lt;span class="nx"&gt;twoToThePowerOf1000&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;big&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// Có thể tính sum luôn nhưng bài này minh họa slice&lt;/span&gt;
    &lt;span class="nx"&gt;digits&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;twoToThePowerOf1000&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;String&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;strconv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Atoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nx"&gt;digits&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="nx"&gt;digits&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;People &amp;amp; Community&lt;/h2&gt;
&lt;p&gt;Go có cộng đồng trên toàn cầu, có forum/slack/IRC để thảo luận, xem tại &lt;a href="https://golang.org/help/#help"&gt;help&lt;/a&gt; - có cả bằng Tiếng Việt.&lt;/p&gt;
&lt;p&gt;Những nhân vật đáng chú ý/follow trong cộng đồng Go gồm các tác giả, core dev, ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/index"&gt;Go blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Rob_Pike"&gt;Rob Pike&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dave.cheney.net/category/golang"&gt;Dave Cheney&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swtch.com/~rsc/"&gt;Russ Cox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Go là một ngôn ngữ lập trình đơn giản và thú vị, với những kiến thức trong bài này, ta đã có thể bắt đầu dùng Go để viết các chương trình không hề đơn giản.
Phần tiếp sẽ trình bày chi tiết về các khái niệm chỉ có trong Go mà không có trong Python như Pointer, sự khác biệt về cách tổ chức package trong Go, declaration &amp;amp; initialization (khai báo và khởi tạo variable), cùng các standard library quan trọng nhất cho một SysAdmin/DevOps.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.iron.io/how-we-went-from-30-servers-to-2-go/"&gt;https://blog.iron.io/how-we-went-from-30-servers-to-2-go/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.iron.io/go-after-2-years-in-production/"&gt;https://blog.iron.io/go-after-2-years-in-production/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.golang.org/survey2019-results"&gt;https://blog.golang.org/survey2019-results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/SuccessStories"&gt;https://github.com/golang/go/wiki/SuccessStories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.catb.org/~esr/reposurgeon/GoNotes.html"&gt;Notes on the Go translation of Reposurgeon - from Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hn.algolia.com/?q=go"&gt;https://hn.algolia.com/?q=go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Next&lt;/h2&gt;
&lt;p&gt;Đã có phần 2 &lt;a href="http://pp.pymi.vn/article/go12/"&gt;&lt;strong&gt;Cứ đi là đến&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="golang"></category><category term="go"></category></entry><entry><title>Viết code dễ đổi, dễ test như thế nào?</title><link href="http://pp.pymi.vn/article/repl/" rel="alternate"></link><published>2020-08-17T00:00:00+07:00</published><updated>2020-08-17T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-08-17:/article/repl/</id><summary type="html">&lt;p&gt;Tận dụng tối đa REPL của Python, tính năng mà C, Java, Golang không có&lt;/p&gt;</summary><content type="html">&lt;p&gt;Các lập trình viên chuyển sang code Python từ các ngôn ngữ lập trình khác như
Java, C, Golang... thường bắt đầu code bằng việc bật một cái IDE to đùng
(PyCharm) lên,
rồi viết chục dòng code, sau đó bấm nút "tam giác" để chạy từ trên xuống dưới.
Đó là cách làm phổ biến, tiêu chuẩn khi viết code C, Java, Golang... nhưng là
một cách làm rất không ... Python.&lt;/p&gt;
&lt;p&gt;Khi học Python, việc đầu tiên ta làm là bật &lt;code&gt;python&lt;/code&gt; từ terminal, rồi gõ trực
tiếp các dòng code vào đó, enter để thấy kết quả:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.6.9&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Apr&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;8.4.0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; is the answer of life.&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;42 is the answer of life.&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Còn khi đi làm, viết code Python? Cũng vậy!&lt;/p&gt;
&lt;p&gt;Khả năng gõ code trực tiếp, enter thấy ngay kết quả như trên, là một tính năng
cực kỳ hấp dẫn/quan trọng của Python cũng như các ngôn ngữ lập trình có &lt;code&gt;REPL&lt;/code&gt;
như Ruby, Clojure, JavaScript, LISP, Ocaml, Elixir, F#... nó cho phép người
dùng khám phá,
vui chơi thoải mái với dữ liệu một cách tương tác, thấy kết quả nhanh nhất, thay
vì phải ngồi tưởng tượng, đoán, chờ compile,
và dựa vào IDE trợ giúp như các ngôn ngữ không có REPL.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xkcd303" src="https://imgs.xkcd.com/comics/compiling.png"&gt;&lt;/p&gt;
&lt;p&gt;Đây là chế độ &lt;a href="https://docs.python.org/3/tutorial/interpreter.html"&gt;"interactive mode"&lt;/a&gt;
của Python interpreter, khái niệm này có cái tên khác chung hơn là: REPL.&lt;/p&gt;
&lt;p&gt;(Chú ý: Golang có các project như &lt;a href="https://github.com/motemen/gore"&gt;&lt;code&gt;gore&lt;/code&gt;&lt;/a&gt; hay
 &lt;code&gt;yaegi&lt;/code&gt; nhưng đều rất hạn chế so với REPL của các ngôn ngữ kể trên).&lt;/p&gt;
&lt;h2&gt;REPL&lt;/h2&gt;
&lt;p&gt;REPL - Read Eval Print Loop, là môi trường nhận đầu vào từ người dùng (&lt;code&gt;Read&lt;/code&gt;),
chạy input đó (&lt;code&gt;Eval&lt;/code&gt;), in kết quả ra màn hình (&lt;code&gt;Print&lt;/code&gt;), và cứ tiếp tục vậy
(&lt;code&gt;Loop&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Khái niệm này bắt nguồn từ ngôn ngữ lập trình cổ thứ 2 thế giới: &lt;a href="https://pp.pymi.vn/article/scm1/"&gt;LISP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Việc viết code khi dùng các ngôn ngữ có REPL thường theo các bước:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bật REPL lên&lt;/li&gt;
&lt;li&gt;gõ code thử cho tới khi thu được kết quả mong muốn&lt;/li&gt;
&lt;li&gt;copy code đó vào editor/IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ví dụ&lt;/h2&gt;
&lt;p&gt;Đoạn code Python 3 sau sẽ truy cập API của GitHub, lấy các repo của Pymivn về,
lọc ra các repo có &amp;gt; 0 star, sắp xếp giảm dần theo số star,
rồi in ra output ở dạng dễ đọc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# githubstars.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://api.github.com/users/pymivn/repos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;has_stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;
                &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu viết theo kiểu này, rồi cho vào IDE, bấm nút tam giác để chạy, những nhược
điểm sau sẽ xuất hiện:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mỗi lần chạy, code sẽ truy cập vào API GitHub 1 lần, việc này ngoài chậm,
phụ thuộc vào mạng internet mỗi lần chạy,
còn thêm nhược điểm nữa là sẽ dùng tốn "quota" hàng ngày của bạn (VD GitHub chỉ
cho phép gọi API n lần 1 ngày).&lt;/li&gt;
&lt;li&gt;Trừ khi bạn code 1 lần chuẩn luôn, còn không thì mất khoảng 5 7 lần mới ra
đoạn code trên.&lt;/li&gt;
&lt;li&gt;Không test từng phần (bước) của đoạn code được.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thay vì vậy, viết lại một phần code như sau&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getrepos&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://api.github.com/users/pymivn/repos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lưu vào file &lt;code&gt;github.py&lt;/code&gt;, rồi vào terminal, bật &lt;code&gt;python3&lt;/code&gt; lên, gõ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;github&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getrepos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;list&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;, 23)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;dict_keys&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;node_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;full_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;owner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;html_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fork&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;forks_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;keys_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;collaborators_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;teams_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hooks_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;issue_events_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;events_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;assignees_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;branches_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tags_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blobs_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git_tags_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git_refs_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;trees_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;statuses_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;languages_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stargazers_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;contributors_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;subscribers_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;subscription_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;commits_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git_commits_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;comments_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;issue_comment_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;contents_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;compare_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;merges_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;archive_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;downloads_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;issues_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pulls_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;milestones_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;notifications_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;labels_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;releases_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;deployments_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pushed_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ssh_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;clone_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;svn_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;homepage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stargazers_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watchers_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;language&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has_issues&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has_projects&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has_downloads&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has_wiki&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;has_pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;forks_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mirror_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;archived&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open_issues_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;license&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;forks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open_issues&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watchers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default_branch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stargazers_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;has_stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stargazers_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stars_urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stargazers_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stars_urls&lt;/span&gt;
&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/awesome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/cpuisfast&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/hoidap-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/lekhome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/math-stats-ml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/people&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/pyjobs_crawlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/Python_Hanoi_Meetup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stars_urls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stars_urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;awesome&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Python_Hanoi_Meetup&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;people&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cpuisfast&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyjobs_crawlers&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lekhome&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pymivn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hoidap&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Với cách làm này, chỉ cần gọi GitHub API duy nhất 1 lần, còn sau đó thử
thoải mái cho đến khi thu được kết quả mong muốn thì copy vào file cuối cùng:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getrepos&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://api.github.com/users/pymivn/repos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter_repos_have_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_star_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getrepos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;repos_have_stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filter_repos_have_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stars_urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;get_star_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;repos_have_stars&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;stars_urls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stars_urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau này nếu code có bug, lại bật REPL lên, gọi các function để debug trực tiếp
dễ dàng, từng bước một.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.6.9&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;copyright&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;credits&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;license&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;
&lt;span class="n"&gt;IPython&lt;/span&gt; &lt;span class="mf"&gt;7.9.0&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;An&lt;/span&gt; &lt;span class="n"&gt;enhanced&lt;/span&gt; &lt;span class="n"&gt;Interactive&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;github&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getrepos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;have_stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_repos_have_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;have_stars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_star_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;have_stars&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/awesome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/cpuisfast&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/hoidap-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/lekhome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/math-stats-ml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/people&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/pyjobs_crawlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/Python_Hanoi_Meetup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_star_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;have_stars&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/awesome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/math-stats-ml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/Python_Hanoi_Meetup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/people&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/cpuisfast&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/pyjobs_crawlers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/lekhome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/pymivn/hoidap-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Dev với IPython&lt;/h2&gt;
&lt;p&gt;IPython (&lt;code&gt;pip install ipython&lt;/code&gt;) cung cấp thêm các tính năng giúp cách code này
hiệu quả hơn.&lt;/p&gt;
&lt;p&gt;IPython có màu mè, auto-indent tự thụt sau for/if giúp gõ nhanh hơn.&lt;/p&gt;
&lt;p&gt;Magic command &lt;code&gt;%hist&lt;/code&gt; sẽ hiện full history những gì user đã gõ, giúp copy code
để paste ra IDE/Editor dễ hơn, không bao gồm output.&lt;/p&gt;
&lt;p&gt;Magic command &lt;code&gt;%edit&lt;/code&gt; sẽ mở hẳn editor ra để sửa code, sau khi đóng lại, code
sẽ được chạy, các biến sẽ tồn tại trong môi trường đang code.&lt;/p&gt;
&lt;p&gt;Ví dụ này gõ &lt;code&gt;%edit&lt;/code&gt; lần đầu định nghĩa list &lt;code&gt;ns&lt;/code&gt;, rồi gõ &lt;code&gt;%edit&lt;/code&gt; lần 2 để
print ra list ns định nghĩa trước đó:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.6.9&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Apr&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;copyright&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;credits&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;license&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;
&lt;span class="n"&gt;IPython&lt;/span&gt; &lt;span class="mf"&gt;7.9.0&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;An&lt;/span&gt; &lt;span class="n"&gt;enhanced&lt;/span&gt; &lt;span class="n"&gt;Interactive&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;edit&lt;/span&gt;
&lt;span class="n"&gt;IPython&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;temporary&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipython_edit_2v90rimj&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipython_edit_wf_rn_nc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;Editing&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Executing&lt;/span&gt; &lt;span class="n"&gt;edited&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;ns = [1,2,3,4]&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;ns&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;edit&lt;/span&gt;
&lt;span class="n"&gt;IPython&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;temporary&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipython_edit_qb43pml6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipython_edit_tph7_5x6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;Editing&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Executing&lt;/span&gt; &lt;span class="n"&gt;edited&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;print(ns)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Đổi editor&lt;/h3&gt;
&lt;p&gt;ra shell, gõ &lt;code&gt;echo $EDITOR&lt;/code&gt; xem đang đặt
là gì, thay bằng câu lệnh mở editor mình muốn, ví dụ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;EDITOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nano
$ ipython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Chạy file rồi bật REPL&lt;/h3&gt;
&lt;p&gt;Python hay IPython đều hỗ trợ &lt;a href="https://pp.pymi.vn/article/pythoni/"&gt;option
&lt;code&gt;-i&lt;/code&gt;&lt;/a&gt;, sau khi chạy với 1 file code
sẽ tự động vào chế độ interactive mode&lt;/p&gt;
&lt;h2&gt;Jupyter&lt;/h2&gt;
&lt;p&gt;Code trên Jupyter (&lt;code&gt;pip install jupyter&lt;/code&gt;) cũng cho khả năng linh hoạt tương tự.
Code xong File &amp;gt; Save As Python file.&lt;/p&gt;
&lt;h2&gt;Unittest&lt;/h2&gt;
&lt;p&gt;Trong các ngôn ngữ không có REPL, cách thử 1 đoạn code nhanh nhất là viết
1 function cần thử, rồi viết unittest, rồi chạy test thay vì chạy cả 1 chương
trình ngàn dòng.
Với Python, ta chỉ cần bật REPL lên, import module vào và khám phá.&lt;/p&gt;
&lt;p&gt;Code viết theo cách mới trên vừa dễ gõ trực tiếp trong REPL, vừa dễ viết unittest,
ví dụ viết nhanh unittest chạy bằng &lt;code&gt;pytest&lt;/code&gt; (&lt;code&gt;pip install pytest&lt;/code&gt;) như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# test_github.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;github&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;bad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;html_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bad_repo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;html_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://github.com/pymivn/awesome&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;blah&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;sample_repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bad&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_repos_have_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_star_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stargazers_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;has_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;good&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Viết code bằng REPL hay bằng &lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;unittest
TDD&lt;/a&gt; đều mang tới một
kết quả chung: code dễ sửa, dễ test.&lt;/p&gt;
&lt;p&gt;Tất nhiên REPL không thay thế hoàn toàn cho unittest, nhưng nó mang lại môi
trường thử nghiệm nhanh chóng &lt;del&gt;tương đương như&lt;/del&gt; hơn nhiều unittest ở
các ngôn ngữ khác.&lt;/p&gt;
&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;Cài ngay IPython, Jupyter rồi bật lên mỗi khi muốn code Python.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Đừng đọc tiếng Anh theo kiểu Tiếng Việt, đừng code Python theo kiểu Java.
REPL là một phát minh có sức mạnh khủng khiếp mà các Pythonista nên vận dụng,
sử dụng, và lạm dụng hết mình.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="best-practice"></category></entry><entry><title>Phỏng vấn</title><link href="http://pp.pymi.vn/article/phongvan/" rel="alternate"></link><published>2020-04-10T00:00:00+07:00</published><updated>2020-04-10T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-04-10:/article/phongvan/</id><summary type="html">&lt;p&gt;phỏng vấn thì chuẩn bị gì? làm thế nào để "deal" lương? học xong xin việc thế nào?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Phỏng vấn là hai từ mang yếu tố quyết định, nhưng ít khi được nhắc đến.
Nó thường bị xem như sự may mắn, hay do "giỏi", hay quan hệ tốt ...
Bài viết này giải đáp các thắc mắc thầm kín khi đi phỏng vấn xin việc, đặc biệt
dành cho những người kiếm công việc lập trình đầu tiên.&lt;/p&gt;
&lt;h2&gt;Phỏng vấn là gì?&lt;/h2&gt;
&lt;p&gt;Khi muốn đi làm, một lập trình viên sẽ liên hệ với một công ty để "xin việc" nhằm
có một công việc, được trả lương tại công ty đó, ở đây ví dụ là PAMA corp.&lt;/p&gt;
&lt;p&gt;PAMA corp sẽ cử một hoặc một nhóm người thực hiện việc "kiểm tra đầu vào". Sau
quá trình kiểm tra, nếu phía PAMA corp đồng ý, phía lập trình viên đồng ý,
sẽ ký một hợp đồng lao động, rồi lập trình viên đi làm, và được trả lương.&lt;/p&gt;
&lt;h2&gt;Nộp "đơn xin việc" thế nào?&lt;/h2&gt;
&lt;p&gt;Thông thường, tức không phải các trường hợp ngoại lệ như bị "săn" đón đi làm,
hay có quan hệ được "giới thiệu" vào làm, thì:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lập trình viên sẽ lên các trang tuyển dụng/tìm việc (&lt;a href="https://jobs.pymi.vn/"&gt;như PyJobs&lt;/a&gt;)/trang chủ của công ty cụ thể để tìm công việc mong muốn,&lt;/li&gt;
&lt;li&gt;hoặc các "head hunter" chuyên đi săn ứng viên hay HR (human resource - nhân
  sự) của các công ty chủ động liên hệ, mời (or gạ) nộp hồ sơ phỏng vấn. Chú ý
  đây là một nghề hái ra tiền, nên đừng shock nếu được mời chào đon đả.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Quy trình phỏng vấn ra sao?&lt;/h2&gt;
&lt;p&gt;Thông thường sẽ có:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HH/HR gọi điện, thống nhất về Job description (JD - yêu cầu công việc), có
  thể có cả mức lương thưởng/chính sách. Nếu không có, hãy hỏi kỹ, cụ thể để
  khỏi mất thời gian. Bạn sẽ không muốn tốn thời gian 4 tuần đi qua 8 vòng phỏng
  vấn để biết mức thu nhập tối đa công ty sẽ trả cho vị trí đó là 1.500 USD, trong
  khi thu nhập hiện tại của bạn đang là 3000 USD.
  HR sẽ chốt quy trình phỏng vấn (mấy vòng), thời gian phỏng vấn vòng 1.&lt;/li&gt;
&lt;li&gt;Vòng 0: các công ty có thể có bài test online, thường là code 2-3 bài thuật
  toán trong vòng 1 tiếng trên 1 trang code online như hackerank.com.
  Hoặc cũng có thể cho 1 bài "test" về nhà làm 1 sản phẩm gì đó rồi nộp sau 1
  tuần.&lt;/li&gt;
&lt;li&gt;Nếu có vòng 0, và nếu đạt yêu cầu, HR sẽ email/ gọi điện hẹn phỏng vấn vòng 1.&lt;/li&gt;
&lt;li&gt;Vòng 1, có thể là cả vòng 2, hay thậm chí vòng N, là việc gặp và trả lời các
  câu hỏi do đại diện phía công ty đưa ra.&lt;/li&gt;
&lt;li&gt;Nếu N vòng này thành công, sẽ tới vòng cuối cùng: "deal" lương. Dựa vào kết
  quả N vòng trước mà công ty quyết định có tuyển lập trinh viên không, và
  trả thù lao bao nhiêu.&lt;/li&gt;
&lt;li&gt;Hai bên nếu đồng ý sẽ ký giấy tờ, và hẹn ngày đi làm. Với người đang đi làm
  ở công ty khác, sẽ thỏa thuận sau thời gian X ngày (thường là 30-45 ngày)
  sẽ đi làm do đó là thời gian cần thiết để xin nghỉ, chấm dứt hợp đồng với
  công ty cũ.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Đơn xin việc - Resume - CV&lt;/h2&gt;
&lt;p&gt;Thường là 1 file PDF (để đọc được trên mọi hệ điều hành),
bằng tiếng Anh (để tỏ ra chuyên nghiệp), có link GitHub đến các project cá
nhân thay vì đính kèm file RAR.&lt;/p&gt;
&lt;p&gt;Xem mẫu CV học viên mới tốt nghiệp &lt;a href="https://pymi.vn"&gt;pymivn&lt;/a&gt;
tại &lt;a href="https://bit.ly/pymicv"&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tránh các mẫu CV có "thanh năng lượng" đánh giá 3 sao 5 sao. Really? bạn
có chắc mình đạt 3 sao? so với ai? So với Guido van Rossum?
Để 4 5 sao nhiều khi phản tác dụng khiến cho phía bên kia tìm cách mà dìm bạn
xuống, khiêm tốn là một (đức) tính được yêu thích (trước) khi đi làm.&lt;/p&gt;
&lt;h2&gt;Các vấn đề bất cập của quy trình phỏng vấn&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Không có chuẩn, không có khuôn mẫu, mỗi chỗ một kiểu. Có khi lý do
  không ai viết bài về chuyện phỏng vấn bởi nó chả bao giờ giống nhau cả.&lt;/li&gt;
&lt;li&gt;Vậy nên những thứ viết trong bài này, hãy xem là tương đối, bởi tác giả
  không muốn thêm chữ "một cách tương đối" cuối mỗi câu, hay "đôi khi"/"hầu
  hết" ở mỗi đầu câu.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Những bí quyết phỏng vấn&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HIỂU rằng ký hợp đồng lao động và đi làm cho một công ty, đó là một thỏa
  thuận &lt;strong&gt;kinh tế&lt;/strong&gt; giữa 2 bên, thuận mua - vừa bán, như đi mua thịt mua rau.
  Phía công ty dùng tiền để mua - phía lập trình viên bán sức lao động. Không
  phải chuyện xin cho, ơn huệ, nợ nần gì ai cả. Không có công ty làm việc không
  vì lợi nhuận, nhận vào làm vì &lt;a href="https://www.youtube.com/watch?v=iJKV5miglAg"&gt;thương bạn như thương cây bàng
  non&lt;/a&gt;. Cũng không có chuyện "anh
  em như thể người nhà, bạn bè đồng nghiệp như là người thân". No, please.
  Bạn sẽ bị thay thế bất cứ lúc nào nếu không còn có lợi cho công ty.&lt;/li&gt;
&lt;li&gt;Không để lộ mức lương hiện tại, bằng mọi giá. Vì lý do gì công ty PAMA corp
  cần biết mức lương cũ của bạn? lý do duy nhất là để ép nó xuống. Nếu bạn nói
  lương hiện tại 10 triệu, công ty hoàn toàn tự tin trả bạn 11 triệu. Nhưng nếu
  không biết, họ chỉ có thể trả thấp hơn 1 chút mức bạn yêu cầu. Ở Mỹ, có hẳn
  &lt;a href="https://www.sfgate.com/business/networth/article/New-law-bans-California-employers-from-asking-12274431.php"&gt;luật cấm các công ty hỏi lịch sử lương ứng viên&lt;/a&gt;. Ở Việt Nam không có luật này, nhưng nếu bị hỏi, hãy nói đã kỹ thỏa thuận
  không tiết lộ &lt;a href="https://en.wikipedia.org/wiki/Non-disclosure_agreement"&gt;NDA&lt;/a&gt;
  của công ty cũ / hiện tại. HR sẽ hỏi vòng rằng "mức mong đợi của
  anh là bao nhiêu?", lúc đó cứ thoải mái nói mức bạn mong muốn, hay cộng 7-10
  triệu vào mức hiện tại, không mấy ai nhảy việc để nhận thêm 1 triệu mỗi tháng
  cả.&lt;/li&gt;
&lt;li&gt;Hỏi rõ mức thu nhập cụ thể, kể cả khoảng (range - từ X đến Y). Rất nhiều công
  ty để lương theo kiểu "thỏa thuận", hay "có thể thương lượng", hay HR cương
  quyết không nói mà đòi phải qua vòng phỏng vấn. Cũng nên chú ý rằng, nếu
  công ty nói là max 2000 USD hay upto 2000 USD, thường nghĩa là họ chỉ trả max
  1 nghìn mốt.&lt;/li&gt;
&lt;li&gt;Hỏi rõ lương làm Gross hay Net, search internet để hiểu rõ sự khác nhau này.&lt;/li&gt;
&lt;li&gt;Nhận 80% lương thử việc là điều thường thấy, nhưng không phải bắt buộc.
  Ít khi thấy ở các vị trí câp cao vài nghìn USD.&lt;/li&gt;
&lt;li&gt;Không phải "giỏi" kỹ thuật hơn thì lương cao hơn. Có chăng lý do lương A cao
  hơn B dù trình độ "ngang nhau" là bởi A giỏi thương lượng/đàm phán/thỏa
  thuận hơn B.&lt;/li&gt;
&lt;li&gt;Các câu hỏi mang tính chất dìm hàng như bằng cấp (đặc biệt khi bạn không tốt
  nghiệp đại học ngành công nghệ thông tin) nhằm làm căn cứ để giảm lương của bạn.
  Chỉ một số các công ty nhà nước/ngân hàng mới thực sự đòi hỏi bằng cấp. Hay
  khi phải cân nhấc 2 ứng viên ngang ngửa, bằng mới được lôi ra.&lt;/li&gt;
&lt;li&gt;Mức lương tối thiểu cho một lập trình viên Python biết làm web Flask hay
  dùng pandas hay viết crawler (hay tốt nghiệp &lt;a href="https://pymi.vn"&gt;Pymi.vn&lt;/a&gt;)
  là 8-10 triệu VND tại năm 2019. Sau 1 năm kinh nghiệm,
  con số này có thể gấp đôi, hoặc hơn.&lt;/li&gt;
&lt;li&gt;Các yêu cầu ghi trong JD là yêu cầu lý tưởng, chứ không phải điều kiện tiên
  quyết. Như 2 năm kinh nghiệm hay bằng đại học, hay 10 dòng yêu cầu khác.&lt;/li&gt;
&lt;li&gt;Trượt phỏng vấn 10 công ty: chúc mừng, bạn đã đánh 10 con quái và lên level 2.
  Thất bại là một phần tất yếu của thành công.
  Quan trọng là về biết rút kinh nghiệm, học những câu trả lời sai để lần sau
  còn làm đúng. Rồi bạn sẽ ngạc nhiên khi nhiều công ty/nhiều vòng phỏng vấn
  có "kho" câu hỏi trùng nhau.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Kỹ thuật&lt;/h2&gt;
&lt;p&gt;Bên trên toàn nói chuyện thoả thuận, tiền, thế còn các câu hỏi kỹ thuật thì sao?
các thuật toán cao siêu thì thế nào???&lt;/p&gt;
&lt;p&gt;Thực ra những vấn đề kỹ thuật không mang nhiều tính chất quyết định. Đúng như
táo quân nói, những thứ khác quan trọng hơn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;quan hệ: rất nhiều người đi làm nhờ quan hệ, quan hệ ở đây không có nghĩa xấu
  như trong táo quân. Một lập trình viên giỏi chưa chắc có việc nhanh bằng
  một thanh niên biết code có nhiều môi quen biết, biết chỗ nào đang cần người.
  Nhiều mối ngon cũng đến do ông A chỉ biết thằng B làm Python, chả biết thằng
  nào khác cả. Lên mạng đi tuyển lại phải đau đầu với chuyện tuyển dụng/ cạnh
  tranh với hàng trăm công ty khác khi dev Python giờ hot như cồn và khẩu trang.&lt;/li&gt;
&lt;li&gt;may mắn: ôn đúng bài, bị hỏi toàn cái biết, hay đẹp trai cũng là một dạng may
  mắn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Những điều không phải là thất bại&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Các công ty phỏng vấn Python nhưng lại toàn hỏi C, Java, PHP... Nếu là một
  lập trình viên Python / backend, thì khi phỏng vấn tôi cần trả lời các vấn
  đề về Python, hay SQL, hay thậm chí tool làm việc như git, docker. Nhưng
  chẳng có lý do gì lại hỏi C array so sánh với Python list, hay Java/C#
  design pattern cho Python cả. Khi gặp những công ty hỏi kiểu này, bạn không trả
  lời được thì đừng trách mình "dốt". Nếu có được hỏi lại, hãy hỏi họ giá trị gì
  mang lại khi họ hỏi những câu đó với 1 lập trình viên Python. Hoặc bạn sẽ
  biết phía bên kia không biết gì về Python (không hiếm với các công ty outsource),
  hoặc sẽ học được điều gì đó.&lt;/li&gt;
&lt;li&gt;Trượt các câu hỏi thuật toán/IQ: các câu hỏi này rất đa dạng, trừ khi bạn
  dành đủ 6 tháng 2 năm cày luyện Cracking Coding Interview để thi vào Google,
  cày leetcode... thì đừng mong trả lời được mọi câu hỏi thuật toán lắt léo.
  Và nên nhớ, công ty bạn đang nộp vào, không phải là Google.
  Quy trình phỏng vấn dùng các câu hỏi thuật toán &lt;a href="https://news.ycombinator.com/item?id=22331804"&gt;hiện được xem như một quy
  trình nhiều lỗ hổng&lt;/a&gt;,
  bởi nó không phải 1 cách tốt để dánh giá ứng viên.&lt;/li&gt;
&lt;li&gt;Trượt các câu hỏi lý thuyết trong trường đại học: bên tuyển dụng thường hay hỏi
  kể tên các thuật toán sort bạn biết: bubble sort, quick sort, merge sort,
  heapsort, insert sort, hay cả &lt;a href="https://www.familug.org/2014/12/algorithm-sleep-sort.html"&gt;sleep sort&lt;/a&gt;
  thế nhưng chưa chắc họ đã biết tên thuật toán sort trong Python (list.sort)
  tên là gì? (it's Tim sort) và khả năng cao khác, là họ không giải thích được khi
  nào bạn phải dùng các thuật toán trường học trên thay vì Tim sort có sẵn
  trong Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Fun fact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Có những công ty thực hiện đến hơn 10 cuộc phỏng vấn (phỏng vấn lần lượt từng
  người trong team), kéo dài vài tháng.&lt;/li&gt;
&lt;li&gt;Có nhiều công ty "top", "hot", "đỉnh", "chỉ tuyển người giỏi nhất", nhưng trả
  mức thù lao mà chỗ nào cũng trả được.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Dặn dò&lt;/h2&gt;
&lt;p&gt;Nhớ làm thành thạo bài tập của &lt;a href="https://pymi.vn"&gt;pymi&lt;/a&gt; và đọc &lt;a href="https://faq.pymi.vn/"&gt;PYMI interview
FAQs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Phỏng vấn là một kỹ năng, giống như code, để giỏi, cần phải rèn luyện nhiều.
Phỏng vấn là một cuộc đấu trí, thậm chí chẳng có câu hỏi kỹ thuật chi tiết nào
được đưa ra mà ứng viên vẫn hoàn thành xuất sắc cuộc phỏng vấn.&lt;/p&gt;
&lt;p&gt;Nếu lần đầu đi nộp CV, hãy rải thảm tất cả các công ty, hãy đi phỏng vấn thật
nhiều, trượt thật nhiều, rút kinh nghiệm, rồi sau 10 lần phỏng vấn, kiểu gì
chả trúng 1. Còn nếu đã đi làm, trừ khi ấm chỗ leader/trưởng phòng/giám đốc/CTO/
CBE thì mỗi mùa xuân hạ thu đông cũng nên đi phỏng vấn 1 lần để biết trình độ
mình ở đâu, và đáng giá được bao nhiêu nào.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="interview"></category><category term="xin việc"></category><category term="phỏng vấn"></category><category term="HR"></category><category term="HH"></category></entry><entry><title>Dùng Python như các CLI tool</title><link href="http://pp.pymi.vn/article/pycli/" rel="alternate"></link><published>2020-03-24T00:00:00+07:00</published><updated>2020-03-24T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-03-24:/article/pycli/</id><summary type="html">&lt;p&gt;Python vốn được dùng để viết script, code trong file nhưng vẫn tỏa sáng khi gõ trong command line&lt;/p&gt;</summary><content type="html">&lt;p&gt;Những "hacker" trên dòng lệnh luôn gõ nhoay nhoáy các &lt;a href="https://www.familug.org/search/label/CLI"&gt;"command
line"&lt;/a&gt; để xử lý text: &lt;a href="https://www.familug.org/search/label/CCGU"&gt;grep, cut,
uniq, sort,...&lt;/a&gt; hay đôi khi chơi hẳn
sed hoặc &lt;a href="https://pp.pymi.vn/article/awk/"&gt;AWK&lt;/a&gt;, thậm chí Perl5.&lt;/p&gt;
&lt;p&gt;Thời xưa, Perl5 vốn là công cụ số một của các
&lt;a href="https://www.familug.org/2015/01/e-tro-thanh-linux-sysadmin.html"&gt;SysAdmin&lt;/a&gt;,
khi mà Python vẫn chưa phổ biến do quá sạch đẹp nhưng cũng hơi "dài dòng" (so
với Perl). Muốn làm gì với Python cũng phải viết ra 1 file, rồi chmod
a+x rồi mới chạy được. Perl thì có cả ngàn phép biến hóa chỉ bằng 1 dòng, gọi
là &lt;a href="https://duckduckgo.com/?q=perl+one-liners&amp;amp;t=ffab&amp;amp;ia=web"&gt;one-liner&lt;/a&gt; hay
trên &lt;a href="https://en.wikipedia.org/wiki/One-liner_program#Perl"&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;perl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lne&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;print if $_ eq reverse&amp;#39;&lt;/span&gt; &lt;span class="sr"&gt;/usr/s&lt;/span&gt;&lt;span class="n"&gt;hare&lt;/span&gt;&lt;span class="sr"&gt;/dict/&lt;/span&gt;&lt;span class="n"&gt;american&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;english&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;1 dòng trên để tìm ra các từ "palindrome' (ngược xuôi như nhau).&lt;/p&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;h3&gt;Python 1-liner&lt;/h3&gt;
&lt;p&gt;Python 1-liner vốn không ngắn như mong đợi, do code Python
nhấn mạnh vào sự rõ ràng dễ đọc, nên không có các ký tự bí hiểm &lt;code&gt;$_&lt;/code&gt; như Perl. Viết
Python 1 dòng dùng option &lt;code&gt;-c&lt;/code&gt; như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;import math; print(math.sqrt(2**1000))&amp;#39;&lt;/span&gt;
&lt;span class="mf"&gt;3.273390607896142e+150&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các dòng không cần phải xuống dòng mà dùng dấu &lt;code&gt;;&lt;/code&gt; để ngăn cách. Nhưng viết
&lt;code&gt;for&lt;/code&gt; hay &lt;code&gt;if&lt;/code&gt; thì ... hơi khó.&lt;/p&gt;
&lt;h3&gt;Python nhiều dòng&lt;/h3&gt;
&lt;p&gt;Cách này đơn giản hơn, viêt code thành nhiều dòng, ý hệt như code trong file. Dùng dấu single quote &lt;code&gt;'&lt;/code&gt; rồi enter để gõ code, sau đó kết thúc bằng dầu single quote &lt;code&gt;'&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;45&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ví dụ sau lấy ra Shell của user &lt;code&gt;root&lt;/code&gt; ghi trong file /etc/passwd, viết HOA:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BIN&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BASH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hay đếm số ký tự kết quả trên bằng lệnh &lt;code&gt;wc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39; | wc -c&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Không phải 1 dòng, nhưng đẹp hơn 1 dòng, và hoàn toàn hợp lý.&lt;/p&gt;
&lt;p&gt;Ví dụ khác để in JSON đẹp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{&amp;quot;name&amp;quot;: &amp;quot;PyMIers&amp;quot;, &amp;quot;year&amp;quot;: 2020}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyMIers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hay dùng module có sẵn:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{&amp;quot;name&amp;quot;: &amp;quot;PyMIers&amp;quot;, &amp;quot;year&amp;quot;: 2020}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tool&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PyMIers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2020&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hoặc tìm các Palindromes trong file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39; &amp;lt; /usr/share/dict/american-english | head -5&lt;/span&gt;
&lt;span class="n"&gt;ada&lt;/span&gt;
&lt;span class="n"&gt;ana&lt;/span&gt;
&lt;span class="n"&gt;anna&lt;/span&gt;
&lt;span class="n"&gt;ara&lt;/span&gt;
&lt;span class="n"&gt;ava&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cách khác:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fileinput&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fileinput&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39; /usr/share/dict/american-english | head -3&lt;/span&gt;
&lt;span class="n"&gt;ada&lt;/span&gt;
&lt;span class="n"&gt;ana&lt;/span&gt;
&lt;span class="n"&gt;anna&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Thử thách&lt;/h3&gt;
&lt;p&gt;Viết lại ví dụ sau chỉ dùng các command line, không dùng Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BIN&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BASH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Pro tips&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;trong code không dùng dấu &lt;code&gt;'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;không được gõ sai&lt;/strong&gt; vì sửa lại hơi mệt, nếu không có khả năng này,
  hãy viết code vào file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Python dài và chất, đừng ngại dùng khi gõ CLI.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="CLI"></category></entry><entry><title>Lib requests có gì hay mà dùng thay urllib</title><link href="http://pp.pymi.vn/article/requests/" rel="alternate"></link><published>2020-03-18T00:00:00+07:00</published><updated>2020-03-18T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-03-18:/article/requests/</id><summary type="html">&lt;p&gt;Giải mã thành công của thư viện được dùng nhiều nhất trong Python&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python là một ngôn ngữ già, có thể bạn chưa biết, &lt;a href="https://www.familug.org/2016/02/python-python-tuoi-gi.html"&gt;Python tuổi
dê&lt;/a&gt;
Python ra đời &lt;a href="https://en.wikipedia.org/wiki/History_of_the_World_Wide_Web#1980%E2%80%931991:_Invention_and_implementation"&gt;từ thời mới có
HTTP&lt;/a&gt;,
và nổi tiếng là &lt;a href="https://xkcd.com/353/"&gt;hỗ trợ tận răng&lt;/a&gt;, nên không
có gì lạ nếu Python có kèm sẵn thư viện standard để thực hiện HTTP request
với tên &lt;code&gt;urllib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Vậy nhưng khi lên mạng tìm kiếm hay hỏi quanh đây: &lt;strong&gt;dùng gì để gọi HTTP
trong Python?&lt;/strong&gt;, câu trả lời phần lớn đều là cài: &lt;code&gt;pip install requests&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Requests không phải có từ ngày Python xuất hiện, nhưng vào thời Python 2.6 2.7
(cỡ 2012-2013), requests đã rất phổ biến, ví dụ như câu trả lời &lt;a href="https://stackoverflow.com/a/15869929/807703"&gt;trên
StackOverFlow năm 2013&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Requests (có chữ s) xuất hiện với một API cực kỳ thân thiệt, với motto (khẩu
hiệu):
&lt;strong&gt;Python HTTP for Humans&lt;/strong&gt; do &lt;code&gt;urllib&lt;/code&gt; có sẵn trong Python2 quá rắc rối.
API của requests nổi tiếng đến mức &lt;a href="https://github.com/levigross/grequests"&gt;gần như ngôn ngữ lập trình nào cũng
có một thư viện "nhái" requests của
Python&lt;/a&gt;, nó quá đơn giản, tới mức
... trước đây không thư viện nào từng làm vậy.&lt;/p&gt;
&lt;p&gt;(API của thư viện là các function mà thư viện đó public cho người dùng sử dụng,
ví dụ requests có: requests.get, requests.post.)&lt;/p&gt;
&lt;p&gt;&lt;img alt="requests logo" src="https://raw.githubusercontent.com/psf/requests/master/ext/requests-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;Sau gần chục năm phát triển, &lt;code&gt;requests&lt;/code&gt; giờ đã nằm dưới mái nhà &lt;a href="https://github.com/psf/requests/"&gt;Python Software
Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Với các tính năng được quảng cáo ở bản &lt;a href="https://github.com/psf/requests/tree/v1.0.0"&gt;v1.0.0, cuối năm 2012&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;International&lt;/span&gt; &lt;span class="n"&gt;Domains&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;URLs&lt;/span&gt;
    &lt;span class="n"&gt;Keep&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Alive&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Pooling&lt;/span&gt;
    &lt;span class="n"&gt;Sessions&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Cookie&lt;/span&gt; &lt;span class="n"&gt;Persistence&lt;/span&gt;
    &lt;span class="n"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="n"&gt;SSL&lt;/span&gt; &lt;span class="n"&gt;Verification&lt;/span&gt;
    &lt;span class="n"&gt;Basic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Digest&lt;/span&gt; &lt;span class="n"&gt;Authentication&lt;/span&gt;
    &lt;span class="n"&gt;Elegant&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;Cookies&lt;/span&gt;
    &lt;span class="n"&gt;Automatic&lt;/span&gt; &lt;span class="n"&gt;Decompression&lt;/span&gt;
    &lt;span class="n"&gt;Unicode&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt; &lt;span class="n"&gt;Bodies&lt;/span&gt;
    &lt;span class="n"&gt;Multipart&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;Uploads&lt;/span&gt;
    &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Timeouts&lt;/span&gt;
    &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;safety&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Có thể dễ đoán rằng những tính năng được quảng cáo trên chính là những gì
&lt;code&gt;urllib&lt;/code&gt; Python thời đó chưa hỗ trợ (trong Python còn có cả thư viện tên
&lt;code&gt;urllib2&lt;/code&gt;... để thêm phần phức tạp). Nhưng với Python 3.5 trở đi, rất nhiều
trong số trên đã được hỗ trợ trong &lt;code&gt;urllib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Còn đây là các tính năng được quảng cáo ở &lt;a href="https://github.com/psf/requests/blob/v2.23.0/README.md#supported-features--bestpractices"&gt;phiên bản mới nhất&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;Keep&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Alive&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Pooling&lt;/span&gt;
    &lt;span class="n"&gt;International&lt;/span&gt; &lt;span class="n"&gt;Domains&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;URLs&lt;/span&gt;
    &lt;span class="n"&gt;Sessions&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Cookie&lt;/span&gt; &lt;span class="n"&gt;Persistence&lt;/span&gt;
    &lt;span class="n"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="n"&gt;SSL&lt;/span&gt; &lt;span class="n"&gt;Verification&lt;/span&gt;
    &lt;span class="n"&gt;Automatic&lt;/span&gt; &lt;span class="n"&gt;Content&lt;/span&gt; &lt;span class="n"&gt;Decoding&lt;/span&gt;
    &lt;span class="n"&gt;Basic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Digest&lt;/span&gt; &lt;span class="n"&gt;Authentication&lt;/span&gt;
    &lt;span class="n"&gt;Elegant&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="n"&gt;Cookies&lt;/span&gt;
    &lt;span class="n"&gt;Automatic&lt;/span&gt; &lt;span class="n"&gt;Decompression&lt;/span&gt;
    &lt;span class="n"&gt;Unicode&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt; &lt;span class="n"&gt;Bodies&lt;/span&gt;
    &lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Proxy&lt;/span&gt; &lt;span class="n"&gt;Support&lt;/span&gt;
    &lt;span class="n"&gt;Multipart&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;Uploads&lt;/span&gt;
    &lt;span class="n"&gt;Streaming&lt;/span&gt; &lt;span class="n"&gt;Downloads&lt;/span&gt;
    &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Timeouts&lt;/span&gt;
    &lt;span class="n"&gt;Chunked&lt;/span&gt; &lt;span class="n"&gt;Requests&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;netrc&lt;/span&gt; &lt;span class="n"&gt;Support&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu bạn đọc các tính năng này mà không hiểu gì, thì nó chỉ chứng minh một điều
là HTTP là một giao thức rất lằng nhằng và phức tạp.
Đáng kể nhất có:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Browser-style SSL Verification: liên quan tới SSL - tức là bảo mật. &lt;code&gt;urllib&lt;/code&gt;
mãi tới &lt;a href="https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection"&gt;Python 3.4.3 mới thực hiện kiểm tra SSL một cách mặc
định&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Changed in version 3.4.3: This class now performs all the necessary
certificate and hostname checks by default. To revert to the previous,
unverified, behavior ssl._create_unverified_context() can be passed to
the context parameter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Connection Pooling: bình thường khi viết code truy cập vào 1 website, ta
có thể nghĩ đơn giản là requests.get rồi lấy kết quả là xong chuyện, hết phiên.
Nếu muốn truy cập trang khác cùng website đó, ta lại requests.get để truy cập
mới. Phía dưới &lt;code&gt;requests.get&lt;/code&gt; thực hiện tạo 1 &lt;code&gt;TCP connection&lt;/code&gt;, sau đó mới gửi
&lt;code&gt;HTTP request&lt;/code&gt; qua &lt;code&gt;connection&lt;/code&gt; này. Việc tạo
connection là công việc khá tốn kém (CPU, thời gian), đặc biệt với HTTPS,
tạo SSL connection còn tốn hơn nhiều lần. Do vậy, để
tăng hiệu năng, requests sẽ tự giữ lại &lt;code&gt;connection&lt;/code&gt; và dùng lại để truy cập
website nếu như các yêu cầu sau đó cùng website, khác page. Xem code tại
&lt;a href="https://github.com/psf/requests/blob/v2.23.0/requests/adapters.py#L129"&gt;adapters.py&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Việc này ảnh hưởng tới hiệu năng, nhưng không ảnh hưởng gì nếu bạn chỉ gọi
1 request tới mỗi website.&lt;/p&gt;
&lt;h2&gt;Đọc code requests&lt;/h2&gt;
&lt;p&gt;Lib &lt;code&gt;requests&lt;/code&gt; thuộc loại nhỏ, tổng cộng 5000 dòng gồm rất nhiều comment.
Nó tận dụng các thư viện ngoài khác thay vì tự làm
tất cả: &lt;code&gt;urllib3&lt;/code&gt; để thực hiện connection pooling, thực hiện HTTP requests,
dùng &lt;code&gt;certifi&lt;/code&gt; để cung cấp các SSL certificate mới nhất như các trình duyệt.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ wc -l *&lt;span class="p"&gt;|&lt;/span&gt; sort -nr
wc: __pycache__: Is a directory
   &lt;span class="m"&gt;5049&lt;/span&gt; total
    &lt;span class="m"&gt;982&lt;/span&gt; utils.py
    &lt;span class="m"&gt;954&lt;/span&gt; models.py
    &lt;span class="m"&gt;767&lt;/span&gt; sessions.py
    &lt;span class="m"&gt;549&lt;/span&gt; cookies.py
    &lt;span class="m"&gt;533&lt;/span&gt; adapters.py
    &lt;span class="m"&gt;305&lt;/span&gt; auth.py
    &lt;span class="m"&gt;161&lt;/span&gt; api.py
    &lt;span class="m"&gt;131&lt;/span&gt; __init__.py
    &lt;span class="m"&gt;126&lt;/span&gt; exceptions.py
    &lt;span class="m"&gt;123&lt;/span&gt; status_codes.py
    &lt;span class="m"&gt;119&lt;/span&gt; help.py
    &lt;span class="m"&gt;105&lt;/span&gt; structures.py
     &lt;span class="m"&gt;72&lt;/span&gt; compat.py
     &lt;span class="m"&gt;42&lt;/span&gt; _internal_utils.py
     &lt;span class="m"&gt;34&lt;/span&gt; hooks.py
     &lt;span class="m"&gt;18&lt;/span&gt; certs.py
     &lt;span class="m"&gt;14&lt;/span&gt; __version__.py
     &lt;span class="m"&gt;14&lt;/span&gt; packages.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Phần API đơn giản lừng danh nằm trong file &lt;code&gt;api.py&lt;/code&gt;, trích bỏ comment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sessions&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# By using the &amp;#39;with&amp;#39; statement we are sure the session is closed, thus we&lt;/span&gt;
    &lt;span class="c1"&gt;# avoid leaving sockets open which can trigger a ResourceWarning in some&lt;/span&gt;
    &lt;span class="c1"&gt;# cases, and look like a memory leak in others.&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;sessions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow_redirects&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow_redirects&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;allow_redirects&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;put&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;patch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urllib3&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://urllib3.readthedocs.io/en/latest/"&gt;&lt;code&gt;urllib3&lt;/code&gt;&lt;/a&gt; là dependency quan trọng
của &lt;code&gt;requests&lt;/code&gt;, nó đảm nhận những công việc nặng nề:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;urllib3 brings many critical features that are missing from the Python
standard libraries:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Thread&lt;/span&gt; &lt;span class="n"&gt;safety&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;pooling&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="n"&gt;SSL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;TLS&lt;/span&gt; &lt;span class="n"&gt;verification&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;uploads&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;multipart&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Helpers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;retrying&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;dealing&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt; &lt;span class="n"&gt;redirects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Support&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;deflate&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Proxy&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;SOCKS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code mẫu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PoolManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://httpbin.org/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;User-agent: *&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;Disallow: /deny&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;urllib&lt;/h2&gt;
&lt;p&gt;urllib và urllib2 thời Python2.7 là những em gái dính lời nguyền mà ai cũng
muốn tha thứ. Nhưng ở Python 3.6+, việc dùng urllib không còn quá phức tạp,
hãy coi nó như 1 file, nhớ đóng file, hoặc dùng &lt;code&gt;with&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;urllib đã kiểm tra SSL certificate&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.6.9&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Nov&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;8.3.0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://dantri.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/usr/lib/python3.6/urllib/request.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1318&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;do_open&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_sslobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_handshake&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SSL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CERTIFICATE_VERIFY_FAILED&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;852&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;URLError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URLError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SSL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CERTIFICATE_VERIFY_FAILED&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;852&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Kết quả tương tự khi dùng &lt;code&gt;requests&lt;/code&gt; do URL &lt;code&gt;https://dantri.com&lt;/code&gt; SSL certificate
đẫ hết hạn &lt;code&gt;Expire: January 19, 2020&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://dantri.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/hvn/py3/lib/python3.6/site-packages/urllib3/connectionpool.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;672&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/usr/lib/python3.6/ssl.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;689&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;do_handshake&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_sslobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_handshake&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SSL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CERTIFICATE_VERIFY_FAILED&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;852&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urllib redirect ngon lành&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://gmail.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;https://accounts.google.com/ServiceLogin?service=mail&amp;amp;passive=true&amp;amp;rm=false&amp;amp;continue=https://mail.google.com/mail/&amp;amp;ss=1&amp;amp;scc=1&amp;amp;ltmpl=default&amp;amp;ltmplcache=2&amp;amp;emr=1&amp;amp;osid=1&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://gmail.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;https://accounts.google.com/ServiceLogin?service=mail&amp;amp;passive=true&amp;amp;rm=false&amp;amp;continue=https://mail.google.com/mail/&amp;amp;ss=1&amp;amp;scc=1&amp;amp;ltmpl=default&amp;amp;ltmplcache=2&amp;amp;emr=1&amp;amp;osid=1&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urllib với JSON API&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://httpbin.org/ip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;origin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;171.247.169.69&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;   &lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://httpbin.org/post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;           &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Pymi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;since&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;           &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;           &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Pymi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;since&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Tra cứu thông tin COVID-19&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://corona-stats.online/IT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;╔═══════╤═══════╤═══════════╤═══════════╤════════╤════════╤═════════════╤═════════════╤═════════╤══════════╗&lt;/span&gt;
&lt;span class="err"&gt;║&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Confirmed&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Recovered&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Deaths&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Active&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Mortality&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Recovered&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;Day&lt;/span&gt; &lt;span class="err"&gt;▲&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;Week&lt;/span&gt; &lt;span class="err"&gt;▲&lt;/span&gt; &lt;span class="err"&gt;║&lt;/span&gt;
&lt;span class="err"&gt;╟───────┼───────┼───────────┼───────────┼────────┼────────┼─────────────┼─────────────┼─────────┼──────────╢&lt;/span&gt;
&lt;span class="err"&gt;║&lt;/span&gt; &lt;span class="n"&gt;Italy&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt;    &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;506&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;941&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;503&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;062&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt;        &lt;span class="mf"&gt;7.94&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt;        &lt;span class="mf"&gt;9.33&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;526&lt;/span&gt; &lt;span class="err"&gt;▲&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;357&lt;/span&gt; &lt;span class="err"&gt;▲&lt;/span&gt; &lt;span class="err"&gt;║&lt;/span&gt;
&lt;span class="err"&gt;╚═══════╧═══════╧═══════════╧═══════════╧════════╧════════╧═════════════╧═════════════╧═════════╧══════════╝&lt;/span&gt;

&lt;span class="n"&gt;Stay&lt;/span&gt; &lt;span class="n"&gt;safe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Stay&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sagarkarira&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;coronavirus&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tracker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cli&lt;/span&gt;
&lt;span class="n"&gt;Twitter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ekrysis&lt;/span&gt;

&lt;span class="n"&gt;Last&lt;/span&gt; &lt;span class="n"&gt;Updated&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Mar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2020&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;Có thể dùng &lt;code&gt;urllib&lt;/code&gt; khi script/chương trình chỉ truy cập mỗi website
một lần, dùng trong các script ngắn, hay khi không tiện cài &lt;code&gt;requests&lt;/code&gt;.
Nhớ sử dụng &lt;a href="https://requests.readthedocs.io/en/v2.9.1/user/advanced/#session-objects"&gt;&lt;code&gt;requests&lt;/code&gt; Session&lt;/a&gt;
khi truy cập 1 website nhiều lần để tăng hiệu năng.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Requests thành công vì sự đơn giản không thể hơn của nó, chứ không phải vì
kỹ thuật cao siêu phức tạp.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A designer knows he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away.
The New Hacker's Dictionary - Eric S. Raymond,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nhớ mặc định là dùng &lt;code&gt;requests&lt;/code&gt;, nhưng không bị sốc khi thấy người ta dùng
&lt;code&gt;urllib&lt;/code&gt;.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="requests"></category><category term="urllib"></category><category term="HTTP"></category></entry><entry><title>Django dễ hơn Flask</title><link href="http://pp.pymi.vn/article/djangovsflask/" rel="alternate"></link><published>2020-03-16T00:00:00+07:00</published><updated>2020-03-16T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-03-16:/article/djangovsflask/</id><summary type="html">&lt;p&gt;Flask là một micro-framework, thường được xem như đơn giản hơn Django, nhưng nói vậy mà không phải vậy.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Django và Flask là hai web-framework phổ biến nhất - thành công nhất của Python.
Ngày này, khi nhìn các bảng tuyển dụng, sẽ thường thấy yêu cầu Django để làm web
nhưng Flask dần trở thành công cụ quen thuộc của giới làm data.
Nếu ai có hỏi "nên học cái nào" thì câu trả lời chuẩn nhất chỉ có một: nên học
cả hai.&lt;/p&gt;
&lt;h2&gt;Web framework là gì&lt;/h2&gt;
&lt;p&gt;Một framework là một bộ thư viện, thường gồm nhiều tính năng phục vụ đưa ra
sản phẩm cuối cùng chạm tới người dùng. Ví dụ &lt;code&gt;requests&lt;/code&gt; là một library,
chỉ cung cấp tính năng HTTP client, hay &lt;code&gt;bs4&lt;/code&gt; chỉ cung cấp tính năng bóc tách/
truy cập dữ liệu HTML, hay &lt;code&gt;sqlalchemy&lt;/code&gt; là library giúp truy cập và tương tác
với database, thì Flask/Django cung cấp một bộ khung kèm các "thư viện" để
làm ra một sản phẩm tới tay người dùng (trang web).
Frame trong tiếng Anh có nghĩa là "khung", framework cung cấp cái khung, lập
trình viên điền những thứ mình muốn vào đó, framework sẽ tự lo chạy. Vì vậy
khi dùng framework, sẽ có cảm giác như ta không biết nó hoạt động thế nào,
chỉ biết là điền đúng những thứ yêu cầu thì nó sẽ hoạt động.&lt;/p&gt;
&lt;p&gt;Django là framework đầy đủ (full-fledge), có đủ mọi thứ, nên sẽ càng có thêm
cảm giác ta chỉ điền chút xíu là nó tự chạy, mọi thứ đều có khuôn mẫu sẫn rồi.
Flask là micro-framework, chỉ có phần khung cơ bản, các phần còn lại cho phép
người dùng tùy chọn mà đắp vào, vậy nên có phần dễ hiểu hơn, ít phép màu hơn.&lt;/p&gt;
&lt;p&gt;Cũng vì sự khác biệt này, dẫn tới tài liệu trang chủ của 2 framework viết
rất khác nhau. Flask vào đời bằng một website dùng 7 dòng code, khiến người dùng
rất dễ học, dễ bắt đầu với sự đơn giản này. Còn Django lại dùng ví dụ phức tạp,
mặc định người dùng sẽ cần làm thứ "phức tạp" như vậy nên học thế cho quen.&lt;/p&gt;
&lt;p&gt;Thế nhưng nếu không dựa vào 2 cái tutorial đấy để đánh giá, liệu Django có
phức tạp hơn Flask, hay thậm chí còn đơn giản hơn? Bài nầy sẽ dựa trên 2 yếu
tố để so sánh: 1. số khái niệm bạn cần biết 2. số dòng code bạn cần viết.&lt;/p&gt;
&lt;p&gt;Bắt đầu.&lt;/p&gt;
&lt;h3&gt;Cài đặt&lt;/h3&gt;
&lt;h4&gt;Cài đặt Flask&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install flask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Cài đặt Django&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Kết quả: hòa, dễ như nhau: &lt;code&gt;Flask 1 - Django 1&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Viết một website hello world và hello mình&lt;/h3&gt;
&lt;h4&gt;Flask&lt;/h4&gt;
&lt;p&gt;Tạo 1 file tên bất kỳ nhưng tốt nhất đặt là &lt;code&gt;hello.py&lt;/code&gt; (tuyệt đối không đặt
là &lt;code&gt;flask.py&lt;/code&gt; do trùng tên flask)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;my website&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/hello/&amp;lt;string:name&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chạy, &lt;a href="https://flask.palletsprojects.com/en/1.1.x/quickstart/#a-minimal-application"&gt;theo hướng dẫn trên trang chủ&lt;/a&gt;
(nếu dùng Windows vào xem lệnh tương ứng):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;hello.py
$ flask run
 * Running on http://127.0.0.1:5000/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Điểm ấn tượng nhất ở đây là chỉ có 10 dòng, trong đúng 1 file, mà chạy thành
trang web.&lt;/p&gt;
&lt;p&gt;Tổng số thao tác phải làm: 3 - tạo 1 file, điền nội dung, gõ lệnh để chạy.&lt;/p&gt;
&lt;h4&gt;Django&lt;/h4&gt;
&lt;p&gt;Django không làm web trong 1 file, nó dùng các câu lệnh có sẵn để sinh ra các
file, tức ta chỉ phải gõ lệnh, chứ không phải gõ nhiều code.
Gõ 3 lệnh sau là chạy luôn trang web:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ django-admin startproject project1
$ &lt;span class="nb"&gt;cd&lt;/span&gt; project1/
$ ./manage.py startapp hello
$ ./manage.py runserver
Starting development server at http://127.0.0.1:8000/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ngay lập tức đã có trang web mẫu của Django - thậm chí chưa gõ tí code nào.
Để có kết quả giống Flask ở trên, cần sửa 2 file:&lt;/p&gt;
&lt;p&gt;File &lt;code&gt;hello/views.py&lt;/code&gt;, viết các function tương tự flask:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File &lt;code&gt;project1/urls.py&lt;/code&gt; thêm 3 dòng:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;hello&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;  &lt;span class="c1"&gt;# có sẵn&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;admin/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# có sẵn&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello_world&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello/&amp;lt;str:name&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# có sẵn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giờ chạy &lt;code&gt;./manage runserver&lt;/code&gt; sẽ có kết quả y hệt Flask.&lt;/p&gt;
&lt;h4&gt;So sánh thao tác&lt;/h4&gt;
&lt;p&gt;Tổng số dòng code phải thêm vào Django là 8 - cũng chính bằng số dòng Flask
phải viết - không tính dòng trống. Django phải chạy nhiều hơn 2 lệnh - nhưng
chỉ cần phải làm khi bắt đầu dự án. Flask viết code trong 1 file, còn Django
phải sửa 2 file. ở đây có thể xem như hòa nhau không bên nào hơn/kém quá cả.&lt;/p&gt;
&lt;h4&gt;So sánh khái niệm&lt;/h4&gt;
&lt;p&gt;Phần khác nhau chủ đạo giữa Django và Flask là cách ghi URL.
Người dùng Flask tạo một Flask object, đặt tên là app, sau đó sử dụng
&lt;code&gt;decorator&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;@app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/hello/&amp;lt;string:name&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;để gắn đường dẫn &lt;code&gt;/hello/name&lt;/code&gt; cho function ngay dưới nó (function hello).
Decorator không phải một khái niệm đơn giản ở đây, mặc dù người dùng có thể
cứ nhắm mắt rồi gõ &lt;code&gt;@&lt;/code&gt; theo và hiểu nôm na là gắn đường dẫn cũng được.&lt;/p&gt;
&lt;p&gt;Django chọn giải pháp ghép đường dẫn với function thông qua file &lt;code&gt;urls.py&lt;/code&gt;,
import module &lt;code&gt;views&lt;/code&gt; từ thư mục &lt;code&gt;hello/&lt;/code&gt; (tạo lúc chạy "startapp hello"),
sau đó gán đường dẫn bằng cách gọi function &lt;code&gt;path&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello/&amp;lt;str:name&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dài dòng hơn Flask một chút là phải ghi &lt;code&gt;name="hello"&lt;/code&gt;, không có &lt;code&gt;/&lt;/code&gt; ở đầu URL,
và kiểu &lt;code&gt;str&lt;/code&gt; thì ghi là &lt;code&gt;str&lt;/code&gt; chứ không ghi &lt;code&gt;string&lt;/code&gt; như Flask.&lt;/p&gt;
&lt;p&gt;Khi mới bắt đầu, khó có thể thấy lý do Django viết riêng file &lt;code&gt;urls.py&lt;/code&gt; để làm
gì, khi mà flask @ lên đầu rất gọn ghẽ. Thì tới lúc có 20 URL bạn sẽ hiểu tại
sao. Làm thế nào để liệt kê tất cả URL trong app của mình? Các URL của Flask
rải rác khắc nơi, mỗi cái nằm trên đầu 1 function, nếu như mỗi function dài 50
dòng, thì việc tìm sẽ khá vất vả - hoặc phải dùng chức năng tìm kiếm, hoặc phải
có IDE để hỗ trợ. Còn với Django tất cả đều nằm gọn trong &lt;code&gt;urls.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Không hiểu tại sao Flask lại chọn &lt;code&gt;string&lt;/code&gt; để ám chỉ kiểu string trong Python,
vốn viết là &lt;code&gt;str&lt;/code&gt;, Django lại ghi thêm điểm ở đây.&lt;/p&gt;
&lt;p&gt;Có thể bạn đã biết, rằng không nhất thiết phải dùng &lt;code&gt;@&lt;/code&gt; trong Flask,
bởi decorator này chỉ làm đơn giản có 1 việc: giống Django. Thay vì viết hai
dòng &lt;code&gt;@app.route&lt;/code&gt; trên đầu function, viết hai dòng này SAU khi định nghĩa
các function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;app.add_url_rule(&amp;quot;/&amp;quot;, &amp;quot;hello_world&amp;quot;, hello_world)
app.add_url_rule(&amp;quot;/hello/&amp;lt;string:name&amp;gt;&amp;quot;, &amp;quot;hello&amp;quot;, hello)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đây chính làm điều mà &lt;code&gt;@app.route&lt;/code&gt; làm, như mô tả trong tài liệu của nó:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A decorator that is used to register a view function for a
given URL rule.  This does the same thing as :meth:&lt;code&gt;add_url_rule&lt;/code&gt;
but is intended for decorator usage::&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Chốt: Django gõ nhiều hơn 2 lệnh, sửa thêm 1 file, nhưng sử dụng ít khái niệm
cao cấp hơn Flask. Nếu dễ tính, thì cho là hòa, còn không Django dành chiến
thắng ở đây.&lt;/p&gt;
&lt;p&gt;Tỉ số: &lt;code&gt;2 - 2&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Thêm trang dùng template&lt;/h3&gt;
&lt;h4&gt;Flask&lt;/h4&gt;
&lt;p&gt;Tạo 1 thư mục tên &lt;code&gt;templates&lt;/code&gt; ngay cạnh file &lt;code&gt;hello.py&lt;/code&gt;, rồi tạo file
&lt;code&gt;index.html&lt;/code&gt; chứa code HTML và Jinja2 template.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;fw&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;frameworks&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;fw&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;fw&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;fw&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code sửa thành&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;
&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/web&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;frameworks&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;frameworks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Flask&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Django&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Django&lt;/h4&gt;
&lt;p&gt;Tạo thư mục tên &lt;code&gt;templates/hello&lt;/code&gt; trong thư mục
&lt;code&gt;hello&lt;/code&gt;, sau đó tạo &lt;code&gt;index.html&lt;/code&gt; và nội dung copy y hệt phần template của Flask.&lt;/p&gt;
&lt;p&gt;Thêm function sau vào &lt;code&gt;hello/views.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# chú ý render đã được import sẵn ở file view.py ngay khi tạo app&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;frameworks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello/index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;frameworks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Flask&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Django&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và thêm 1 dòng vào &lt;code&gt;project1/urls.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  path(&amp;#39;web&amp;#39;, views.frameworks, name=&amp;#39;frameworks&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ngoài ra phải thêm &lt;code&gt;'hello'&lt;/code&gt; vào file &lt;code&gt;project1/settings.py&lt;/code&gt;
Trong list &lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Phần này lại hòa, template mặc định của Flask là &lt;code&gt;jinja2&lt;/code&gt; tương đương với
Django template, kể cả cú pháp cũng rất giống nhau. Django phải thêm 1
dòng vào file &lt;code&gt;settings.py&lt;/code&gt; nhưng việc này cũng chỉ phải làm một lần duy nhất
(lẽ ra nên làm luôn sau khi createapp từ đầu).&lt;/p&gt;
&lt;h3&gt;Django app&lt;/h3&gt;
&lt;p&gt;Khi chạy lệnh &lt;code&gt;startproject&lt;/code&gt; ban đầu, nó sinh ra các file cần thiết cho một
dự án Django (&lt;code&gt;urls.py&lt;/code&gt;, &lt;code&gt;settings.py&lt;/code&gt;, &lt;code&gt;manager.py&lt;/code&gt; ..., và nó chỉ phải chạy
duy nhất 1 lần trong 1 dự án. Với Flask, bạn tạo thư mục bằng tay.&lt;/p&gt;
&lt;p&gt;Django đưa ra khái niệm có nhiều &lt;em&gt;app&lt;/em&gt; trong một dự án. Flask cũng có khái
niệm tương tự, gọi là &lt;a href="https://flask.palletsprojects.com/en/1.1.x/blueprints/"&gt;Blueprint&lt;/a&gt;.
Nó không cần thiết cho ví dụ 6-10 dòng, nhưng khi làm một website nhiều tính năng
thì blueprint là cách tổ chức chính thức của Flask, ngay cả trong bài tutorial
của Flask cũng dùng luôn khái niệm này. Như vậy chỉ khác nhau việc học trước
hay học sau, chứ không phải Flask thì không dùng tới.&lt;/p&gt;
&lt;p&gt;Flask không ép (không hướng dẫn) người dùng cách tổ chức code, khi dự án lớn
dần lên, có 3-5000 dòng code, ắt phải sinh ra file mới, phải sắp xếp, tổ chức
sao cho hợp lý - mà thế nào là hợp lý thì không phải ai cũng tìm ngay ra cách.
Dự án Flask khi rơi vào tay lập trình viên chưa có nhiều kinh nghiệm làm web
sẽ dẫn tới code mỗi thứ một nơi, đi tìm cũng thấy mệt. Flask không hướng dẫn
người dùng ngay từ đầu, nếu gặp phải người chưa có kinh nghiệm tổ chức, sẽ
trở thành vô tổ chức.&lt;/p&gt;
&lt;p&gt;Django bắt đầu bằng việc đặt mỗi thứ vào một nơi quy định sẵn, ban đầu có vẻ
hơi phiền phức, nhưng sự gọn gàng ngăn nắp sẽ trả lợi ích rõ ràng về sau.
Bạn có thể xem 10 dự án Django, cấu trúc đều như nhau, như mẫu của Django,
thì 10 dự án Flask mỗi cái một kiểu.&lt;/p&gt;
&lt;p&gt;Tỉ số: Flask 2 - Django 3&lt;/p&gt;
&lt;h3&gt;Thêm Database, thêm tính năng đăng nhập, thêm trang admin&lt;/h3&gt;
&lt;p&gt;Đến đây, việc của người dùng Django là mở tài liệu ra, đọc phần model, đọc phần
admin page rồi làm theo hướng dẫn, đầy đủ hàng trăm tính năng có sẵn, thì
người dùng Flask lại phải lo đi tìm:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dùng database nào? nếu dùng MySQL thì dùng driver nào?&lt;/li&gt;
&lt;li&gt;có dùng ORM không? nếu có thì phải học SQLAlchemy, tương đương với học Django ORM&lt;/li&gt;
&lt;li&gt;dùng SQLAlchemy rồi có phải dùng flask-sqlalchemy không (có).&lt;/li&gt;
&lt;li&gt;khi đổi schema table (thêm/bớt/sửa cột trong 1 SQL table) thì phải làm thế nào?
  MigrateDB thì dùng cái gì? (Flask-Migrate / alembic)&lt;/li&gt;
&lt;li&gt;Viết trang admin (ví dụ website quản lý sinh viên thì đây là trang để thêm/bớt/sửa/xóa sinh viên)
  thì viết ra sao (có thể dùng flask-admin)&lt;/li&gt;
&lt;li&gt;Đăng nhập thì làm thế nào? (flask-httpauth)&lt;/li&gt;
&lt;li&gt;Nhập/validate form thì dùng cái chi? (WTForm)&lt;/li&gt;
&lt;li&gt;... tiếp tục ...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=AdfSLq7XNoI" title="Tìm"&gt;&lt;img alt="Tìm MIN" src="http://img.youtube.com/vi/AdfSLq7XNoI/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tỉ số: Flask 2 - Django 4&lt;/p&gt;
&lt;h3&gt;Kết quả&lt;/h3&gt;
&lt;p&gt;Hòa.&lt;/p&gt;
&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pip install django&lt;/code&gt; dùng ngay và luôn thôi.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Bài này không nói Django hoàn hảo, dùng cho mọi trường hợp. Ví dụ nếu
website của bạn không dùng database, không cần trang admin (như web của data
science) thì Flask nhanh, nhẹ hơn Django nhiều phần. Hay khi bạn biết mình đang
làm gì, biết đủ những thư viện để dùng ghép lại xịn hơn cả những gì Django
có sẵn, thì Flask là lựa chọn tuyệt hảo. Flask không phải đồ chơi, &lt;a href="https://eng.uber.com/building-tincup-microservice-implementation/"&gt;phần
core của Uber đã từng được viết bằng
Flask&lt;/a&gt;,
&lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt; - công cụ không thể thiếu trong các hệ
thống data cũng chính là một sản phẩm dùng Flask. Vậy nên, hãy học cả 2, nhé.
Và nhớ là, Django không hề khó như bạn tưởng.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="django"></category><category term="flask"></category></entry><entry><title>black - quên đi nỗi lo PEP8</title><link href="http://pp.pymi.vn/article/black/" rel="alternate"></link><published>2020-03-15T00:00:00+07:00</published><updated>2020-03-15T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-03-15:/article/black/</id><summary type="html">&lt;p&gt;Viết code Python thì phải chuẩn PEP8, nếu nó tự chuẩn thì sao? yeah!!!&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Code Python phải chuẩn PEP8&lt;/h2&gt;
&lt;p&gt;Ngay khi bạn mới làm quen với Python được vài tuần, mới biết tí for loop hay
function, PEP8 từ đâu đó sẽ hiện ra.
PEP8 là hướng dẫn viết code chuẩn Python, chứ không phải chuẩn C, Java, hay
không có chuẩn nào cả.
Nếu tự hoc code một mình, có khi giờ này bạn đã làm ra vài chục script, chạy
ầm ầm mà vẫn chưa 1 lần nghe PEP8. Tiêu chuẩn code là thứ chỉ hiện ra rõ ràng,
khi ta làm việc với người khác, chỉ sau vài function, sự mâu thuẫn về style
sẽ hiện ra ngay, và khi ông Chí Phèo không đồng ý với style của Bá Kiến, thì
cả 2 phải lên phường và thống nhất dùng chuẩn chung mà làng Vũ Đại đặt ra - hay
ở đây ta gọi là PEP8.&lt;/p&gt;
&lt;p&gt;PEP8 có thể xem chi tiết tại &lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;PEP0008&lt;/a&gt;
hay &lt;a href="https://pep8.org/"&gt;https://pep8.org/&lt;/a&gt;,
tiêu chuẩn PEP8 được chấp nhận trên toàn trái đất, thậm chí &lt;a href="https://medium.com/pymi/cia-d%C3%B9ng-python-r%E1%BA%A5t-nhi%E1%BB%81u-32144ecddd50"&gt;CIA&lt;/a&gt;,
Google cũng
chỉ sửa đi chút xíu, bởi nó là chuẩn hay, chuẩn tốt.&lt;/p&gt;
&lt;h2&gt;Chuyện đau đầu về xì tai (style)&lt;/h2&gt;
&lt;p&gt;Style vốn là một thứ dễ gây ra tranh cãi. Tôi thích kiểu Việt Nam dịu dàng,
anh thích kiểu Pháp say đắm, ông kia thích kiểu Mỹ mạnh mẽ và hùng hục. Vậy
ai là người sai?
Cuộc tranh cãi về style viết code đã kéo dài suốt từ ngày lập trình xuất hiện,
tới giờ vẫn chưa kết thúc. Bởi đã là style, thì khó nói chuyện đúng sai.&lt;/p&gt;
&lt;p&gt;Thế rồi mọi cuộc chơi vui, cũng phải đến hồi kết. Một ngôn ngữ lập trình đơn
giản xuất hiện với tên hai chữ &lt;code&gt;Go&lt;/code&gt; (sau để tránh nhầm lẫn thì gọi là Golang),
và để tăng thêm sự đơn giản, nó đi kèm
sẵn một chương trình với tên &lt;code&gt;gofmt&lt;/code&gt; (đọc là gâu phằm) - chương trình này sẽ
format tất cả code trong thư mục về một chuẩn mà nó đã quy định. Ban đầu,
người ta vẫn còn tranh cãi về việc bị ép style, nhưng rồi sau một hồi, lợi ích
của mỗi cái tôi đã sụp đổ trước lợi ích tập thể mà &lt;code&gt;gofmt&lt;/code&gt; mang lại: mọi đoạn
code đều trông giống nhau, khiến style không còn gì để tranh cãi, lập trình viên
nhìn code của thằng kia cũng giống như của mình, dễ đọc - dễ hiểu hơn, expert
hay newbie đều chung 1 style cả.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gofmt&lt;/code&gt; không phải là chương trình đầu tiên làm vậy, trước đây, trong cộng
đồng Python đã xuất hiện 1 chương trình tên &lt;code&gt;autopep8&lt;/code&gt; hay Google cũng có
&lt;a href="https://github.com/google/yapf"&gt;YAPF&lt;/a&gt;. Nhưng &lt;code&gt;Go&lt;/code&gt; là ngôn ngữ đầu tiên mang
code formatter vào chính thống, chính thức chấm dứt cuộc chiến vô bổ về style
kéo dài vài thập kỷ. Để rồi từ đó, các ngôn ngữ lập trình khác đua nhau học theo
như &lt;a href="https://github.com/rust-lang/rustfmt"&gt;Rust&lt;/a&gt;,
&lt;a href="https://elixir-lang.org/blog/2018/01/17/elixir-v1-6-0-released/"&gt;Elixir&lt;/a&gt;
và Python thì có &lt;a href="https://github.com/psf/black"&gt;black&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Không có giải pháp nào để giải quyết 1 vấn đề tốt hơn là làm cho nó biến mất.&lt;/p&gt;
&lt;h2&gt;black là gì&lt;/h2&gt;
&lt;p&gt;Black là một câu lệnh cài bằng pip: &lt;code&gt;pip install black&lt;/code&gt;, yêu cầu Python3.6 trở
lên mới chạy. &lt;code&gt;black&lt;/code&gt; xuất hiện như một project của một lập trình viên nào đó
trên in tơ nét, sau vài năm trở nên cực kỳ phổ biến, và giờ đã chính thức
được nằm dưới mái nhà PSF (Python Software Foundation) cùng với &lt;code&gt;requests&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/psf/black/blob/master/black.py"&gt;https://github.com/psf/black/blob/master/black.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code của black chỉ vọn vẹn 4000 dòng, sử dụng các tính năng mới nhất của Python
như f-string, type annotation, asyncio...
(vì thế nên yêu cầu Python3.6+ để chạy, mặc dù vẫn có thể format code 2.7)&lt;/p&gt;
&lt;h2&gt;Dùng black để format code Python&lt;/h2&gt;
&lt;p&gt;Ví dụ có 1 file foo.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;sum_two&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;,&lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;


    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu thành thạo PEP8, thấy ngay có 4 chỗ phải sửa ở đây:
&lt;code&gt;a,b&lt;/code&gt; thiếu dấu space sau &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; thiếu dấu space theo sau, sau &lt;code&gt;a&lt;/code&gt; thừa 1
space, thừa 1 dòng
trống trước return. Vậy chỉ 3 dòng code, người review phải gõ ra 4 "vấn đề"
về style, và người code ra 3 dòng này, khi đọc review cũng chẳng vui vẻ gì,
kể cả người ta nói đúng.&lt;/p&gt;
&lt;p&gt;Chạy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ black foo.py
reformatted foo.py
All &lt;span class="k"&gt;done&lt;/span&gt;! ✨ 🍰 ✨
&lt;span class="m"&gt;1&lt;/span&gt; file reformatted.

$ cat foo.py
def sum_two&lt;span class="o"&gt;(&lt;/span&gt;a, b&lt;span class="o"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; a + b

    &lt;span class="k"&gt;return&lt;/span&gt; c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đẹp, chuẩn, ngon! Không còn gì mong đợi thêm.
black có nhiều option để chỉnh style cho phù hợp với tiêu chuẩn của bạn,
hay dùng nhất là để set độ dài của 1 dòng, vốn là 79 ký tự theo chuẩn PEP8,
thì black mặc định là 88:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  -l, --line-length INTEGER       How many characters per line to allow.
                                  &lt;span class="o"&gt;[&lt;/span&gt;default: &lt;span class="m"&gt;88&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bạn có thể gọi &lt;code&gt;black -l79 .&lt;/code&gt; để theo PEP8.&lt;/p&gt;
&lt;h2&gt;Hành động của chúng ta&lt;/h2&gt;
&lt;p&gt;Đã đến lúc để quên đi việc format code bằng tay, nhớ vài chục tiêu chuẩn
của PEP8, format code hãy để cho đen (black) không vâu lo - việc này để
đen không vâu lo.
Thêm dòng này vào &lt;code&gt;Makefile&lt;/code&gt; của bạn:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;black&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l79&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hay cài đặt text editor/IDE tự động chạy &lt;code&gt;black&lt;/code&gt; sau mỗi lần save code.&lt;/p&gt;
&lt;p&gt;Thêm dòng sau vào CI để bắt quả tang thằng nào không dùng black:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;black --check .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Black sẽ thông báo các file chưa chuẩn format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ black --check .
would reformat /home/hvn/me/people/content/mypy_simple.py
would reformat /home/hvn/me/people/publishconf.py
would reformat /home/hvn/me/people/pelicanconf.py
would reformat /home/hvn/me/people/fabfile.py
Oh no! 💥 💔 💥
&lt;span class="m"&gt;4&lt;/span&gt; files would be reformatted, &lt;span class="m"&gt;1&lt;/span&gt; file would be left unchanged.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Hãy dùng &lt;code&gt;black&lt;/code&gt;! Và đừng quên share bài viết này, để cộng đồng code Python
không còn mất thời gian ít bổ.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="black"></category><category term="formatter"></category></entry><entry><title>Mypy - là trai hay là gái?</title><link href="http://pp.pymi.vn/article/mypy/" rel="alternate"></link><published>2020-03-10T00:00:00+07:00</published><updated>2020-03-10T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-03-10:/article/mypy/</id><summary type="html">&lt;p&gt;Là bạn hay là bè? là str hay int? Thêm type cho Python code mà không ho, không sốt, không toang.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Vài ba năm gần đây, làng Vũ Trụ rộn lên trào lưu thêm "type" vào các ngôn ngữ lập trình dynamic typing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.php.net/manual/en/functions.arguments.php#functions.arguments.type-declaration"&gt;PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/"&gt;JavaScript|TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python đã già nhưng vẫn đú, cũng không bỏ lỡ cuộc đu trend này.
Kết quả là ngày hôm nay, bạn đã có thể thêm type vào code Python -
nếu muốn - như &lt;a href="https://blogs.dropbox.com/tech/2019/09/our-journey-to-type-checking-4-million-lines-of-python/"&gt;DropBox&lt;/a&gt;, &lt;a href="https://instagram-engineering.com/let-your-code-type-hint-itself-introducing-open-source-monkeytype-a855c7284881"&gt;Instagram&lt;/a&gt;... . Python chính thức thêm &lt;a href="https://www.python.org/dev/peps/pep-0484/"&gt;type hint/type annotation&lt;/a&gt;
vào từ bản 3.5,
chú ý rằng type này không ảnh hưởng/giúp đỡ gì bạn, nếu không sử dụng mypy hay
các IDE.&lt;/p&gt;
&lt;p&gt;Mypy là static type checker - tool giúp phân tích code (static analysis) dựa trên type annotation, dự
án có sự tham gia của tác giả Python - Guido van Rossum, ... và cả &lt;a href="https://github.com/python/mypy/pull/4594"&gt;HVN&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Thêm type để làm gì?&lt;/h2&gt;
&lt;p&gt;Các ngôn ngữ lập trình dynamic typing: Python, JavaScript, PHP, Ruby được
ưa chuộng và luôn chiếm vị trí top các bảng xếp hạng ngôn ngữ lập trình trong
những năm gần đây, hay Clojure, LISP, Erlang, Elixir... dù không lên đỉnh nhưng
vẫn luôn hot.
Dynamic typing giúp code trở nên ngắn gọn và linh hoạt.
Vậy thêm type (kiểu) làm gì? không lẽ để dài hơn và bớt linh hoạt hơn?&lt;/p&gt;
&lt;p&gt;Code dài dòng thêm thì rõ là không ai muốn, bởi nếu muốn đã quay về viết Java
hết rồi, nhưng bớt linh hoạt hơn là một mục đích đáng xem xét.&lt;/p&gt;
&lt;p&gt;Khi mọi thứ linh hoạt, nếu không tuân theo các quy tắc, không có kỷ luật cá nhân
tốt, sẽ dẫn tới rối loạn. Hoặc khi hệ thống trở nên phức tạp hơn,
nhiều tính năng phụ thuộc vào nhau, cũng dẫn tới việc không kiểm soát được.&lt;/p&gt;
&lt;p&gt;Điều này sẽ dễ thấy hơn khi tham gia một dự án có nhiều lập trình viên.
Một team 5 Python dev làm việc đã quen với nhau, code
cùng chuẩn PEP8, cùng không thích OOP, ... hay nói cách khác là một team thực
thụ, sẽ code nhanh như tên lửa, vài giờ một tính năng, bay vèo vèo như
&lt;a href="https://books.google.com.vn/books?id=eulODwAAQBAJ&amp;amp;lpg=PA136&amp;amp;dq=google+video+vs+youtube+python+story&amp;amp;pg=PA136&amp;amp;redir_esc=y#v=onepage&amp;amp;q=google%20video%20vs%20youtube%20python%20story&amp;amp;f=false"&gt;YouTube dev&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Một nhóm người khác với 5 lập trình viên, học
lập trình từ các nguồn khác nhau, trình độ khác nhau, thậm chí ngôn ngữ thành
thạo cũng khác nhau, nếu làm cùng một dự án sẽ rất rối loạn.
Có chỗ viết 3 class để gọi 1 function cho đúng chuẩn kế thừa, OOP của Java,
có function viết theo kiểu recursive, có chỗ đặt tên biến một chữ cái,
không viết function, một hàm main dài hàng trăm dòng,
function mỗi nhánh trả về một kiểu khác, viết decorator chỉ để dùng 1 lần và
thể hiện, sửa một function rồi các function khác hỏng theo... và hàng trăm thứ
khác có thể sai hơn nữa. Một team như vậy phát
triển sẽ rất chậm, nhiều bug, khó thêm tính năng,
thậm chí gây mệt mỏi, stress khi phải làm việc với nhau. Giải pháp thì lại
không thể là giải tán, cãi nhau, vậy làm gì?&lt;/p&gt;
&lt;p&gt;Type là một phần giải pháp, type giúp đặt ràng buộc rõ ràng đầu vào đầu ra,
đảm bảo một function luôn trả về cùng 1 kiểu dù ở nhánh nào. Function
là kiến trúc cơ bản của 1 chương trình, một hệ thống. Khi function định nghĩa
rõ ràng, các bên tương tác (gọi function) với nhau cũng sẽ rõ ràng.
Nhân viên mới tuyển, sinh viên mới ra trường,
vào sửa function trả về nhầm kiểu sẽ bị type bắt lại ngay.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type là một thứ CÔNG CỤ giúp giảm sự linh hoạt của code, tăng thêm kỷ luật,
đảm bảo code ít bị rối loạn hơn. Nếu code 1 mình, hay bạn chắc chăn mình và
&lt;strong&gt;các đồng nghiệp&lt;/strong&gt; đủ kỷ luật để không viết function trả về các kiểu khác nhau
thì type cũng không cần thiết.&lt;/li&gt;
&lt;li&gt;Type không nên là thứ can thiệp/cản trở nhiều vào mục đích của lập trình viên.
Ta muốn có công cụ trợ giúp, chứ không muốn nó chống lại mình. Type dài dòng
như của Java là một ví dụ điển hình khiến việc viết code cũng trở nên ngại.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Sử dụng mypy&lt;/h2&gt;
&lt;h3&gt;Cài đặt&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install mypy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Ví dụ 1 - đơn giản để bắt đầu&lt;/h4&gt;
&lt;p&gt;Ví dụ 1: đoạn code không có type:&lt;/p&gt;
&lt;p&gt;File &lt;code&gt;mypy_simple.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sum_of_three&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_of_three&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;The answer of life: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chạy mypy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy mypy_simple.py
Success: no issues found &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Không có gì xảy ra, do không function/name nào có type annotation cả.
Mặc định này giúp việc thêm type là tùy ý. Team có thể có người viết type,
có người không ở các function khác nhau, đều OK. Nếu cực nghiêm khắc,
có thể bật chế độ strict lên:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy --strict mypy_simple.py
mypy_simple.py:1: error: Function is missing a &lt;span class="nb"&gt;type&lt;/span&gt; annotation
mypy_simple.py:5: error: Function is missing a &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt; annotation
mypy_simple.py:5: note: Use &lt;span class="s2"&gt;&amp;quot;-&amp;gt; None&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; does not &lt;span class="k"&gt;return&lt;/span&gt; a value
mypy_simple.py:6: error: Call to untyped &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sum_of_three&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; typed context
mypy_simple.py:10: error: Call to untyped &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;main&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; typed context
Found &lt;span class="m"&gt;4&lt;/span&gt; errors &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; file &lt;span class="o"&gt;(&lt;/span&gt;checked &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ở chế độ này, mọi thứ thiếu type annotation đều bị thông báo, đây chỉ là ví dụ
cực đoan, phải tốn khá nhiều công sức và làm quen mới có thể bật chế độ này lên,
vậy nên khó quá tạm thời bỏ qua.&lt;/p&gt;
&lt;p&gt;Thêm type cho đoạn code trong ví dụ 1:
với Python type annotation, ta thường chỉ thêm cho định nghĩa của các function,
ít khi phải khai báo cho các variable. Ví dụ trên có 2 function, sau khi thêm
type vào &lt;code&gt;sum_of_three&lt;/code&gt; sẽ trông như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sum_of_three&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_of_three&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;The answer of life: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3 argument đều có kiểu là &lt;code&gt;: int&lt;/code&gt;, &lt;code&gt;-&amp;gt; int&lt;/code&gt; nói rằng function này
trả về kiểu &lt;code&gt;int&lt;/code&gt;.
Chạy lại lệnh mypy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy mypy_simple.py
Success: no issues found &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vẫn trông như không có gì xảy ra, nhưng thật ra là có, do code của ta không
có vấn đề gì nên mypy cũng không báo gì. Thử đổi trong function &lt;code&gt;main&lt;/code&gt;,
cộng kết quả của &lt;code&gt;sum_of_three&lt;/code&gt; (kiểu int) với một &lt;code&gt;str&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_of_three&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;The answer of life: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu là lập trình viên JavaScript, bạn sẽ mong đợi một kết quả str bình thường,
&lt;code&gt;"The answer of life: 42"&lt;/code&gt;, bởi JavaScript thuộc loại weak typing,
còn Python là strong typing: int là int, str là str, không cộng trừ lẫn lộn.&lt;/p&gt;
&lt;p&gt;Nếu là một PyMier chân chính, bạn sẽ nhận ra ngay đoạn code này gặp exception
khi CHẠY THẬT, do cộng một str với một số int.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python mypy_simple.py
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;mypy_simple.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;12&lt;/span&gt;, &lt;span class="k"&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    main&lt;span class="o"&gt;()&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;mypy_simple.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;8&lt;/span&gt;, &lt;span class="k"&gt;in&lt;/span&gt; main
    &lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;The answer of life: &amp;quot;&lt;/span&gt; + result
TypeError: must be str, not int
Command exited with non-zero status &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vậy ta chỉ biết, khi chạy thật, mà lúc ấy mới biết thì "toang" rồi.
Có cách nào &lt;strong&gt;biết trước&lt;/strong&gt; khi chạy không? Mypy sẽ giúp làm chuyện ấy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy mypy_simple.py
mypy_simple.py:8: error: Unsupported operand types &lt;span class="k"&gt;for&lt;/span&gt; + &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;str&amp;quot;&lt;/span&gt; and &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Found &lt;span class="m"&gt;1&lt;/span&gt; error &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; file &lt;span class="o"&gt;(&lt;/span&gt;checked &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chú ý: việc phân tích function main chỉ xảy ra khi nó có type annotation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Function main không nhận argument, trả về kiểu None. Nếu bỏ &lt;code&gt;-&amp;gt; None&lt;/code&gt; đi,
mypy sẽ không kiểm tra function main.&lt;/p&gt;
&lt;h4&gt;Ví dụ 2 - các containers: list, tuple, dict, set&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;with_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]]:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;with_index&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Corona&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Tiger Nau&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;TrucBach&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chỉ có str, int, float, bool, None là các kiểu dùng ngay.
Với list, tuple, set, dict, cần phải import type tương ứng
từ standard lib &lt;code&gt;typing&lt;/code&gt;, các type viết Hoa chữ cái đầu.
Có thể khai báo qua loa
&lt;code&gt;def with_index(names: List) -&amp;gt; List:&lt;/code&gt;
hoặc chi tiết như trong ví dụ 2.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy mypy_simple.py
mypy_simple.py:11: error: Incompatible types &lt;span class="k"&gt;in&lt;/span&gt; assignment &lt;span class="o"&gt;(&lt;/span&gt;expression has &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;List[Tuple[int, str]]&amp;quot;&lt;/span&gt;, variable has &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lỗi này thường gặp, do chuyện dùng chung tên &lt;code&gt;result&lt;/code&gt;,
mypy lần đầu gặp sẽ nghĩ &lt;code&gt;result&lt;/code&gt; là kiểu &lt;code&gt;int&lt;/code&gt;, qua dòng tiếp
theo lại suy luận nó được gán giá trị kiểu &lt;code&gt;List[Tuple[int, str]]&lt;/code&gt;. Việc dùng
một biến để chỉ tới nhiều kiểu khác nhau không hiếm trong dynamic typing, nhưng
là chuyện không thể trong các ngôn ngữ static typing. Cách giải quyết chuẩn
nhất là đổi tên biến.&lt;/p&gt;
&lt;h4&gt;Ví dụ 3 - các object phức tạp, thư viện bên ngoài&lt;/h4&gt;
&lt;p&gt;Với các lập trình viên Python, type là một thứ lạ, nên không phải dẽ gì ngồi
đọc ngay ra kiểu của &lt;code&gt;resp&lt;/code&gt; sau đây là gì mà gõ vào:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;From: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;origin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://httpbin.org/ip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;process_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# + 10&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Any&lt;/code&gt; giúp điền vào chỗ trống khi không biết kiểu gì, đồng nghĩa
với việc mất đi một chút bảo vệ của mypy do mypy sẽ cho phép gọi
function &lt;code&gt;process_response&lt;/code&gt; với argument đầu tiên thuộc bất kỳ kiểu nào.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msg: str = 'From: '&lt;/code&gt; là argument &lt;code&gt;msg&lt;/code&gt;, kiểu &lt;code&gt;str&lt;/code&gt;, với giá trị
default &lt;code&gt;From:&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python mypy_simple.py
From: &lt;span class="m"&gt;111&lt;/span&gt;.212.107.29
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Có một cách khác để nhờ mypy tìm giúp kiểu của &lt;code&gt;resp&lt;/code&gt;, đó là khai báo sai kiểu,
thay &lt;code&gt;Any&lt;/code&gt; thành &lt;code&gt;int&lt;/code&gt;, chạy mypy sẽ thấy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mypy mypy_simple.py
mypy_simple.py:5: error: &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt; has no attribute &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;
mypy_simple.py:8: error: Argument &lt;span class="m"&gt;1&lt;/span&gt; to &lt;span class="s2"&gt;&amp;quot;process_response&amp;quot;&lt;/span&gt; has incompatible &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Response&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; expected &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;
Found &lt;span class="m"&gt;2&lt;/span&gt; errors &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; file &lt;span class="o"&gt;(&lt;/span&gt;checked &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; file&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vậy kiểu của &lt;code&gt;resp&lt;/code&gt; cần khai báo là Response, đầy đủ là &lt;code&gt;requests.models.Response&lt;/code&gt;
có thể tìm ra bằng cách &lt;code&gt;print(type(r))&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Ví dụ 4 - function nhận vào nhiều kiểu&lt;/h4&gt;
&lt;p&gt;Cũng có lúc, ta muốn chủ ý nhận vào nhiều loại input khác kiểu,
nhưng chỉ giới hạn trong 1 nhóm, ví dụ như int, str, float, chứ không phải dict
hay list, nếu dùng &lt;code&gt;Any&lt;/code&gt; thì dễ dãi quá:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;any_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This is &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;any_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;any_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;### mypy check&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Argument&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;any_number&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;incompatible&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;str&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;int&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giải pháp là dùng Union.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;any_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Các kiểu type khác: &lt;a href="https://mypy.readthedocs.io/en/stable/kinds_of_types.html"&gt;https://mypy.readthedocs.io/en/stable/kinds_of_types.html&lt;/a&gt; đáng chú ý như Optional khi có thể trả về None, hay Callable là kiểu cho
function.&lt;/p&gt;
&lt;h3&gt;Stub&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;mypy&lt;/span&gt; &lt;span class="nv"&gt;mypy_simple&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
&lt;span class="nv"&gt;mypy_simple&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;:&lt;span class="mi"&gt;1&lt;/span&gt;: &lt;span class="nv"&gt;error&lt;/span&gt;: &lt;span class="nv"&gt;No&lt;/span&gt; &lt;span class="nv"&gt;library&lt;/span&gt; &lt;span class="nv"&gt;stub&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;module&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;boto3&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;mypy_simple&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;:&lt;span class="mi"&gt;1&lt;/span&gt;: &lt;span class="nv"&gt;note&lt;/span&gt;: &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Stub&lt;/span&gt; &lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="nv"&gt;https&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;github&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;typeshed&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi Python chính thức thêm type notation, không có nghĩa là các core developer sẽ đi sửa hàng loạt các file thư viện đã chạy ổn định vài chục năm để
thêm type. Thay vào đó, họ tạo ra các stub file.
stub file là file chứa type annotation của các function trong library. Nó tương tự header file trong C/C++.&lt;/p&gt;
&lt;p&gt;Ví dụ &lt;a href="https://github.com/python/typeshed/blob/master/stdlib/3/itertools.pyi"&gt;itertools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Các stub file của Python standard lib được gom lại tại &lt;a href="https://github.com/python/typeshed"&gt;python/typeshed&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Các thư viện bên ngoài thường ít khi có sẵn stub file,
Ví dụ như &lt;code&gt;boto3&lt;/code&gt; - thư viện cực kỳ phổ biến - và chính thức để làm việc với
API của AWS, tới nay vẫn chưa có stub file chính thức từ AWS.
Nên để đơn giản, thay vì phải chiến đấu với type, ta có thể bỏ qua:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;mypy&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hay tự tạo stub như &lt;a href="https://github.com/htlcnn/autocad_objectarx_python_stubs"&gt;htlcnn&lt;/a&gt;.
Xem hướng dẫn tự tạo stub file tại &lt;a href="https://github.com/python/mypy/wiki/Creating-Stubs-For-Python-Modules"&gt;mypy wiki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Những vấn đề type giúp giải quyết&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Kiểm tra kiểu, đảm bảo function trả về thống nhất một kiểu, nhận được đúng
  kiểu đầu vào.&lt;/li&gt;
&lt;li&gt;Giúp nhìn vào dòng def (thuật ngữ chính xác: function signature) là biết luôn
  cần gọi với argument nào, trả về kiểu gì.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Những vấn đề type KHÔNG giúp giải quyết&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Thay cho unittest: unittest dùng để kiểm tra logic chứ không phải để kiểm tra kiểu. Do không có ràng buộc về kiểu, nên trong unittest thường kiểm tra cả kiều của đầu ra function, việc này hoàn toàn bị loại bỏ khi dùng mypy.&lt;/li&gt;
&lt;li&gt;Làm việc nhóm không hiệu quả: type chỉ là một phần giải pháp giúp xóa bớt sự
chênh lệch trình độ giữa các lập trình viên. Bạn nên tìm cách đào tạo, chia sẻ
kinh nghiệm, luyện tập cùng các đồng nghiệp thì hơn.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hành động của chúng ta&lt;/h3&gt;
&lt;p&gt;Thêm ngay dòng sau vào Makefile, hay hệ thống CI của bạn, ngay sau pep8, flake8 hay pylint:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;mypy&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Type là một công cụ tốt cho các Pythonista như pylint pep8, giúp phát triển các dự án lớn hơn,
nhiều người tham gia một cách dễ dàng hơn, trong khi việc đầu tư thì không có
gì to tát cả - chỉ việc share bài viết này.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="mypy"></category></entry><entry><title>C thật là đơn giản</title><link href="http://pp.pymi.vn/article/cde/" rel="alternate"></link><published>2020-02-19T00:00:00+07:00</published><updated>2020-02-19T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-02-19:/article/cde/</id><summary type="html">&lt;p&gt;C đơn giản hơn Python?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Đơn giản, nhanh, chậm, xinh, cao, thấp, giỏi, xịn... đều là những khái niệm
mang tính chất tương đối. Có cái hơn khi so sánh ở góc độ này, nhưng lại kém
khi so sánh ở góc độ khác. Trong ngành lập trình, mọi thứ đều là sự đánh đổi
(trade off),
không có giải pháp nào thỏa mãn tất cả mọi nhu cầu (silver bullet) - hoặc có
nhưng chưa ai tìm ra.&lt;/p&gt;
&lt;p&gt;Không cần bàn cãi, ai cũng đồng ý code Python dễ đọc, viết hơn C, hay... đơn
giản hơn. Nhưng cái đơn giản đó, là đơn giản với con người, với lập trình viên,
còn với máy tính thì hoàn toàn ngược lại.&lt;/p&gt;
&lt;p&gt;Ta sẽ thử nghiệm chương trình đơn giản nhất trái đất: hello world viết bằng C
và Python rồi so sánh dùng &lt;code&gt;strace&lt;/code&gt; - một công cụ debug "cao cấp" thường
dùng bởi các SysAdmin.&lt;/p&gt;
&lt;h3&gt;strace&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ whatis strace
strace &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;           - trace system calls and signals
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bài viết thực hiện trên Ubuntu 18.04, &lt;code&gt;cc&lt;/code&gt; - C compiler có lẽ là có sẵn.
Hoặc nếu không có, hãy cài bằng &lt;code&gt;sudo apt-get install -y  build-essential strace&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;C Programming language&lt;/h3&gt;
&lt;p&gt;4 dòng code C&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;puts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Compile rồi chạy - yeah, cực đơn giản, không cần gì khác cả, cũng không cần
làm việc đơn giản này trở thành rắc rôi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cc hello.c -o hello  &lt;span class="c1"&gt;# compile, sinh ra file hello&lt;/span&gt;
$ ./hello  &lt;span class="c1"&gt;# chạy file hello&lt;/span&gt;
Hello world!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giờ chạy với &lt;code&gt;strace&lt;/code&gt; để xem chương trình siêu đơn giản này gọi những system call
nào, &lt;code&gt;-C&lt;/code&gt; sẽ hiển thị bảng thống kê, &lt;code&gt;-S calls&lt;/code&gt; sẽ sắp xếp thống kê này
theo cột &lt;code&gt;calls&lt;/code&gt;, giảm dần.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ strace -CScalls ./hello
execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./hello&amp;quot;&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./hello&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, 0x7fff1e9af718 /* &lt;span class="m"&gt;68&lt;/span&gt; vars */&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
brk&lt;span class="o"&gt;(&lt;/span&gt;NULL&lt;span class="o"&gt;)&lt;/span&gt;                               &lt;span class="o"&gt;=&lt;/span&gt; 0x56174aa4e000
access&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/ld.so.nohwcap&amp;quot;&lt;/span&gt;, F_OK&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; -1 ENOENT &lt;span class="o"&gt;(&lt;/span&gt;No such file or directory&lt;span class="o"&gt;)&lt;/span&gt;
access&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/ld.so.preload&amp;quot;&lt;/span&gt;, R_OK&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; -1 ENOENT &lt;span class="o"&gt;(&lt;/span&gt;No such file or directory&lt;span class="o"&gt;)&lt;/span&gt;
openat&lt;span class="o"&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class="s2"&gt;&amp;quot;/etc/ld.so.cache&amp;quot;&lt;/span&gt;, O_RDONLY&lt;span class="p"&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
fstat&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;st_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S_IFREG&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="m"&gt;0644&lt;/span&gt;, &lt;span class="nv"&gt;st_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;106420&lt;/span&gt;, ...&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
mmap&lt;span class="o"&gt;(&lt;/span&gt;NULL, &lt;span class="m"&gt;106420&lt;/span&gt;, PROT_READ, MAP_PRIVATE, &lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f867f8fc000
close&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;                                &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
access&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/ld.so.nohwcap&amp;quot;&lt;/span&gt;, F_OK&lt;span class="o"&gt;)&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; -1 ENOENT &lt;span class="o"&gt;(&lt;/span&gt;No such file or directory&lt;span class="o"&gt;)&lt;/span&gt;
openat&lt;span class="o"&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class="s2"&gt;&amp;quot;/lib/x86_64-linux-gnu/libc.so.6&amp;quot;&lt;/span&gt;, O_RDONLY&lt;span class="p"&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
read&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\260\34\2\0\0\0\0\0&amp;quot;&lt;/span&gt;..., &lt;span class="m"&gt;832&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;832&lt;/span&gt;
fstat&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;st_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S_IFREG&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="m"&gt;0755&lt;/span&gt;, &lt;span class="nv"&gt;st_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2030544&lt;/span&gt;, ...&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
mmap&lt;span class="o"&gt;(&lt;/span&gt;NULL, &lt;span class="m"&gt;8192&lt;/span&gt;, PROT_READ&lt;span class="p"&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class="p"&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f867f8fa000
mmap&lt;span class="o"&gt;(&lt;/span&gt;NULL, &lt;span class="m"&gt;4131552&lt;/span&gt;, PROT_READ&lt;span class="p"&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class="p"&gt;|&lt;/span&gt;MAP_DENYWRITE, &lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f867f2fe000
mprotect&lt;span class="o"&gt;(&lt;/span&gt;0x7f867f4e5000, &lt;span class="m"&gt;2097152&lt;/span&gt;, PROT_NONE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
mmap&lt;span class="o"&gt;(&lt;/span&gt;0x7f867f6e5000, &lt;span class="m"&gt;24576&lt;/span&gt;, PROT_READ&lt;span class="p"&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class="p"&gt;|&lt;/span&gt;MAP_FIXED&lt;span class="p"&gt;|&lt;/span&gt;MAP_DENYWRITE, &lt;span class="m"&gt;3&lt;/span&gt;, 0x1e7000&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f867f6e5000
mmap&lt;span class="o"&gt;(&lt;/span&gt;0x7f867f6eb000, &lt;span class="m"&gt;15072&lt;/span&gt;, PROT_READ&lt;span class="p"&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class="p"&gt;|&lt;/span&gt;MAP_FIXED&lt;span class="p"&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0x7f867f6eb000
close&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;                                &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
arch_prctl&lt;span class="o"&gt;(&lt;/span&gt;ARCH_SET_FS, 0x7f867f8fb4c0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
mprotect&lt;span class="o"&gt;(&lt;/span&gt;0x7f867f6e5000, &lt;span class="m"&gt;16384&lt;/span&gt;, PROT_READ&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
mprotect&lt;span class="o"&gt;(&lt;/span&gt;0x56174a941000, &lt;span class="m"&gt;4096&lt;/span&gt;, PROT_READ&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
mprotect&lt;span class="o"&gt;(&lt;/span&gt;0x7f867f916000, &lt;span class="m"&gt;4096&lt;/span&gt;, PROT_READ&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
munmap&lt;span class="o"&gt;(&lt;/span&gt;0x7f867f8fc000, &lt;span class="m"&gt;106420&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
fstat&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;st_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;S_IFCHR&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="m"&gt;0620&lt;/span&gt;, &lt;span class="nv"&gt;st_rdev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;makedev&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;136&lt;/span&gt;, &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, ...&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
brk&lt;span class="o"&gt;(&lt;/span&gt;NULL&lt;span class="o"&gt;)&lt;/span&gt;                               &lt;span class="o"&gt;=&lt;/span&gt; 0x56174aa4e000
brk&lt;span class="o"&gt;(&lt;/span&gt;0x56174aa6f000&lt;span class="o"&gt;)&lt;/span&gt;                     &lt;span class="o"&gt;=&lt;/span&gt; 0x56174aa6f000
write&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/span&gt;, 13Hello world!
     &lt;span class="o"&gt;)&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;
exit_group&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;                           &lt;span class="o"&gt;=&lt;/span&gt; ?
+++ exited with &lt;span class="m"&gt;0&lt;/span&gt; +++
% &lt;span class="nb"&gt;time&lt;/span&gt;     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;5&lt;/span&gt;           mmap
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;4&lt;/span&gt;           mprotect
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt;           fstat
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt;           brk
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt; access
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;2&lt;/span&gt;           close
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;2&lt;/span&gt;           openat
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           &lt;span class="nb"&gt;read&lt;/span&gt;
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           write
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           munmap
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           execve
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           arch_prctl
------ ----------- ----------- --------- --------- ----------------
&lt;span class="m"&gt;100&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000                    &lt;span class="m"&gt;27&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt; total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Có tổng cộng 27 syscall được thực hiện, 3 fail.&lt;/p&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;p&gt;Một chương trình Python 3.6 in ra màn hình dòng chữ &lt;code&gt;hello world&lt;/code&gt; tương tự:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ strace -cScalls python3 -c &lt;span class="s1"&gt;&amp;#39;print(&amp;quot;Hello world!&amp;quot;)&amp;#39;&lt;/span&gt;
Hello world!
% &lt;span class="nb"&gt;time&lt;/span&gt;     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
  &lt;span class="m"&gt;9&lt;/span&gt;.22    &lt;span class="m"&gt;0&lt;/span&gt;.000277           &lt;span class="m"&gt;2&lt;/span&gt;       &lt;span class="m"&gt;166&lt;/span&gt;        &lt;span class="m"&gt;32&lt;/span&gt; stat
  &lt;span class="m"&gt;7&lt;/span&gt;.96    &lt;span class="m"&gt;0&lt;/span&gt;.000239           &lt;span class="m"&gt;3&lt;/span&gt;        &lt;span class="m"&gt;94&lt;/span&gt;           fstat
  &lt;span class="m"&gt;7&lt;/span&gt;.19    &lt;span class="m"&gt;0&lt;/span&gt;.000216           &lt;span class="m"&gt;3&lt;/span&gt;        &lt;span class="m"&gt;79&lt;/span&gt;           &lt;span class="nb"&gt;read&lt;/span&gt;
  &lt;span class="m"&gt;7&lt;/span&gt;.19    &lt;span class="m"&gt;0&lt;/span&gt;.000216           &lt;span class="m"&gt;3&lt;/span&gt;        &lt;span class="m"&gt;68&lt;/span&gt;           rt_sigaction
  &lt;span class="m"&gt;8&lt;/span&gt;.09    &lt;span class="m"&gt;0&lt;/span&gt;.000243           &lt;span class="m"&gt;4&lt;/span&gt;        &lt;span class="m"&gt;58&lt;/span&gt;           close
 &lt;span class="m"&gt;10&lt;/span&gt;.25    &lt;span class="m"&gt;0&lt;/span&gt;.000308           &lt;span class="m"&gt;5&lt;/span&gt;        &lt;span class="m"&gt;57&lt;/span&gt;         &lt;span class="m"&gt;2&lt;/span&gt; openat
  &lt;span class="m"&gt;1&lt;/span&gt;.63    &lt;span class="m"&gt;0&lt;/span&gt;.000049           &lt;span class="m"&gt;1&lt;/span&gt;        &lt;span class="m"&gt;43&lt;/span&gt;         &lt;span class="m"&gt;6&lt;/span&gt; lseek
 &lt;span class="m"&gt;17&lt;/span&gt;.78    &lt;span class="m"&gt;0&lt;/span&gt;.000534          &lt;span class="m"&gt;16&lt;/span&gt;        &lt;span class="m"&gt;34&lt;/span&gt;           mmap
  &lt;span class="m"&gt;0&lt;/span&gt;.43    &lt;span class="m"&gt;0&lt;/span&gt;.000013           &lt;span class="m"&gt;1&lt;/span&gt;        &lt;span class="m"&gt;18&lt;/span&gt;           getdents
 &lt;span class="m"&gt;12&lt;/span&gt;.62    &lt;span class="m"&gt;0&lt;/span&gt;.000379          &lt;span class="m"&gt;24&lt;/span&gt;        &lt;span class="m"&gt;16&lt;/span&gt;           mprotect
  &lt;span class="m"&gt;2&lt;/span&gt;.43    &lt;span class="m"&gt;0&lt;/span&gt;.000073           &lt;span class="m"&gt;6&lt;/span&gt;        &lt;span class="m"&gt;12&lt;/span&gt;           brk
  &lt;span class="m"&gt;1&lt;/span&gt;.66    &lt;span class="m"&gt;0&lt;/span&gt;.000050           &lt;span class="m"&gt;4&lt;/span&gt;        &lt;span class="m"&gt;12&lt;/span&gt;         &lt;span class="m"&gt;2&lt;/span&gt; ioctl
  &lt;span class="m"&gt;5&lt;/span&gt;.03    &lt;span class="m"&gt;0&lt;/span&gt;.000151          &lt;span class="m"&gt;17&lt;/span&gt;         &lt;span class="m"&gt;9&lt;/span&gt;         &lt;span class="m"&gt;9&lt;/span&gt; access
  &lt;span class="m"&gt;0&lt;/span&gt;.37    &lt;span class="m"&gt;0&lt;/span&gt;.000011           &lt;span class="m"&gt;1&lt;/span&gt;         &lt;span class="m"&gt;8&lt;/span&gt;           lstat
  &lt;span class="m"&gt;2&lt;/span&gt;.46    &lt;span class="m"&gt;0&lt;/span&gt;.000074          &lt;span class="m"&gt;19&lt;/span&gt;         &lt;span class="m"&gt;4&lt;/span&gt;           munmap
  &lt;span class="m"&gt;0&lt;/span&gt;.30    &lt;span class="m"&gt;0&lt;/span&gt;.000009           &lt;span class="m"&gt;3&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt;           dup
  &lt;span class="m"&gt;0&lt;/span&gt;.27    &lt;span class="m"&gt;0&lt;/span&gt;.000008           &lt;span class="m"&gt;3&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt; readlink
  &lt;span class="m"&gt;0&lt;/span&gt;.23    &lt;span class="m"&gt;0&lt;/span&gt;.000007           &lt;span class="m"&gt;2&lt;/span&gt;         &lt;span class="m"&gt;3&lt;/span&gt;           sigaltstack
  &lt;span class="m"&gt;0&lt;/span&gt;.63    &lt;span class="m"&gt;0&lt;/span&gt;.000019          &lt;span class="m"&gt;19&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           write
  &lt;span class="m"&gt;0&lt;/span&gt;.53    &lt;span class="m"&gt;0&lt;/span&gt;.000016          &lt;span class="m"&gt;16&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           rt_sigprocmask
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           getpid
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           execve
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           fcntl
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           sysinfo
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           getuid
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           getgid
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           geteuid
  &lt;span class="m"&gt;0&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.000000           &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           getegid
  &lt;span class="m"&gt;0&lt;/span&gt;.43    &lt;span class="m"&gt;0&lt;/span&gt;.000013          &lt;span class="m"&gt;13&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           arch_prctl
  &lt;span class="m"&gt;0&lt;/span&gt;.80    &lt;span class="m"&gt;0&lt;/span&gt;.000024          &lt;span class="m"&gt;24&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           futex
  &lt;span class="m"&gt;0&lt;/span&gt;.60    &lt;span class="m"&gt;0&lt;/span&gt;.000018          &lt;span class="m"&gt;18&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           set_tid_address
  &lt;span class="m"&gt;0&lt;/span&gt;.63    &lt;span class="m"&gt;0&lt;/span&gt;.000019          &lt;span class="m"&gt;19&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           set_robust_list
  &lt;span class="m"&gt;0&lt;/span&gt;.53    &lt;span class="m"&gt;0&lt;/span&gt;.000016          &lt;span class="m"&gt;16&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           prlimit64
  &lt;span class="m"&gt;0&lt;/span&gt;.73    &lt;span class="m"&gt;0&lt;/span&gt;.000022          &lt;span class="m"&gt;22&lt;/span&gt;         &lt;span class="m"&gt;1&lt;/span&gt;           getrandom
------ ----------- ----------- --------- --------- ----------------
&lt;span class="m"&gt;100&lt;/span&gt;.00    &lt;span class="m"&gt;0&lt;/span&gt;.003004                   &lt;span class="m"&gt;703&lt;/span&gt;        &lt;span class="m"&gt;52&lt;/span&gt; total
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do output quá dài nên ở đây thay đổi câu lệnh, để có đầy đủ output hãy chạy
với option C hoa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ strace -CScalls python -c &lt;span class="s1"&gt;&amp;#39;print(&amp;quot;hello world&amp;quot;)&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chương trình Python đơn giản này thực hiện tới 703 syscall, 52 fail.&lt;/p&gt;
&lt;h3&gt;Kết luận&lt;/h3&gt;
&lt;p&gt;27 với 703 thì cái nào "hơn"?&lt;/p&gt;
&lt;p&gt;27 nhỏ hơn 703, còn 703 thì lớn hơn 27. Lập trình C cũng rất đơn giản, đúng
không!&lt;/p&gt;
&lt;p&gt;Vậy nên khi lập trình, luôn nhớ rằng mọi thứ đều là tương đôi, đều phải đánh
đổi. Mấy em gái đã xinh mà code Python lại giỏi, chỉ có 2 khả năng xảy ra:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 là thiếu cái gì đó&lt;/li&gt;
&lt;li&gt;2 là học Python ở &lt;a href="https://pymi.vn"&gt;PYMI&lt;/a&gt; rõ ràng &amp;lt;3.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Đọc thêm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;System call: https://hvnsweeting.github.io/syscall.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="C"></category><category term="Python"></category><category term="strace"></category><category term="syscall"></category><category term="UNIX"></category><category term="sysadmin"></category></entry><entry><title>Crawl dữ liệu bằng JavaScript ngay trên trình duyệt</title><link href="http://pp.pymi.vn/article/jsdom/" rel="alternate"></link><published>2020-02-09T00:00:00+07:00</published><updated>2020-02-09T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2020-02-09:/article/jsdom/</id><summary type="html">&lt;p&gt;trở thành hacker ngay trên trình duyệt - hay tại sao không nên tin vào ảnh chụp màn hình.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Năm 2020, bên cạnh cuộc chiến khốc liệt với virus Novel Corona (nCov), vẫn dai dẳng và mãnh liệt cuộc chiến chống tin giả, tin quá sốc, tràn lan trên các mạng xã hội.&lt;/p&gt;
&lt;p&gt;Trong các loại tin giả, có không ít tin được đưa theo hình thức chụp ảnh màn hình điện thoại, chụp trình duyệt trên máy tính để làm bằng chứng. Ảnh màn hình điện thoại dễ dàng làm giả với một lập trình viên mobile, còn với ảnh trình duyệt, ai cũng làm được, không cần tới trình độ PhotoShop đỉnh cao hay kỹ thuật lập trình chuyên nghiệp cỡ như các Pymiers.&lt;/p&gt;
&lt;p&gt;Bài viết sẽ vạch trần kỹ thuật làm giả này, đồng thời lợi dụng nó để crawl dữ liệu ngay trên trang web, dùng chính trình duyệt mà không cần thêm gì khác như BeautifulSoup4 hay &lt;a href="/article/requests-bs4-requests-html/"&gt;requests-html&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Web page là gì&lt;/h2&gt;
&lt;p&gt;Web page là trang web, sử dụng HTML để biểu diễn cấu trúc.&lt;/p&gt;
&lt;h2&gt;HTML là gì&lt;/h2&gt;
&lt;p&gt;HTML là một ngôn ngữ markup (đánh dấu), dùng để mô tả cấu trúc một web page. Nó sử dụng các tag (thẻ) để đánh dấu.
Chuột phải vào màn hình, chọn "View page source" để xem code HTML của web page.&lt;/p&gt;
&lt;p&gt;HTML không phải một ngôn ngữ lập trình (programming language).&lt;/p&gt;
&lt;h3&gt;HTML tag&lt;/h3&gt;
&lt;p&gt;Mỗi bộ phận của web page được đánh dấu sử dụng một cặp thẻ tương ứng, &lt;code&gt;&amp;lt;a ...&amp;gt; &amp;lt;/a&amp;gt;&lt;/code&gt; để đánh dấu một web link, &lt;code&gt;&amp;lt;table&amp;gt; ... &amp;lt;/table&amp;gt;&lt;/code&gt; để đánh dấu một bảng ...
Xem đầy đủ các tag tại &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element"&gt;đây&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Document Object Model (DOM)&lt;/h2&gt;
&lt;p&gt;Document Object Model (DOM) biểu diễn HTML ở dạng cây (tree structure).
DOM là programming interface cho HTML (và XML) documents.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Document_Object_Model"&gt;&lt;img alt="DOM wiki" src="http://pp.pymi.vn/images/220px-DOM-model.svg.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sử dụng cây này có thể dễ dàng truy cập (query) các thành phần của web page, thay đổi chúng (manipulate).&lt;/p&gt;
&lt;p&gt;Mỗi web page là một document.&lt;/p&gt;
&lt;h3&gt;Truy cập &amp;amp; thay đổi DOM trên trình duyệt&lt;/h3&gt;
&lt;p&gt;Mở một web site ra, rồi bật web console lên, hoặc đọc bài &lt;a href="https://www.familug.org/2017/04/hoc-javascript-1.html"&gt;này&lt;/a&gt; nếu chưa biết cách.&lt;/p&gt;
&lt;h3&gt;Document, Window &amp;amp; DOM Elements&lt;/h3&gt;
&lt;p&gt;Mỗi web page là một &lt;code&gt;document&lt;/code&gt;, mỗi "cửa sổ" (thời nay là 1 tab trình duyệt), là một &lt;code&gt;window&lt;/code&gt;, đại diện cho cửa sổ đó. Mỗi document là một tree, với các node gọi là các Element.&lt;/p&gt;
&lt;p&gt;Gõ vào web console &lt;code&gt;document&lt;/code&gt;, đây chính là DOM của web page đang truy cập, thông qua object này, ta có thể làm đủ trò với những gì đang hiện trên trình duyệt.&lt;/p&gt;
&lt;h3&gt;Get element&lt;/h3&gt;
&lt;p&gt;Có vài cách để truy cập element, trong đó kể tới 2 methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;document.getElementsByTagName&lt;/code&gt;: lấy các elements theo HTML tag của chúng&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.querySelectorAll&lt;/code&gt;: lấy các elements theo &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors"&gt;CSS selectors&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;innerText&lt;/code&gt; là thuộc tính (attribute) của một element, chứa nội dung text của nó. Ví dụ sau sẽ thay đổi tiêu đề của bài viết, đây là cách làm tin giả rồi chụp mành hình, không cần dùng PhotoShop:&lt;/p&gt;
&lt;p&gt;Vào web page: &lt;a href="https://www.familug.org/2020/02/vagrant.html"&gt;https://www.familug.org/2020/02/vagrant.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Trước" src="http://pp.pymi.vn/images/vagrant.png"&gt;&lt;/p&gt;
&lt;p&gt;Sau khi "hack"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;titleTag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;h3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;titleTag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;titleTag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Happy birthday!&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Hack FAMILUG" src="http://pp.pymi.vn/images/happybirthday.png"&gt;&lt;/p&gt;
&lt;h3&gt;Query element&lt;/h3&gt;
&lt;p&gt;Thay vì dùng HTML tags, có thể dùng CSS class để tìm ra các element, ví dụ sau đây tìm các tin tuyển dụng trên trang &lt;a href="https://news.ycombinator.com/item?id=22225314"&gt;HackerNews&lt;/a&gt; có chứa từ khóa Python và Remote, rồi hiển thị lên màn hình - có thể xem như crawl dữ liệu ngay trên trình duyệt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;allcomms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.comment-tree .comtr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;topcoms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;allcomms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img[width=&amp;quot;0&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;pys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;topcoms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\bpython\b/i&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;pyremotes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\bremote\b/i&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pyremotes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đoạn code trên học theo &lt;a href="https://news.ycombinator.com/item?id=22231675"&gt;một comment trên HackerNews&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Đọc thêm về map/filter tại &lt;a href="https://gist.github.com/hvnsweeting/e26b6367bb0144d4ce3eaa04cfe3b94d"&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="remote python job" src="http://pp.pymi.vn/images/hackernews_py_remote_jobs.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/\bpython\b/i&lt;/code&gt; là Regex Object, dùng để tìm các đoạn text chứa từ khóa Python, chữ &lt;code&gt;\b&lt;/code&gt; để đánh dấu boundary, tức kết quả sẽ không chứa &lt;code&gt;pikapython&lt;/code&gt; mà chỉ chứa &lt;code&gt;pika python&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt; để không phân biệt chữ hoa chữ thường.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;DOM là khái niệm cơ bản về web page, là nền tảng để lập trình JavaScript ở phía client (trên trình duyệt), dù không phải Front-end developer, cũng nên biết dùng DOM, để automate, để "hack".&lt;/p&gt;
&lt;p&gt;Happy new year 2020!&lt;/p&gt;</content><category term="Trang chủ"></category><category term="JavaScript"></category><category term="JS"></category><category term="crawl"></category><category term="scraping"></category></entry><entry><title>Sử dụng xlwings tương tác với MS Excel</title><link href="http://pp.pymi.vn/article/xlwings-named-range/" rel="alternate"></link><published>2019-12-08T00:00:00+07:00</published><updated>2018-12-08T00:00:00+07:00</updated><author><name>htlcnn</name></author><id>tag:pp.pymi.vn,2019-12-08:/article/xlwings-named-range/</id><summary type="html">&lt;p&gt;Giới thiệu thư viện xlwings dùng để tương tác với MS Excel&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/xlwings/xlwings"&gt;xlwings&lt;/a&gt; là 1 thư viện Python dùng để tương tác giữa Python và MS Excel. Hoạt động được trên Windows và Mac. xlwings có các tính năng:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scripting&lt;/strong&gt;: Tự động hóa/tương tác với Excel từ môi trường Python, sử dụng cú pháp gần với VBA mà vẫn "Pythonic".&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Macros&lt;/strong&gt;: Viết các script python thay thế cho VBA macros, giúp code dễ đọc hơn. Sau khi viết script python xong, chỉ cần gọi 1 hàm trong VBA là script chạy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDFs&lt;/strong&gt;: Viết hàm người dùng tự định nghĩa bằng ngôn ngữ Python và sử dụng được hàm đó trong excel (Windows only).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: cung cấp REST API cho Excel workbook.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Cài đặt:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;xlwings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Sử dụng:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Một số thao tác cơ bản:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xlwings&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;xw&lt;/span&gt;

&lt;span class="c1"&gt;# mở workbook mới&lt;/span&gt;
&lt;span class="n"&gt;new_wb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# hoặc&lt;/span&gt;
&lt;span class="n"&gt;opening_wb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name_of_opening_workbook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# hoặc&lt;/span&gt;
&lt;span class="n"&gt;open_new_workbook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;full/relaive_path_to_xls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Lấy các sheets có trong file excel &lt;/span&gt;
&lt;span class="n"&gt;xw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sheets&lt;/span&gt;

&lt;span class="c1"&gt;# Làm việc với dữ liệu trong 1 sheet&lt;/span&gt;
&lt;span class="n"&gt;sht&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sheets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sht&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sht&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xxx&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# tự động tìm bảng&lt;/span&gt;
&lt;span class="c1"&gt;# https://docs.xlwings.org/en/stable/datastructures.html#range-expanding&lt;/span&gt;
&lt;span class="n"&gt;sht&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Ngoài ra, &lt;a href="https://docs.xlwings.org/en/stable/datastructures.html#pandas-dataframes"&gt;xlwings còn tích hợp pandas&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Xử lý trường hợp cụ thể:
Trong video &lt;a href="https://www.youtube.com/watch?v=wm7RNejVh8E"&gt;này&lt;/a&gt;, xlwings được dùng để tự động tạo các named range cho hàng loạt file có cấu trúc tương tự. Mục đích là để làm bước tiếp theo: link giá trị từ nhiều file vào 1 file tổng hợp, dựa vào named range trong từng file chi tiết. Tham khảo &lt;a href="https://gist.github.com/htlcnn/0ddd4e0023e0b623bc0e6006a9f9520c"&gt;script&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Trong script này còn sử dụng Excel VBA API: &lt;a href="https://docs.microsoft.com/en-us/office/vba/api/excel.names.add"&gt;WorkBook.Names.Add&lt;/a&gt; (tra cứu toàn bộ ở &lt;a href="https://docs.microsoft.com/en-us/office/vba/api/overview/excel/object-model"&gt;đây&lt;/a&gt;, được cung cấp qua &lt;code&gt;xw_object.api&lt;/code&gt;). Tức là những gì không được cung cấp sẵn cú pháp Pythonic, ta sẽ sử dụng VBA API.&lt;/p&gt;
&lt;p&gt;Hạn chế: range expand chỉ ứng dụng được cho vùng dữ liệu liên tục. Với "bảng" có các dòng/cột trống (để "format" cho đẹp) thì sẽ bị ngắt tại chỗ có dòng/cột trống. Vì vậy, thường sẽ phải chọn 1 range khá lớn/1 magic number để lấy được toàn bộ vùng dữ liệu cần xử lý.&lt;/p&gt;
&lt;p&gt;Mọi việc phải xử lý trong video demo sẽ đơn giản hơn nếu có 1 file excel mẫu ban đầu, được định nghĩa sẵn các named range, sau đó mới duplicate ra để điền dữ liệu vào. Tuy nhiên, thực tế không như thế, ta phải xử lý lỗi một cách nhanh nhất, cũng giống như khi tập chép phạt: &lt;code&gt;"Anh xin lỗi\n" * 100&lt;/code&gt;&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="xlwings"></category><category term="excel"></category><category term="vba"></category></entry><entry><title>Biết Python - quen ngay Julia</title><link href="http://pp.pymi.vn/article/julia_intro/" rel="alternate"></link><published>2019-04-11T00:00:00+07:00</published><updated>2019-04-11T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2019-04-11:/article/julia_intro/</id><summary type="html">&lt;p&gt;Giống Python, mà nhanh gấp 2++, cũng rất gì và này nọ.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Julia là ngôn ngữ lập trình mới, trông rất giống code Python, chạy nhanh hơn Python3 &lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/faster/julia-python3.html"&gt;ít nhất 2 lần&lt;/a&gt;
và có nhiều tính năng hấp dẫn. Bạn không cần phải từ bỏ Python hay ngôn ngữ XYZ để học Julia, Julia chỉ đơn giản là một bông hoa đẹp mà ai thích... thì múc.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Julia" src="https://docs.julialang.org/en/v1/assets/logo.png"&gt;&lt;/p&gt;
&lt;p&gt;Julia là ngôn ngữ lập trình "làm gì cũng được", nhưng được tập trung vào lĩnh vực tính toán khoa học và muốn
thế chỗ Python (nhưng đường còn dài, và còn nhiều hơn chông gai).&lt;/p&gt;
&lt;h3&gt;Cài đặt&lt;/h3&gt;
&lt;p&gt;Xem https://docs.julialang.org/en/v1/&lt;/p&gt;
&lt;p&gt;Tại thời điểm viết bài (2019 tháng 4), Julia ở bản 1.1.0 - đã ổn định hơn trước rất nhiều, ít bug hơn, chạy nhanh hơn.&lt;/p&gt;
&lt;h3&gt;Từ Python ngó sang&lt;/h3&gt;
&lt;p&gt;Julia trông rất giống Python, cách dùng các học, cách code cũng tương tự, nên nếu biết Python thì 
việc viết được code để làm công việc thường ngày (của 1 DevOps) chỉ trong vòng vài tiếng.&lt;/p&gt;
&lt;h4&gt;REPL&lt;/h4&gt;
&lt;p&gt;Gõ lệnh trực tiếp bằng lệnh &lt;code&gt;julia&lt;/code&gt; trên Linux/MacOS&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;julia&lt;/span&gt;
               &lt;span class="n"&gt;_&lt;/span&gt;
   &lt;span class="n"&gt;_&lt;/span&gt;       &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;Documentation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;julialang&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;
   &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;   &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;  &lt;span class="n"&gt;__&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="kt"&gt;Type&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;?&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]?&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Pkg&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|/&lt;/span&gt; &lt;span class="sa"&gt;_&lt;/span&gt;&lt;span class="sb"&gt;` |  |&lt;/span&gt;
&lt;span class="sb"&gt;  | | |_| | | | (_| |  |  Version 1.1.0 (2019-01-21)&lt;/span&gt;
&lt;span class="sb"&gt; _/ |\__&amp;#39;_|_|_|\__&amp;#39;_|  |  Official https://julialang.org/ release&lt;/span&gt;
&lt;span class="sb"&gt;|__/                   |&lt;/span&gt;

&lt;span class="sb"&gt;julia&amp;gt; 1 + 1&lt;/span&gt;
&lt;span class="sb"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đây gọi là chế độ "REPL" (Read-Eval-Print-Loop) == (gõ vào - chạy - in ra kết quả - cứ thế mà làm).&lt;/p&gt;
&lt;h4&gt;IPython&lt;/h4&gt;
&lt;p&gt;Không cần cài thêm gì, Julia REPL tự có đủ các tính năng thiết yếu của IPython.&lt;/p&gt;
&lt;p&gt;Đọc document của 1 function? Gõ ?  rồi gõ bất cứ cái gì cần hỏi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c"&gt;###### gõ ? xong , biến từ julia&amp;gt; thành help?&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;
&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="n"&gt;sum!&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt; &lt;span class="n"&gt;cumsum&lt;/span&gt; &lt;span class="n"&gt;cumsum!&lt;/span&gt; &lt;span class="n"&gt;isnumeric&lt;/span&gt; &lt;span class="kt"&gt;VersionNumber&lt;/span&gt; &lt;span class="n"&gt;issubnormal&lt;/span&gt; &lt;span class="n"&gt;get_zero_subnormals&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;
 &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;itr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;Returns&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Màu mè (syntax highlight) cũng tự có sẵn rồi.&lt;/p&gt;
&lt;h4&gt;Chạy file code&lt;/h4&gt;
&lt;p&gt;File code Julia có đuôi &lt;code&gt;.jl&lt;/code&gt;, ví dụ &lt;code&gt;hello.jl&lt;/code&gt;.
Chạy file code bằng cách gõ lệnh: &lt;code&gt;julia hello.jl&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Cài đặt package&lt;/h4&gt;
&lt;p&gt;Để cài các package trên mạng, sử dụng package manager CÓ SẴN của Julia.
Chuyện về &lt;code&gt;virtualenv&lt;/code&gt; tạm chưa bàn tới ở đây vì khá rõ ràng là không cần thiết (cài package 
&lt;a href="http://pymi.vn/blog/virtualenv/"&gt;không cần gõ sudo gì cả&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Việc cài đặt package trong Julia thực hiện hơi khác so với Python Pip hay NodeJS NPM một chút.
Sẽ không có câu lệnh nào để gõ cả, không có chương trình thêm nào hết.
Julia thực hiện cài đặt package khi một đoạn code Julia được chạy (gọi function thực hiện cài đặt).&lt;/p&gt;
&lt;p&gt;Ví dụ một file tên (tuỳ ý) như sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# gicungduoc.jl&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Pkg&lt;/span&gt;
&lt;span class="n"&gt;Pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HTTP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;JSON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DocOpt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chạy code này: &lt;code&gt;julia gicungduoc.jl&lt;/code&gt; sẽ cài đặt các package, sau đó cứ thế mà dùng các thư viện này.&lt;/p&gt;
&lt;h3&gt;The good, the OK, the ugly&lt;/h3&gt;
&lt;h4&gt;The good - phần tốt&lt;/h4&gt;
&lt;h5&gt;Pipe operator&lt;/h5&gt;
&lt;p&gt;Tốt hay xấu là tuỳ do từng người tự phán xét.
Hãy xem đoạn code sau:&lt;/p&gt;
&lt;p&gt;Python: &lt;code&gt;''.join("  Py thon    ".strip().split())&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Julia: &lt;code&gt;"  Py thon    " |&amp;gt; strip |&amp;gt; split |&amp;gt; xs -&amp;gt; join(xs, "")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;incr&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# 7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;|&amp;gt;&lt;/code&gt; gọi là &lt;code&gt;Piping operator&lt;/code&gt;, lấy đầu ra của function này làm đầu vào cho function khác.
Giúp việc goi funciton liên tục (và đọc nó) dễ dàng hơn.
Giống UNIX command.&lt;/p&gt;
&lt;h5&gt;Nhanh&lt;/h5&gt;
&lt;p&gt;Julia thường nhanh hơn Python &lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/faster/julia-python3.html"&gt;ít nhất 2 lần&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Không quan trọng indentation&lt;/h5&gt;
&lt;p&gt;Dù bạn thụt ra thụt vào 2 3 4 5 ký tự, hay dùng tab đều không quan trọng.
Chuyện này vốn gây đau đầu cho không ít người dùng Python.&lt;/p&gt;
&lt;p&gt;Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Julia&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
   &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# 233168&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Julia dùng từ &lt;code&gt;end&lt;/code&gt; để kết thúc &lt;code&gt;if&lt;/code&gt; hay &lt;code&gt;for&lt;/code&gt;, nên không cần thiết sử dụng dấu cách hay tab để thụt dòng.
Thậm chí có thể dùng &lt;code&gt;;&lt;/code&gt; để phân cách các phần, và viết trên 1 dòng (bạn KHÔNG THỂ làm điều này với Python khi có for):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;233168&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;Range bao gồm cả số kết thúc&lt;/h5&gt;
&lt;p&gt;Một điều gây khó chịu với người mới code Python là phần kết thúc của range không được tính.
Tức nếu viết &lt;code&gt;range(1,1000)&lt;/code&gt; thì chỉ có từ 1 đến 999. Trong đầu luôn phải nhớ bớt đi 1.
Julia &lt;code&gt;1:999&lt;/code&gt; nghĩa là 1 đến 999, không thêm bớt gì.&lt;/p&gt;
&lt;h5&gt;Không bị "leak" biến i trong vòng lặp ra ngoài&lt;/h5&gt;
&lt;p&gt;Đây là &lt;a href="https://stackoverflow.com/questions/3611760/scoping-in-python-for-loops"&gt;1 bug của Python&lt;/a&gt;, do sau này quá muộn để sửa, &lt;a href="https://www.wired.com/story/its-not-a-bug-its-a-feature/"&gt;người ta coi nó như 1 tính năng&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# i vốn ở trong vòng lặp for, nay thoát ra ngoài với giá trị = 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;Hỗ trợ functional&lt;/h5&gt;
&lt;p&gt;Viết map trong Julia rất dễ chịu - dễ đọc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;map&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="mi"&gt;2&lt;/span&gt;,&lt;span class="mi"&gt;3&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;
  &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cách viết dùng lambda: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;sẽ tạo array chứa &lt;code&gt;[2,3,4]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;The OK - ổn&lt;/h4&gt;
&lt;h5&gt;Index from 1&lt;/h5&gt;
&lt;p&gt;Chuyện này gây sốc với lập trình viên lâu năm C, Java, PHP, Python ...
Nhưng không phải là hiếm có. Lua, MatLab, R đều dùng index từ 1.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trong Julia code này sẽ in ra số 4 nhưng Python sẽ xảy ra exception do Python index đếm từ 0&lt;/p&gt;
&lt;p&gt;Dùng nhiều sẽ quen và cũng không ghê gớm lắm, do Julia sử dụng cả phần cuối của range.&lt;/p&gt;
&lt;p&gt;Ví dụ slice: Python lấy 3 số đầu tiên của list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Julia: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đều kết thúc là 3 - đều là số phần tử cần lấy.&lt;/p&gt;
&lt;p&gt;Nhưng tệ hơn khi cần lấy 2 phần tử cuối:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;end&lt;/code&gt; là một index magic (tự xuất hiện), đại diện cho index của phần tử cuối cùng.&lt;/p&gt;
&lt;p&gt;Trong ví dụ này gõ số 4 thay end cũng được.&lt;/p&gt;
&lt;h4&gt;The ugly - thảm hại&lt;/h4&gt;
&lt;p&gt;Unicode string - sẽ rất đau đầu khi chuyển từ Python sang.&lt;/p&gt;
&lt;p&gt;Index của string (mặc định Unicode) trong Julia là byte index, không phải index theo thứ tự của ký tự.&lt;/p&gt;
&lt;p&gt;Python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Điêu&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Đ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Julia &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ulia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Điêu&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;Điêu&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="sc"&gt;&amp;#39;Đ&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unicode&lt;/span&gt; &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0110&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;Lu&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Letter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;StringIndexError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Điêu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Stacktrace&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;string_index_err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;Int64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nix&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;fmf5sqi0jx5zdlqx0gpw2m6nrsbcch2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0.1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dylib&lt;/span&gt;&lt;span class="o"&gt;:?&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;getindex_continued&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;Int64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;UInt32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nix&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;fmf5sqi0jx5zdlqx0gpw2m6nrsbcch2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0.1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dylib&lt;/span&gt;&lt;span class="o"&gt;:?&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;getindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="kt"&gt;Int64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nix&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;fmf5sqi0jx5zdlqx0gpw2m6nrsbcch2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0.1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dylib&lt;/span&gt;&lt;span class="o"&gt;:?&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="sc"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ASCII&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Unicode&lt;/span&gt; &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0069&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;Ll&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Letter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do chữ &lt;code&gt;Đ&lt;/code&gt; trong Unicode UTF-8 được biểu diễn bằng 2 byte, ta chỉ có thể truy cập 
được index 1, không truy cập được index 2. Và chữ &lt;code&gt;i&lt;/code&gt; ngay sau &lt;code&gt;Đ&lt;/code&gt; sẽ là index 3.&lt;/p&gt;
&lt;h4&gt;Exception&lt;/h4&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h4&gt;Chú ý&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Julia khởi động mất 0.2-0.4 giây, Python khởi động nhanh gấp 10.&lt;/li&gt;
&lt;li&gt;String trong Julia phải dùng double quote &lt;code&gt;""&lt;/code&gt;, single quote &lt;code&gt;''&lt;/code&gt; dành cho ký tự (Char).&lt;/li&gt;
&lt;li&gt;Nối string dùng &lt;code&gt;*&lt;/code&gt; chứ không phải &lt;code&gt;+&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Sẽ không có method gắn liền vào các object như string hay list trong Python,
  thay vào đó là các function có sẵn (thường không cần import, gọi là trong &lt;a href="https://docs.julialang.org/en/v1/base/base/"&gt;Base&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ví dụ 1 chương trình CLI nhận argument, gọi HTTP với JSON&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;DocOpt&lt;/span&gt;  &lt;span class="c"&gt;# import docopt function&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;Fist Julia program which makes HTTP requests to httpbin endpoint&lt;/span&gt;

&lt;span class="s"&gt;    Usage:&lt;/span&gt;
&lt;span class="s"&gt;      main.jl request &amp;lt;endpoint&amp;gt;&lt;/span&gt;

&lt;span class="s"&gt;    Options:&lt;/span&gt;
&lt;span class="s"&gt;      -h --help     Show this screen.&lt;/span&gt;
&lt;span class="s"&gt;      --version     Show version.&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;docopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;v&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;endpoint&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://httpbin.org/&lt;/span&gt;&lt;span class="si"&gt;$endpoint&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Accessing &lt;/span&gt;&lt;span class="si"&gt;$url&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My IP is &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Now also send post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://httpbin.org/post&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/tmp/data.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/tmp/data.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`ls -l`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;eachline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;isa&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="sr"&gt;&amp;quot;.*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="sr"&gt;.jl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kt"&gt;Nothing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chạy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ julia  main.jl  -h
Fist Julia program which makes HTTP requests to httpbin endpoint

Usage:
  main.jl request &amp;lt;endpoint&amp;gt;

Options:
  -h --help     Show this screen.
  --version     Show version.

$ julia main.jl request ip
Accessing https://httpbin.org/ip
My IP is &lt;span class="m"&gt;3&lt;/span&gt;.117.2.254, &lt;span class="m"&gt;3&lt;/span&gt;.117.2.254
Now also send post
Dict&lt;span class="o"&gt;{&lt;/span&gt;String,Any&lt;span class="o"&gt;}(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;3,&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;2&lt;span class="o"&gt;)&lt;/span&gt;
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; viethung.nguyen viethung.nguyen &lt;span class="m"&gt;1189&lt;/span&gt; Apr &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="m"&gt;08&lt;/span&gt;:38 main.jl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code hoàn toàn tương đương với code Python.&lt;/p&gt;
&lt;h3&gt;Kết luận&lt;/h3&gt;
&lt;p&gt;Còn chờ gì nữa?
Làm tí Julia thôi.&lt;/p&gt;
&lt;p&gt;Phần tiếp theo (nếu có) sẽ đi vào các tính năng của Julia sử dụng trong tính toán khoa học.&lt;/p&gt;
&lt;h3&gt;Tham khảo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.julialang.org/en/v1/"&gt;https://docs.julialang.org/en/v1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikibooks.org/wiki/Introducing_Julia"&gt;https://en.wikibooks.org/wiki/Introducing_Julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lectures.quantecon.org/jl/"&gt;https://lectures.quantecon.org/jl/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="julia"></category><category term="python"></category></entry><entry><title>Dùng MicroPython với wifi board ESP-8266</title><link href="http://pp.pymi.vn/article/micropython/" rel="alternate"></link><published>2018-10-21T00:00:00+07:00</published><updated>2018-10-21T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-10-21:/article/micropython/</id><summary type="html">&lt;p&gt;Chạy code Python trên thiết bị với chỉ 96KB RAM và 4MB bộ nhớ flash.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Khi trở thành một trong những ngôn ngữ lập trình phổ biến nhất thế giới,
Python không chỉ được dùng trong làm web, data science, hay sysadmin tool mà
nó còn đá sang cả một lĩnh vực vốn giới hạn về tài nguyên: nhúng.&lt;/p&gt;
&lt;p&gt;Bình thường khi bật Python lên để in ra màn hình dòng "hello, world" ta đã
dùng tới 8MB bộ nhớ. Vậy nên việc dùng Python cho lập trình nhúng thường nghe
có vẻ không phù hợp.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://micropython.org"&gt;MicroPython&lt;/a&gt; ra đời, là một bản thu gọn của Python, tối ưu chạy trên các vi xử
lý cũng như các môi trường giới hạn về tài nguyên.
Bài này khám phá việc chạy MicroPython trên một thiết bị tí hon
có tên WEMOS D1 mini.&lt;/p&gt;
&lt;h2&gt;WEMOS D1 mini&lt;/h2&gt;
&lt;p&gt;Là 1 bảng mạch điện có khả năng thu phát sóng wifi (wifi board) có kích thước
nhỏ hơn ngón chân cái của người lớn, thiết bị này có giá 2 USD.&lt;/p&gt;
&lt;p&gt;&lt;img alt="WEMOS D1 Mini" src="http://pp.pymi.vn/images/wemos1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Bảng mạch này sử dụng vi điều khiển (microcontroller) ESP-8266, với xung nhịp
80MHz/160MHz, 96KB RAM và 4 MB Flash.&lt;/p&gt;
&lt;h3&gt;Microcontroller&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A microcontroller is a small computer on a single integrated circuit. In modern
terminology, it is similar to, but less sophisticated than, a system on a chip
or SoC; an SoC may include a microcontroller as one of its components. A
microcontroller contains one or more CPUs along with memory and programmable
input/output peripherals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Một vi điều khiển là một máy tính nhỏ, trên một mạch điện tử (P/S: SoC là khái
        niệm tương tự, nhưng phức tạp hơn). Nó có một hoặc nhiều CPU, memory và
chỗ để thực hiện vào ra dữ liệu.&lt;/p&gt;
&lt;p&gt;Hãy nhìn vào chiếc máy bàn hay laptop bạn đang dùng, nó có 1 cục CPU to bằng
lòng bàn tay, vài thanh RAM dài như bàn tay, các cổng vào ra đều to bằng ngón
tay. Mỗi cục CPU đều từ 2-3 GHz (so với 80MHz), ổ cứng vài trăm GB (so với 4MB),
1-16 GB RAM (so với 96KB RAM).
Ta sẽ thấy microcontroller nhỏ bé và "yếu ớt" đến chừng nào.&lt;/p&gt;
&lt;p&gt;&lt;img alt="WEMOS D1 Mini" src="http://pp.pymi.vn/images/esp8266.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;MicroPython&lt;/h3&gt;
&lt;p&gt;Phiên bản Python dành riêng cho các thiết bị tí hon này nhỏ tới mức chỉ cần
256kB không gian chứa code, và 16kB RAM.&lt;/p&gt;
&lt;h2&gt;Cài đặt MicroPython lên WEMOS D1 Mini trên Ubuntu 16.04&lt;/h2&gt;
&lt;p&gt;(Windows hay OSX cần cài driver, hãy lên trang chủ của WEMOS để tải và xem
 hướng dẫn).&lt;/p&gt;
&lt;p&gt;Cắm thiết bị vào máy tính sử dụng dây micro USB (dây sạc điện thoại android),
sẽ thấy nháy đèn trên thiết bị, gõ lệnh &lt;code&gt;dmesg&lt;/code&gt; để xem Linux kernel báo nhận
thiết bị:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ dmesg
...
&lt;span class="o"&gt;[&lt;/span&gt;  &lt;span class="m"&gt;992&lt;/span&gt;.253009&lt;span class="o"&gt;]&lt;/span&gt; usb &lt;span class="m"&gt;2&lt;/span&gt;-1: new full-speed USB device number &lt;span class="m"&gt;5&lt;/span&gt; using xhci_hcd
&lt;span class="o"&gt;[&lt;/span&gt;  &lt;span class="m"&gt;992&lt;/span&gt;.402181&lt;span class="o"&gt;]&lt;/span&gt; usb &lt;span class="m"&gt;2&lt;/span&gt;-1: New USB device found, &lt;span class="nv"&gt;idVendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1a86, &lt;span class="nv"&gt;idProduct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;7523&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;  &lt;span class="m"&gt;992&lt;/span&gt;.402185&lt;span class="o"&gt;]&lt;/span&gt; usb &lt;span class="m"&gt;2&lt;/span&gt;-1: New USB device strings: &lt;span class="nv"&gt;Mfr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;, &lt;span class="nv"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;, &lt;span class="nv"&gt;SerialNumber&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;  &lt;span class="m"&gt;992&lt;/span&gt;.402187&lt;span class="o"&gt;]&lt;/span&gt; usb &lt;span class="m"&gt;2&lt;/span&gt;-1: Product: USB2.0-Serial
&lt;span class="o"&gt;[&lt;/span&gt;  &lt;span class="m"&gt;992&lt;/span&gt;.402757&lt;span class="o"&gt;]&lt;/span&gt; ch341 &lt;span class="m"&gt;2&lt;/span&gt;-1:1.0: ch341-uart converter detected
&lt;span class="o"&gt;[&lt;/span&gt;  &lt;span class="m"&gt;992&lt;/span&gt;.403119&lt;span class="o"&gt;]&lt;/span&gt; usb &lt;span class="m"&gt;2&lt;/span&gt;-1: ch341-uart converter now attached to ttyUSB0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ file /dev/ttyUSB0
/dev/ttyUSB0: character special &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;188&lt;/span&gt;/0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ta có thấy xuất hiện 1 file mới gọi là &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;, đây chính là thiết bị
vừa kết nối.&lt;/p&gt;
&lt;h3&gt;Cài đặt MicroPython sử dụng esptool&lt;/h3&gt;
&lt;p&gt;Cài đặt esptool dùng pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pip install esptool
Collecting esptool
...
Successfully installed ecdsa-0.13 esptool-2.5.1 pyaes-1.6.1 pyserial-3.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Xóa nội dung hiện tại trong flash memory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hvn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;py36&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;esptool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ttyUSB0&lt;/span&gt; &lt;span class="n"&gt;erase_flash&lt;/span&gt;
&lt;span class="n"&gt;esptool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;
&lt;span class="n"&gt;Serial&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ttyUSB0&lt;/span&gt;
&lt;span class="n"&gt;Connecting&lt;/span&gt;&lt;span class="o"&gt;....&lt;/span&gt;
&lt;span class="n"&gt;Detecting&lt;/span&gt; &lt;span class="n"&gt;chip&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;ESP8266&lt;/span&gt;
&lt;span class="n"&gt;Chip&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ESP8266EX&lt;/span&gt;
&lt;span class="n"&gt;Features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;WiFi&lt;/span&gt;
&lt;span class="n"&gt;MAC&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;e6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;Uploading&lt;/span&gt; &lt;span class="n"&gt;stub&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;stub&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Stub&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Erasing&lt;/span&gt; &lt;span class="n"&gt;flash&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;take&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Chip&lt;/span&gt; &lt;span class="n"&gt;erase&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="n"&gt;Hard&lt;/span&gt; &lt;span class="n"&gt;resetting&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;RTS&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tải MicroPython bản dành cho ESP8266: bản mới nhất tại thời điểm viết bài
http://micropython.org/resources/firmware/esp8266-20180511-v1.9.4.bin&lt;/p&gt;
&lt;p&gt;Ghi micropython lên flash memory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hvn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;py36&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;esptool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ttyUSB0&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;baud&lt;/span&gt; &lt;span class="mi"&gt;460800&lt;/span&gt; &lt;span class="n"&gt;write_flash&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;flash_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;detect&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fm&lt;/span&gt; &lt;span class="n"&gt;dio&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;esp8266&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20180511&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;9.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;span class="n"&gt;esptool&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;
&lt;span class="n"&gt;Serial&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ttyUSB0&lt;/span&gt;
&lt;span class="n"&gt;Connecting&lt;/span&gt;&lt;span class="o"&gt;....&lt;/span&gt;
&lt;span class="n"&gt;Detecting&lt;/span&gt; &lt;span class="n"&gt;chip&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;ESP8266&lt;/span&gt;
&lt;span class="n"&gt;Chip&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ESP8266EX&lt;/span&gt;
&lt;span class="n"&gt;Features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;WiFi&lt;/span&gt;
&lt;span class="n"&gt;MAC&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;e6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;Uploading&lt;/span&gt; &lt;span class="n"&gt;stub&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;stub&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Stub&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Changing&lt;/span&gt; &lt;span class="n"&gt;baud&lt;/span&gt; &lt;span class="n"&gt;rate&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;460800&lt;/span&gt;
&lt;span class="n"&gt;Changed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Configuring&lt;/span&gt; &lt;span class="n"&gt;flash&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;detected&lt;/span&gt; &lt;span class="n"&gt;Flash&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;
&lt;span class="n"&gt;Flash&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mh"&gt;0x0240&lt;/span&gt;
&lt;span class="n"&gt;Compressed&lt;/span&gt; &lt;span class="mi"&gt;604872&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mf"&gt;394893.&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;
&lt;span class="n"&gt;Wrote&lt;/span&gt; &lt;span class="mi"&gt;604872&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;394893&lt;/span&gt; &lt;span class="n"&gt;compressed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x00000000&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;9.0&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;effective&lt;/span&gt; &lt;span class="mf"&gt;536.4&lt;/span&gt; &lt;span class="n"&gt;kbit&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Hash&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;verified&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Leaving&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Hard&lt;/span&gt; &lt;span class="n"&gt;resetting&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;RTS&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi cài đặt xong, bấm nút "reset" trên thiết bị để khởi động lại, ngay sau
đó bật WIFI của laptop hay điện thoại lên ta sẽ thấy một mạng WIFI có tên
&lt;code&gt;MicroPython-xxxxxx&lt;/code&gt;, có thể kết nối vào WIFI này với password &lt;code&gt;micropythoN&lt;/code&gt;.
Ở đây ta không cần làm việc này. Tiếp tục cài đặt để kết nối với thiết bị qua
cổng COM:&lt;/p&gt;
&lt;p&gt;Cài &lt;code&gt;picocom&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt install -y picocom
$ sudo picocom /dev/ttyUSB0 --baud &lt;span class="m"&gt;115200&lt;/span&gt;
picocom v1.7

port is        : /dev/ttyUSB0
flowcontrol    : none
baudrate is    : &lt;span class="m"&gt;115200&lt;/span&gt;
parity is      : none
databits are   : &lt;span class="m"&gt;8&lt;/span&gt;
escape is      : C-a
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; is  : no
noinit is      : no
noreset is     : no
nolock is      : no
send_cmd is    : sz -vv
receive_cmd is : rz -vv
imap is        :
omap is        :
emap is        : crcrlf,delbs,

Terminal ready

&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt;**1000
&lt;span class="m"&gt;10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi kết nối, ta lập tức sử dụng Python interpreter như bình thường.&lt;/p&gt;
&lt;p&gt;Python interpreter đóng vai trò như 1 hệ điều hành ở đây, mỗi lần reset thiết bị,
nó sẽ lại bật lại Python interpreter.
Mọi tương tác với thiết bị (đọc/ghi file) đều thực hiện qua code python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;boot.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;main.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hai file này được chạy mỗi lần thiết bị khởi động.&lt;/p&gt;
&lt;p&gt;Xem nội dung file &lt;code&gt;boot.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;boot.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;# This file is executed on every boot (including wake-boot from deepsleep)&lt;/span&gt;
&lt;span class="c1"&gt;#import esp&lt;/span&gt;
&lt;span class="c1"&gt;#esp.osdebug(None)&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gc&lt;/span&gt;
&lt;span class="c1"&gt;#import webrepl&lt;/span&gt;
&lt;span class="c1"&gt;#webrepl.start()&lt;/span&gt;
    &lt;span class="n"&gt;gc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;File &lt;code&gt;main.py&lt;/code&gt; chứa code của người dùng muốn chạy mỗi lần bật thiết bị. Ví dụ ta muốn hiển thị dòng hello PyMi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;main.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;print(&amp;quot;Hello Pymi.vn&amp;quot;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bấm nút reset sẽ thấy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
&lt;span class="nv"&gt;ets_task&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40100130&lt;/span&gt;, &lt;span class="mi"&gt;3&lt;/span&gt;, &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nv"&gt;fff83ec&lt;/span&gt;, &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;Hello&lt;/span&gt; &lt;span class="nv"&gt;Pymi&lt;/span&gt;.&lt;span class="nv"&gt;vn&lt;/span&gt;

&lt;span class="nv"&gt;MicroPython&lt;/span&gt; &lt;span class="nv"&gt;v1&lt;/span&gt;.&lt;span class="mi"&gt;9&lt;/span&gt;.&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ga9a3caad0&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="c1"&gt;; ESP module with ESP8266&lt;/span&gt;
&lt;span class="nv"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;help()&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;more&lt;/span&gt; &lt;span class="nv"&gt;information&lt;/span&gt;.
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thao tác với các chân Pin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;machine&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;P0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;P0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="vm"&gt;__class__&lt;/span&gt;       &lt;span class="n"&gt;IN&lt;/span&gt;              &lt;span class="n"&gt;IRQ_FALLING&lt;/span&gt;     &lt;span class="n"&gt;IRQ_RISING&lt;/span&gt;
&lt;span class="n"&gt;OPEN_DRAIN&lt;/span&gt;      &lt;span class="n"&gt;OUT&lt;/span&gt;             &lt;span class="n"&gt;PULL_UP&lt;/span&gt;         &lt;span class="n"&gt;init&lt;/span&gt;
&lt;span class="n"&gt;irq&lt;/span&gt;             &lt;span class="n"&gt;off&lt;/span&gt;             &lt;span class="n"&gt;on&lt;/span&gt;              &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;P0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;P0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Baud&lt;/h3&gt;
&lt;p&gt;Baud /ˈbɔːd/ ở câu lệnh trên là một độ đo "symbol rate" (symbol per second), để
quyết định tốc độ giao tiếp qua một kênh thông tin.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Với MicroPython trên thiết bị, ta đã có thể thực hiện điều khiển các chân Pin hay gửi HTTP request như code Python bình thường. Giờ thì giới hạn chỉ còn là trí tưởng tượng của bạn.&lt;/p&gt;
&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://docs.micropython.org/en/latest/esp8266/tutorial/intro.html#intro&lt;/li&gt;
&lt;li&gt;https://wiki.wemos.cc/products:d1:d1_mini&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="micropython"></category><category term="embedded"></category><category term="esp8266"></category><category term="iot"></category></entry><entry><title>Dùng Raspberry Pi để gửi và nhận SMS với Sim900A</title><link href="http://pp.pymi.vn/article/raspberry-pi-sim900a/" rel="alternate"></link><published>2018-10-09T00:00:00+07:00</published><updated>2018-10-09T00:00:00+07:00</updated><author><name>tudoanh</name></author><id>tag:pp.pymi.vn,2018-10-09:/article/raspberry-pi-sim900a/</id><summary type="html">&lt;p&gt;Summary: Hướng dẫn kết nối module Sim900A với Raspberry Pi 3 B+, dùng để gửi và nhận tin nhắn SMS&lt;/p&gt;
&lt;p&gt;Dạo này vì lý do công việc nên cần phải tìm cách kết nối và sử dụng module Sim900A với con Raspberry Pi 3, dùng để nhận SMS.&lt;/p&gt;
&lt;p&gt;Tìm hiểu …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Summary: Hướng dẫn kết nối module Sim900A với Raspberry Pi 3 B+, dùng để gửi và nhận tin nhắn SMS&lt;/p&gt;
&lt;p&gt;Dạo này vì lý do công việc nên cần phải tìm cách kết nối và sử dụng module Sim900A với con Raspberry Pi 3, dùng để nhận SMS.&lt;/p&gt;
&lt;p&gt;Tìm hiểu mấy hôm, rất là cực nên hôm nay mình viết lại bài này, cho những ai cần tới sau này đỡ tốn thời gian mày mò lại từ đầu.&lt;/p&gt;
&lt;h3&gt;Chuẩn bị&lt;/h3&gt;
&lt;p&gt;Để bắt đầu, bạn cần:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Một combo &lt;strong&gt;Raspberry Pi 3 B+&lt;/strong&gt; đầy đủ nguồn, thẻ nhớ, đã cài đặt &lt;strong&gt;Raspbian&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Một module &lt;strong&gt;Sim900A&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/vvIy62p.jpg" src="https://i.imgur.com/vvIy62p.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dây chuyển đổi USB - UART PL2303 (Có thể không có)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/wWkr422.jpg" src="https://i.imgur.com/wWkr422.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Đầy đủ dây nối&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/C40X3gs.png" src="https://i.imgur.com/C40X3gs.png"&gt;&lt;/p&gt;
&lt;h3&gt;Kết nối&lt;/h3&gt;
&lt;p&gt;Chỉ cần bạn kết nối đúng các cổng &lt;em&gt;Tx, Rx, Gnd và nguồn 5v&lt;/em&gt; vào Pi là xong. Tham khảo ảnh dưới:&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.ytimg.com/vi/louSyBRkvO4/maxresdefault.jpg" src="https://i.ytimg.com/vi/louSyBRkvO4/maxresdefault.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Ảnh thực tế (Nếu kết nối thẳng vào GPIO)&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/KRanp3y.jpg" src="https://i.imgur.com/KRanp3y.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/dQhoN8e.jpg" src="https://i.imgur.com/dQhoN8e.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Còn nếu kết nối qua USB&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/2DHsQCx.jpg" src="https://i.imgur.com/2DHsQCx.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Cài đặt&lt;/h3&gt;
&lt;p&gt;Đầu tiên ta cần mở cổng &lt;strong&gt;ttyS0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bạn có thể dùng "raspi-config" để mở UART:&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/NVchkKl.png" src="https://i.imgur.com/NVchkKl.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trong "Interfacing Options", chọn "Serial"&lt;/li&gt;
&lt;li&gt;Chọn "No" khi được hỏi "You want a login shell over serial?".&lt;/li&gt;
&lt;li&gt;Chọn "Yes" khi được hỏi "You want the hardware enabled?"&lt;/li&gt;
&lt;li&gt;Khởi động lại&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thực ra, bạn có thể sửa file &lt;em&gt;/boot/config.txt&lt;/em&gt; và sửa &lt;strong&gt;enable_uart=1&lt;/strong&gt;, và &lt;strong&gt;console=serial0,115200&lt;/strong&gt; (hoặc &lt;strong&gt;console=ttyS0,115200&lt;/strong&gt;) ở trong &lt;em&gt;/boot/cmdline.txt&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Và bạn có thể bật &lt;em&gt;terminal&lt;/em&gt; lên và test xem kết nối thành công chưa bằng cách gửi command &lt;strong&gt;AT\r\n&lt;/strong&gt; đến khi nào trả về &lt;strong&gt;OK&lt;/strong&gt; là thành công. (Nếu kết nối qua GPIO thì sẽ là &lt;strong&gt;/dev/ttyS0&lt;/strong&gt;, còn qua USB thì sẽ là &lt;strong&gt;/dev/ttyUSB0&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;Ví dụ:&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/59K45tV.png" src="https://i.imgur.com/59K45tV.png"&gt;&lt;/p&gt;
&lt;p&gt;Link asciinema:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/a/U3oPOg0vX4CZ5u3mWTTIr0FTS"&gt;&lt;img alt="asciicast" src="https://asciinema.org/a/U3oPOg0vX4CZ5u3mWTTIr0FTS.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sau đó bạn có thể gửi và đọc tin nhắn bằng lib mình đã viết ở đây (Ví dụ cách sử dụng ở trong link):&lt;/p&gt;
&lt;p&gt;https://github.com/tudoanh/sim900a&lt;/p&gt;
&lt;p&gt;Ví dụ về kết quả nhận được bằng lệnh &lt;strong&gt;AT+CNMI=3,2,0,0,0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="https://i.imgur.com/ecz65hk.png" src="https://i.imgur.com/ecz65hk.png"&gt;&lt;/p&gt;
&lt;p&gt;Về chi tiết cách sử dụng các lệnh AT và các khái niệm GPIO, UART mình sẽ để sang một bài khác.&lt;/p&gt;
&lt;p&gt;Chúc các bạn thành công.&lt;/p&gt;
&lt;p&gt;Tham khảo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;https://pinout.xyz/&lt;/li&gt;
&lt;li&gt;http://mlab.vn/9216-huong-dan-lap-trinh-module-sim900a-va-arduino.html&lt;/li&gt;
&lt;li&gt;https://www.developershome.com/sms/checkCommandSupport3.asp&lt;/li&gt;
&lt;li&gt;https://raspberrypi.stackexchange.com/questions/82696/how-do-i-connect-gsm-sim-900a-to-a-raspberry-pi-3&lt;/li&gt;
&lt;li&gt;https://www.espruino.com/datasheets/SIM900_AT.pdf&lt;/li&gt;
&lt;li&gt;https://hristoborisov.com/index.php/projects/turning-the-raspberry-pi-into-a-sms-center-using-python/#Connecting_the_3gModem&lt;/li&gt;
&lt;/ol&gt;</content><category term="Trang chủ"></category><category term="raspberry"></category><category term="pi"></category><category term="sim"></category><category term="900a"></category><category term="sms"></category></entry><entry><title>Quản lý, sử dụng package trong CHICKEN Scheme</title><link href="http://pp.pymi.vn/article/scm_egg/" rel="alternate"></link><published>2018-10-05T00:00:00+07:00</published><updated>2018-10-05T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-10-05:/article/scm_egg/</id><summary type="html">&lt;p&gt;Con đường nhanh nhất để sử dụng 1 ngôn ngữ là dùng nó!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Học và hành thường ở rất xa nhau.
Ta có thể học đủ loại khái niệm, đủ loại cú pháp, viết các thuật toán để luyện
ngôn ngữ, nhưng rồi lại mãi luẩn quẩn ở đó, không thoát ra được, không bay
lên nổi. Viết 1 vòng for, 2 câu if bằng Python, JavaScript, Golang hay
&lt;a href="https://elixir.pymi.vn/"&gt;Elixir&lt;/a&gt;
cũng không hơn nhau gì cả, chỉ thay đổi chút cú pháp thôi.&lt;/p&gt;
&lt;p&gt;Thế nên cách "tốt nhất" để học 1 ngôn ngữ lập trình, không phải là học đủ các
khái niệm, best practice, viết code chuẩn đẹp tuyệt đối, mà là việc hoàn thành
một sản phẩm từ đầu đến tận X Y Z. Đưa ra sản phẩm cuối cùng, có thể là trang
web chạy với domain hẳn hoi, có thể là chương trình đóng thành package,
thành file cài đặt, hay game có giao diện đầy đủ.&lt;/p&gt;
&lt;p&gt;Package manager giúp cài đặt các thư viện có sẵn là công cụ giúp ta đến đích
nhanh nhất. Python có pip, JavaScript có NPM, Elixir có mix, Rust có cargo ...
thì CHICKEN Scheme có &lt;code&gt;chicken-install&lt;/code&gt;, câu lệnh có sẵn khi cài CHICKEN
Scheme.&lt;/p&gt;
&lt;h2&gt;Cài đặt extension&lt;/h2&gt;
&lt;p&gt;CHICKEN Scheme gọi các gói thư viện là extension hay "egg".&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chicken-install tên-extension&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ví dụ cài &lt;code&gt;regex&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo chicken-install regex
&lt;span class="o"&gt;[&lt;/span&gt;sudo&lt;span class="o"&gt;]&lt;/span&gt; password &lt;span class="k"&gt;for&lt;/span&gt; hvn:  GO PASSWORD
retrieving ...
connecting to host &lt;span class="s2"&gt;&amp;quot;chicken.kitten-technologies.co.uk&amp;quot;&lt;/span&gt;, port &lt;span class="m"&gt;80&lt;/span&gt; ...
requesting &lt;span class="s2"&gt;&amp;quot;/henrietta.cgi?name=regex&amp;amp;mode=default&amp;quot;&lt;/span&gt; ...
reading response ...
HTTP/1.1 &lt;span class="m"&gt;200&lt;/span&gt; OK
Date: Fri, &lt;span class="m"&gt;05&lt;/span&gt; Oct &lt;span class="m"&gt;2018&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt;:28:32 GMT
Server: Apache/2.2.31 &lt;span class="o"&gt;(&lt;/span&gt;Unix&lt;span class="o"&gt;)&lt;/span&gt; DAV/2 PHP/5.5.36 mod_fastcgi/2.4.6
...
checking platform &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;regex&lt;span class="s1"&gt;&amp;#39; ...&lt;/span&gt;
&lt;span class="s1"&gt;checking dependencies for `regex&amp;#39;&lt;/span&gt; ...
install order:
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;regex&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
installing regex:1.0 ...
changing current directory to /tmp/tempab50.21917/regex
  &lt;span class="s1"&gt;&amp;#39;/usr/bin/csi&amp;#39;&lt;/span&gt; -bnq -setup-mode -e &lt;span class="s2"&gt;&amp;quot;(require-library setup-api)&amp;quot;&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;(import setup-api)&amp;quot;&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;(setup-error-handling)&amp;quot;&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;(extension-name-and-version &amp;#39;(\&amp;quot;regex\&amp;quot; \&amp;quot;1.0\&amp;quot;))&amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;regex.setup&amp;#39;&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;/usr/bin/csc&amp;#39;&lt;/span&gt; -feature compiling-extension -setup-mode    -s -O3 -d1 regex.scm -JS
  &lt;span class="s1"&gt;&amp;#39;/usr/bin/csc&amp;#39;&lt;/span&gt; -feature compiling-extension -setup-mode    -s -O3 -d0 regex.import.scm
  cp -r &lt;span class="s1"&gt;&amp;#39;regex.so&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/lib/chicken/7/regex.so&amp;#39;&lt;/span&gt;
  chmod a+r &lt;span class="s1"&gt;&amp;#39;/var/lib/chicken/7/regex.so&amp;#39;&lt;/span&gt;
  cp -r &lt;span class="s1"&gt;&amp;#39;regex.import.so&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/var/lib/chicken/7/regex.import.so&amp;#39;&lt;/span&gt;
  chmod a+r &lt;span class="s1"&gt;&amp;#39;/var/lib/chicken/7/regex.import.so&amp;#39;&lt;/span&gt;
  chmod a+r &lt;span class="s1"&gt;&amp;#39;/var/lib/chicken/7/regex.setup-info&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bật &lt;code&gt;csi&lt;/code&gt; lên để gõ code gọi function &lt;code&gt;grep&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;csi&lt;/span&gt;
&lt;span class="nv"&gt;/usr/bin/rlwrap&lt;/span&gt;

&lt;span class="nv"&gt;CHICKEN&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2008-2014&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;Chicken&lt;/span&gt; &lt;span class="nv"&gt;Team&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2000-2007&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;Felix&lt;/span&gt; &lt;span class="nv"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;Winkelmann&lt;/span&gt;
&lt;span class="nv"&gt;Version&lt;/span&gt; &lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;stability/4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;9.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;b3189b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;linux-unix-gnu-x86-64&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="nv"&gt;bit&lt;/span&gt; &lt;span class="nv"&gt;manyargs&lt;/span&gt; &lt;span class="nv"&gt;dload&lt;/span&gt; &lt;span class="nv"&gt;ptables&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;bootstrapped&lt;/span&gt; &lt;span class="mi"&gt;2014-06-07&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="c1"&gt;;1&amp;gt; (grep &amp;quot;[0-9]&amp;quot; (list &amp;quot;pymi&amp;quot; &amp;quot;2018&amp;quot; &amp;quot;pymi2018&amp;quot;))&lt;/span&gt;

&lt;span class="nv"&gt;Error:&lt;/span&gt; &lt;span class="nv"&gt;unbound&lt;/span&gt; &lt;span class="nv"&gt;variable:&lt;/span&gt; &lt;span class="nv"&gt;grep&lt;/span&gt;

    &lt;span class="nv"&gt;Call&lt;/span&gt; &lt;span class="nv"&gt;history:&lt;/span&gt;

    &lt;span class="nv"&gt;&amp;lt;syntax&amp;gt;&lt;/span&gt;      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;grep&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[0-9]&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pymi&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2018&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pymi2018&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nv"&gt;&amp;lt;syntax&amp;gt;&lt;/span&gt;      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pymi&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2018&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pymi2018&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;&amp;lt;eval&amp;gt;&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;grep&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[0-9]&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pymi&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2018&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pymi2018&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="nv"&gt;&amp;lt;--&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nội dung error rõ ràng: &lt;code&gt;Error: unbound variable: grep&lt;/code&gt; - không hiểu &lt;code&gt;grep&lt;/code&gt;
là cái gì - nó không phải một variable/function đã tồn tại.&lt;/p&gt;
&lt;h2&gt;Sử dụng / import extension&lt;/h2&gt;
&lt;p&gt;Dùng macro &lt;code&gt;use ten-extension&lt;/code&gt; (tại bài này cứ hiểu là function cũng tạm ổn)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="c1"&gt;;1&amp;gt; (use regex)&lt;/span&gt;
&lt;span class="c1"&gt;; loading /var/lib//chicken/7/regex.import.so ...&lt;/span&gt;
&lt;span class="c1"&gt;; loading /var/lib//chicken/7/chicken.import.so ...&lt;/span&gt;
&lt;span class="c1"&gt;; loading /var/lib//chicken/7/irregex.import.so ...&lt;/span&gt;
&lt;span class="c1"&gt;; loading /var/lib//chicken/7/regex.so ...&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="c1"&gt;;2&amp;gt; (grep &amp;quot;[0-9]&amp;quot; (list &amp;quot;pymi&amp;quot; &amp;quot;2018&amp;quot; &amp;quot;pymi2018&amp;quot;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2018&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pymi2018&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ta thu được list các phần tử có chứa số, string "[0-9]" là regular expression
biểu diễn một số hệ 10.&lt;/p&gt;
&lt;h2&gt;Đọc tài liệu của module/function&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; ở trên làm gì? CHICKEN Scheme có chương trình &lt;code&gt;chicken-doc&lt;/code&gt; để tra
tài liêu, tương tự python có &lt;code&gt;pydoc&lt;/code&gt;. Để có &lt;code&gt;chicken-doc&lt;/code&gt;, cần cài extension
với lệnh: &lt;code&gt;sudo chicken-install chicken-doc&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ chicken-doc grep
path: &lt;span class="o"&gt;(&lt;/span&gt;regex grep&lt;span class="o"&gt;)&lt;/span&gt;

-- procedure: &lt;span class="o"&gt;(&lt;/span&gt;grep REGEX LIST &lt;span class="o"&gt;[&lt;/span&gt;ACCESSOR&lt;span class="o"&gt;])&lt;/span&gt;

Returns all items of &lt;span class="sb"&gt;`&lt;/span&gt;LIST&lt;span class="sb"&gt;`&lt;/span&gt; that match the regular expression &lt;span class="sb"&gt;`&lt;/span&gt;REGEX&lt;span class="sb"&gt;`&lt;/span&gt;. This procedure could be defined as follows:

  &lt;span class="o"&gt;(&lt;/span&gt;define &lt;span class="o"&gt;(&lt;/span&gt;grep regex lst&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;(&lt;/span&gt;filter &lt;span class="o"&gt;(&lt;/span&gt;lambda &lt;span class="o"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;string-search regex x&lt;span class="o"&gt;))&lt;/span&gt; lst&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="sb"&gt;`&lt;/span&gt;ACCESSOR&lt;span class="sb"&gt;`&lt;/span&gt; is an optional accessor-procedure applied to each element before doing the match. It should take a single argument
and &lt;span class="k"&gt;return&lt;/span&gt; a string that will &lt;span class="k"&gt;then&lt;/span&gt; be used &lt;span class="k"&gt;in&lt;/span&gt; the regular expression matching. &lt;span class="sb"&gt;`&lt;/span&gt;ACCESSOR&lt;span class="sb"&gt;`&lt;/span&gt; defaults to the identity &lt;span class="k"&gt;function&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ chicken-doc -i scheme  &lt;span class="c1"&gt;# đầy đủ doc về R5RS&lt;/span&gt;
...
$ chicken-doc -c scheme  &lt;span class="c1"&gt;# danh sách các procedure trong R5RS&lt;/span&gt;
...
$ chicken-doc data-structures
path: &lt;span class="o"&gt;(&lt;/span&gt;data-structures&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;==&lt;/span&gt; Unit data-structures

This unit contains a collection of procedures related to data structures. This unit is used by default, unless the
program is compiled with the &lt;span class="sb"&gt;`&lt;/span&gt;-explicit-use&lt;span class="sb"&gt;`&lt;/span&gt; option.
...


$ chicken-doc when &lt;span class="c1"&gt;# tìm từ khóa when, thấy 2 kết quả&lt;/span&gt;
Found &lt;span class="m"&gt;2&lt;/span&gt; matches:
&lt;span class="o"&gt;(&lt;/span&gt;spock when&lt;span class="o"&gt;)&lt;/span&gt;                  &lt;span class="o"&gt;(&lt;/span&gt;when X1 BODY ...&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;chicken special-forms when&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;(&lt;/span&gt;when TEST EXP1 EXP2 ...&lt;span class="o"&gt;)&lt;/span&gt;
$ chicken-doc chicken special-forms when &lt;span class="c1"&gt;# xem kết quả thứ 2&lt;/span&gt;

-- syntax: &lt;span class="o"&gt;(&lt;/span&gt;when TEST EXP1 EXP2 ...&lt;span class="o"&gt;)&lt;/span&gt;

Equivalent to:

  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; TEST &lt;span class="o"&gt;(&lt;/span&gt;begin EXP1 EXP2 ...&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Pydoc đi kèm với Python có khả năng tương tự:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pydoc len

Help on built-in &lt;span class="k"&gt;function&lt;/span&gt; len &lt;span class="k"&gt;in&lt;/span&gt; module builtins:

len&lt;span class="o"&gt;(&lt;/span&gt;obj, /&lt;span class="o"&gt;)&lt;/span&gt;
    Return the number of items &lt;span class="k"&gt;in&lt;/span&gt; a container.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Liệt kê các extension có trên "mạng"&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ chicken-install -list
2d-primitives
3viewer
9ML-toolkit
9p
AD
F-operator
R
abnf
accents-substitute
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tại thời điểm viết bài, có 781 egg trong kho - hơi ít.&lt;/p&gt;
&lt;h2&gt;Xem các extension library đã cài&lt;/h2&gt;
&lt;p&gt;Dùng lệnh &lt;code&gt;chicken-status&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ chicken-status
apropos ......................................... version: &lt;span class="m"&gt;2&lt;/span&gt;.1.0
check-errors .................................... version: &lt;span class="m"&gt;2&lt;/span&gt;.2.0
chicken-doc ..................................... version: &lt;span class="m"&gt;0&lt;/span&gt;.4.7
chicken-doc-cmd ................................. version: &lt;span class="m"&gt;0&lt;/span&gt;.4.7
fmt ............................................. version: &lt;span class="m"&gt;0&lt;/span&gt;.808
fmt-c ........................................... version: &lt;span class="m"&gt;0&lt;/span&gt;.808
fmt-color ....................................... version: &lt;span class="m"&gt;0&lt;/span&gt;.808
fmt-js .......................................... version: &lt;span class="m"&gt;0&lt;/span&gt;.808
fmt-unicode ..................................... version: &lt;span class="m"&gt;0&lt;/span&gt;.808
iset .............................................. version: &lt;span class="m"&gt;2&lt;/span&gt;.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Gỡ extension&lt;/h2&gt;
&lt;p&gt;Sử dụng câu lệnh &lt;code&gt;chicken-uninstall TEN-extension&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Danh sách với thông tin các extension&lt;/h2&gt;
&lt;p&gt;Xem online tai &lt;a href=""&gt;http://eggs.call-cc.org/4/&lt;/a&gt; cho bản CHICKEN stable hiện tại:
version 4.&lt;/p&gt;
&lt;p&gt;Bài viết thực hiện trên:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;lsb_release&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;csi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;
&lt;span class="n"&gt;Release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="mf"&gt;16.04&lt;/span&gt;

&lt;span class="n"&gt;CHICKEN&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Chicken&lt;/span&gt; &lt;span class="n"&gt;Team&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Felix&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Winkelmann&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stability&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;b3189b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt; &lt;span class="n"&gt;manyargs&lt;/span&gt; &lt;span class="n"&gt;dload&lt;/span&gt; &lt;span class="n"&gt;ptables&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;bootstrapped&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hết phần 2.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="scheme"></category><category term="lisp"></category><category term="chicken"></category><category term="htdp"></category></entry><entry><title>Tuple comprehension</title><link href="http://pp.pymi.vn/article/tuple_comps/" rel="alternate"></link><published>2018-09-10T00:00:00+07:00</published><updated>2018-09-10T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-09-10:/article/tuple_comps/</id><summary type="html">&lt;p&gt;List comprehension, set/dict comprehension, còn tuple? Generator là gì?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python có sẵn (builtin) 4 kiểu dữ liệu "compound"/"container" quan trọng,
chúng dùng để chứa các giá trị. &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Một lập trình viên Python phải nắm thành thạo cả 4 kiểu dữ liệu trên và vận
dụng linh hoạt, biết điểm mạnh yếu của từng kiểu. Bàn về chuyện &lt;em&gt;ấy&lt;/em&gt; lại cần
vài bài dài dòng khác nên sẽ giữ lại "để sau"/"lúc nào rảnh".&lt;/p&gt;
&lt;h2&gt;Comprehension&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Comprehension&lt;/strong&gt; là một đặc sản của Python, một khi biết đến là hay bị nghiện,
thứ cú pháp ngắn gọn sạch sẽ ngọt như mía lùi cũng chính là vũ khí
giết những con ong ham ăn.&lt;/p&gt;
&lt;p&gt;Cú pháp này Python &lt;a href="https://docs.python.org/3/whatsnew/2.0.html"&gt;"vay mượn" mà không bao giờ trả từ
Haskell&lt;/a&gt;
 - một ngôn ngữ
vốn có tiếng khó học và vi diệu. Hãy thử xem 2 ví dụ sau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;vuong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tron&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tam giac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;more_than_four_chars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         &lt;span class="n"&gt;more_than_four_chars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;more_than_four_chars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vuong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Tam Giac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4 dòng code (dòng print không tính)
trên để ta filter (lọc) từ một tập hợp đã cho, thu về các phần tử
thỏa mãn điều kiện (hơn 4 ký tự) rồi map (biến đổi) các ký tự đứng đầu thành
chữ hoa.&lt;/p&gt;
&lt;p&gt;Dù đẹp sạch dễ hiểu lắm rồi, nhưng so với list comprehension:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;vuong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tron&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tam giac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vuong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Tam Giac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;thì sự ngắn gọn, đơn giản này đánh bại hoàn toàn cú pháp thông thường.&lt;/p&gt;
&lt;p&gt;Và ta còn làm tương tự được với &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Tuple comprehension&lt;/h2&gt;
&lt;p&gt;Dễ tưởng tượng ra là ta sẽ có luôn &lt;strong&gt;tuple comprehension&lt;/strong&gt; - vì nghe có vẻ hợp
lý mà:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;generator&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;SAI! khái niệm &lt;strong&gt;tuple comprehension&lt;/strong&gt; không tồn tại. Cùng cú pháp nhưng kết
quả thu được là 1 &lt;strong&gt;generator&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Vì sao thế?&lt;/h2&gt;
&lt;p&gt;Tuple được tạo ra, ban đầu trông như 1 phiên bản thiếu tính năng của &lt;code&gt;list&lt;/code&gt;,
nhưng mục đích tạo ra tuple là hoàn toàn khác. &lt;code&gt;tuple&lt;/code&gt; được dùng như khái
niệm &lt;code&gt;struct&lt;/code&gt; trong các ngôn ngữ khác, nó là tập hợp của các thông tin khác
nhau:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Meo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0699609096&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PyMi.vn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;và khi dùng thì unpack các giá trị ra:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;school&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;school&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PyMi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Còn list dùng để lặp qua/ duyệt qua:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;vuong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tron&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tam giac&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello các bạn mình là &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;các&lt;/span&gt; &lt;span class="n"&gt;bạn&lt;/span&gt; &lt;span class="n"&gt;mình&lt;/span&gt; &lt;span class="n"&gt;là&lt;/span&gt; &lt;span class="n"&gt;Vuong&lt;/span&gt;
&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;các&lt;/span&gt; &lt;span class="n"&gt;bạn&lt;/span&gt; &lt;span class="n"&gt;mình&lt;/span&gt; &lt;span class="n"&gt;là&lt;/span&gt; &lt;span class="n"&gt;Tron&lt;/span&gt;
&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;các&lt;/span&gt; &lt;span class="n"&gt;bạn&lt;/span&gt; &lt;span class="n"&gt;mình&lt;/span&gt; &lt;span class="n"&gt;là&lt;/span&gt; &lt;span class="n"&gt;Tam&lt;/span&gt; &lt;span class="n"&gt;Giac&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Xem thêm tại &lt;a href="https://docs.python.org/3/faq/design.html#why-are-there-separate-tuple-and-list-data-types"&gt;FAQ của
Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok, vậy chẳng có nghĩa lý gì để "comprehension" ra tuple cả.&lt;/p&gt;
&lt;h2&gt;Lập trình viên phê list comprehension túy lúy!&lt;/h2&gt;
&lt;p&gt;Đã dùng là nghiện, mà nghiện là rất khó tỉnh. List comprehension hấp dẫn vậy
nên thường bị dùng SAI, lạm dụng. Một điều duy nhất quan trọng cần nhớ:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;List comprehension là để tạo ra list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thế nhưng không ít lần, nó bị lạm dụng, khi người ta không cần đến list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;khi chỉ cần đếm "số lượng phần tử"&lt;/li&gt;
&lt;li&gt;để tính tổng&lt;/li&gt;
&lt;li&gt;để in ra màn hình&lt;/li&gt;
&lt;li&gt;để viết những vòng lặp điều kiện phức tạp.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;List comprehension tạo ra 1 list, vậy nên nếu không cần tới list kết quả đó
thì không nên dùng tới list comprehension mà hãy dùng vòng lặp for thông thường:&lt;/p&gt;
&lt;p&gt;Đừng viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;VUONG&lt;/span&gt;
&lt;span class="n"&gt;TRON&lt;/span&gt;
&lt;span class="n"&gt;TAM&lt;/span&gt; &lt;span class="n"&gt;GIAC&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hãy viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;VUONG&lt;/span&gt;
&lt;span class="n"&gt;TRON&lt;/span&gt;
&lt;span class="n"&gt;TAM&lt;/span&gt; &lt;span class="n"&gt;GIAC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ta không tạo ra 1 cái list vô nghĩa chứa 3 phần tử &lt;code&gt;None&lt;/code&gt; - tức là tiết kiệm bộ
nhớ (memory).&lt;/p&gt;
&lt;p&gt;Đừng viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hãy viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;450&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;vì ta sẽ không tạo ra 1 list (tạm) chứa 450 phần tử.&lt;/p&gt;
&lt;p&gt;Và đừng viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;12499997500000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mà hãy viết:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;sum_zero_to_5mil&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;sum_zero_to_5mil&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_zero_to_5mil&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;sum_zero_to_5mil&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;12499997500000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;bởi ta sẽ không &lt;em&gt;vô tình&lt;/em&gt; tạo ra một list chiếm tới ~180MB bộ nhớ chỉ để tính
tổng.&lt;/p&gt;
&lt;p&gt;Cách tính&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;list_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;all_numbers_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5000000&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;all_numbers_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_size&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;all_numbers_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;40215168&lt;/span&gt; &lt;span class="mi"&gt;140000000&lt;/span&gt; &lt;span class="mi"&gt;180215168&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và nếu như số vòng &lt;code&gt;for&lt;/code&gt; hay lệnh &lt;code&gt;if&lt;/code&gt; trong list comprehension nhiều hơn 2,3
nó không còn sạch sẽ và dễ đọc nữa, hãy quay trở về dùng vòng lặp &lt;code&gt;for&lt;/code&gt; thông
thường. &lt;a href="https://wikileaks.org/ciav7p1/cms/page_26607631.html"&gt;Ở CIA họ dạy thế&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;List/set/dict comprehension rất tiện để tạo list/set/dict, nhưng khi không
cần tới list/set/dict kết quả, hãy đừng lạm dụng.&lt;/p&gt;
&lt;h2&gt;Generator&lt;/h2&gt;
&lt;p&gt;Generator sinh ra các phần tử của list tương ứng, nhưng mỗi lần, chỉ có 1
phần tử được tạo ra, vì vậy thường dùng để tiết kiệm RAM. Cú pháp tạo generator
đơn giản chỉ là thay dấu &lt;code&gt;[]&lt;/code&gt; thành &lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;19836760&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;5833329166668&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# chỗ này mượn tạm luôn dấu () của sum&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="mi"&gt;5833329166668&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Đã đến lúc lạm dụng &lt;strong&gt;generator&lt;/strong&gt;!!! nó được dùng mọi nơi trong Python3 và
là một cải tiến hấp dẫn của Python3 so với Python2.&lt;/p&gt;
&lt;h2&gt;Hết.&lt;/h2&gt;
&lt;p&gt;HVN at &lt;a href="https://pymi.vn"&gt;https://pymi.vn&lt;/a&gt; and http://www.familug.org&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="tuple"></category><category term="list"></category><category term="comprehension"></category><category term="memory"></category><category term="generator"></category></entry><entry><title>Bắt đầu lập trình CHICKEN Scheme</title><link href="http://pp.pymi.vn/article/scm1/" rel="alternate"></link><published>2018-09-03T00:00:00+07:00</published><updated>2018-09-03T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-09-03:/article/scm1/</id><summary type="html">&lt;p&gt;Cu Hít ở xứ sở LISP - 1 trong 2 ngôn lập trình lâu đời nhất trái đất.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ba năm trước, khi chúng tôi bắt đầu mở khóa học đầu tiên dạy lập trình Python tại
&lt;a href="https://pymi.vn"&gt;PyMi&lt;/a&gt;, có 8 học viên đi học, hầu hết đều là sysadmin của một
công ty nào đó từng động tới OpenStack/SaltStack/Ansible.
Mới chỉ 3 năm trước, khi những người nghe tới Python tại Việt Nam
là những "hàng hiếm", thì tại thời điểm này, 2018, Python nhan nhản mọi nơi,
các trường (đại) học bắt đầu đưa Python vào chương trình giảng dạy, các
công ty tuyển Python như điên dại, làm Machine Learning, làm Odoo...
các chị em kế toán, ngân hàng bắt đầu kéo nhau đi học code Python!&lt;/p&gt;
&lt;p&gt;Hầu hết số đông đến với Python không phải vì ham mê lập trình, yêu thích những
dòng code sạch sẽ, mà đơn giản bởi (1) công việc yêu cầu (2) kiếm tiền.
Khi đạt được múc đích rồi thì sao? đơn giản là thì thôi. Việc này không có gì
sai cả.&lt;/p&gt;
&lt;p&gt;Vậy còn những người ham mê lập trình, yêu thích code thì làm gì? Họ tiếp tục
đào sâu thêm, học thêm vô vàn kiến thức trong thế giới lập trình, mở rộng
ra những ngôn ngữ mới, cách viết code mới, cách suy nghĩ mới.&lt;/p&gt;
&lt;p&gt;Python thành công bởi ngôn ngữ sạch sẽ, (dẫn tới) cộng đồng đông đảo, (dẫn
tới) các thư viện có sẵn rất nhiều, chất lượng chuẩn, cập nhật hàng ngày.
Hầu hết các ngôn ngữ bạn từng nghe tên sẽ nằm trong nhóm này, những ngôn ngữ
còn lại (có tới hàng ngàn ngôn ngữ lập trình) thường bị xem là "đã chết".
Một ngôn ngữ mã nguồn mở chỉ thực sự chết khi cộng đồng không còn một ai,
những ngôn ngữ bạn chưa nghe tên bao giờ có khi đơn giản vì bạn không quen
ai dùng ngôn ngữ đó.&lt;/p&gt;
&lt;p&gt;Python sinh năm 1991, C sinh năm 197x, thì LISP sinh ra vào năm 1958 (60 năm
trước - chỉ sau Fortran 1 năm - &lt;a href="https://www.familug.org/2016/02/python-python-tuoi-gi.html"&gt;xem bảng tuổi các ngôn
ngữ&lt;/a&gt; ).
Hẵn rất dễ cho rằng LISP đã chết, vì chẳng gặp ai ở Việt Nam dùng nó. Cho tới
khi bạn gặp một anh kỹ sư xây dựng dùng AutoCAD vẽ bản vẽ 2D thiết kế nhà,
và cộng đồng này vẫn truyền tay nhau những đoạn code LISP.&lt;/p&gt;
&lt;p&gt;Cộng đồng quốc tế rất đánh giá cao LISP, và có những thời điểm lịch sử, LISP
được gọi là ngôn ngữ của AI (một hướng phát triển AI rất khác so với
Machine Learning/Deep Learning sau này).&lt;/p&gt;
&lt;p&gt;LISP (&lt;strong&gt;LIS&lt;/strong&gt;t &lt;strong&gt;P&lt;/strong&gt;rocessor) là tên của một gia đình các ngôn ngữ lập trình,
có 2 nhánh (dialect) chính là Common Lisp và Scheme. Cả 2 dialect này đều có
đặc điểm chung sử dụng rất nhiều dấu &lt;code&gt;()&lt;/code&gt; nhưng khi thò tay vào code thì lại có
rất nhiều điểm khác. Một ví dụ viết function tính số gấp đôi của số đầu vào
bằng CHICKEN Scheme (một bản Scheme &lt;em&gt;còn sống&lt;/em&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;double&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;* &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Gọi function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;double&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So với Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;
&lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu xét kỹ, cú pháp của Scheme (&lt;code&gt;define&lt;/code&gt;) ít khái niệm/ký tự/nhất quán hơn
Python (&lt;code&gt;:&lt;/code&gt;, &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Một khái niệm khác rất quan trọng/phổ biến/nổi bật của LISP là sử dụng
macro (cùng khái niệm Macro trong C - nhưng mạnh mẽ hơn, ở một đẳng cấp hoàn
toàn khác).&lt;/p&gt;
&lt;h2&gt;Các dialect của LISP&lt;/h2&gt;
&lt;h3&gt;Common Lisp&lt;/h3&gt;
&lt;p&gt;Common Lisp để tồn tại sau nhiều năm lịch sử với sự cạnh tranh của hàng ngàn ngôn
ngữ lập trình khác, đã tự biến đổi mình như một sinh vật tiến hóa. Nó gom vào
mình cả lịch sử lẫn những mảnh ghép của cộng đồng, khiến cho Common Lisp khá
đồ sộ, thực dụng. Những từ khóa cơ bản trong Common Lisp như &lt;code&gt;cdr&lt;/code&gt;, &lt;code&gt;car&lt;/code&gt;
là viết tắt của những khái niệm phổ biến những năm 195x nhưng ngày nay không
còn được nhắc tới, cho nên Common Lisp hơi khó đọc đối với dân ngoại đạo.
Bộ tiêu chuẩn Common Lisp dài &lt;a href="https://www.techstreet.com/standards/incits-226-1994-r1999?product_id=56214"&gt;hơn 1000 trang
giấy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bản chạy opensource phổ biến nhất của CL là : &lt;a href="http://www.sbcl.org/"&gt;SBCL&lt;/a&gt;
một số bản thương mại rất đắt tiền.&lt;/p&gt;
&lt;h3&gt;Scheme&lt;/h3&gt;
&lt;p&gt;Scheme ra đời vào những năm 197X, với mong muốn có một bản LISP trong sạch,
dễ đọc, nhỏ gọn, không còn chứa những di tích lịch sử, không còn những từ khóa
khó hiểu như &lt;code&gt;cdr&lt;/code&gt;, &lt;code&gt;car&lt;/code&gt;. Scheme được dùng làm ngôn ngữ chính
để dạy học lập trình tại đại học danh giá MIT - nổi tiếng theo đó là SICP
- cuốn sách luôn nằm trong top 10 các cuốn sách về lập trình (xem cuối bài).&lt;/p&gt;
&lt;p&gt;NOTE: sau này vì lý do thực dụng, MIT dạy SICP bằng Python, không dùng Scheme
nữa.&lt;/p&gt;
&lt;p&gt;Scheme được thống nhất thành tiêu chuẩn viết tắt là R5RS, R6RS, R7RS
hay đầy đủ là &lt;strong&gt;Revised^5 Report on the Algorithmic Language Scheme&lt;/strong&gt; -
&lt;strong&gt;R&lt;/strong&gt;evised Revised Revised Revised Revised &lt;strong&gt;R&lt;/strong&gt;eport ... &lt;strong&gt;S&lt;/strong&gt;cheme.
Mỗi lần "revised" như vậy (tăng lên 1 số),
tiêu chuẩn lại thêm bớt gì đó, và chuyện này không phải ai cũng đồng ý, nên
nhiều bản chạy (implementation) quyết định chỉ
hỗ trợ R5RS mà ko chịu lên R6.&lt;/p&gt;
&lt;p&gt;Các bản Scheme nổi bật:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CHICKEN scheme&lt;/li&gt;
&lt;li&gt;Guile (cài sẵn trên các máy Ubuntu)&lt;/li&gt;
&lt;li&gt;Chez scheme&lt;/li&gt;
&lt;li&gt;Gambit&lt;/li&gt;
&lt;li&gt;MIT Scheme&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Clojure&lt;/h3&gt;
&lt;p&gt;Clojure nổi bật là 1 LISP-dialect HIỆN ĐẠI. Nó chạy trên JVM (như Java)
và được dùng phổ biến trong các doanh nghiệp công nghệ - tại thời điểm
năm 2018. Xem thêm tại &lt;a href="https://clojure.org/about/lisp"&gt;trang chủ của Clojure&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Racket&lt;/h3&gt;
&lt;p&gt;Racket từng là PLT Scheme, từng tuân theo tiêu chuẩn Scheme (S_RS) cho tới khi
nó tiến hóa thành một thứ khác rất nhiều. Racket cũng là một ngôn
ngữ hiện đại trong gia đình LISP.&lt;/p&gt;
&lt;h3&gt;Emacs Lisp&lt;/h3&gt;
&lt;p&gt;LISP dialect dùng để phát triển các tính năng cho editor Emacs - một chương
trình chỉnh sửa code lâu đời, được ưa thích trong giới lập trình viên.&lt;/p&gt;
&lt;h2&gt;Học để làm gì?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vui&lt;/li&gt;
&lt;li&gt;Mở mang suy nghĩ, thay đổi cách nghĩ - khi trên tay bạn chỉ có một cái búa
thì mọi thứ bạn thấy đều là cái đinh.&lt;/li&gt;
&lt;li&gt;Để thực hành khi đọc những cuốn sách hay nổi tiếng: SICP, HTDP&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Có để làm được không?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cái này tùy vào chuyện bạn làm gì. Nếu lập trình nhúng có thể bạn sẽ dùng 1
LISP dialect X, nhưng viết micro service tại các doanh nghiệp dùng Java,
Clojure lại là lựa chọn hấp dẫn hơn. Có thể tham khảo hướng dẫn học
Common Lisp năm 2018 &lt;a href="http://stevelosh.com/blog/2018/08/a-road-to-common-lisp/"&gt;A road to Common
Lisp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Những người học dùng LISP thường đã có công việc ổn định, không còn lo học
ngôn ngữ đầu tiên để xin việc - vậy nên chuyện có mang đi làm được hay không
không quá quan trọng ở đây. Học LISP xong, theo một cách nào đó, sẽ khiến
bạn trở thành lập trình viên Python giỏi hơn.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Loạt bài này sử dụng &lt;a href="http//call-cc.org"&gt;CHICKEN scheme&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Cài đặt&lt;/h2&gt;
&lt;p&gt;Trên trang chủ của các bản LISP đều có hướng dẫn cài đặt chi tiết.
Trên ubuntu 16.04, &lt;code&gt;guile&lt;/code&gt; có sẵn, cài CHICKEN scheme chỉ bằng một câu lệnh:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install -y chicken-bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lệnh này cài bản &lt;code&gt;Version: 4.9.X&lt;/code&gt;, cài xong bật lên để gõ code như python
interpreter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;csi&lt;/span&gt;
&lt;span class="n"&gt;CHICKEN&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Chicken&lt;/span&gt; &lt;span class="n"&gt;Team&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Felix&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Winkelmann&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stability&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;4.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;b3189b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt; &lt;span class="n"&gt;manyargs&lt;/span&gt; &lt;span class="n"&gt;dload&lt;/span&gt; &lt;span class="n"&gt;ptables&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;bootstrapped&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;

&lt;span class="c1"&gt;#;1&amp;gt; (+ 1 2 3 4 5)&lt;/span&gt;
    &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Để hỗ trợ chỉnh sửa tiện hơn, trên Ubuntu nên cài thêm &lt;code&gt;rl-wrap&lt;/code&gt; và chạy
&lt;code&gt;rl-wrap csi&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Tài liệu&lt;/h2&gt;
&lt;p&gt;Sách free online thì có 2 cuốn đã lừng danh&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mitpress.mit.edu/sites/default/files/sicp/index.html"&gt;SICP -  Structure and Interpretation of Computer Programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://htdp.org/2018-01-06/Book/"&gt;HTDP - How to Design Programs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Các bài viết&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.draketo.de/proj/py2guile/"&gt;"Nhật ký" từ Python qua Guile Scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lập trình viên Python có thể xem phần hướng dẫn cơ bản dành riêng cho Python
developer trên &lt;a href="http://wiki.call-cc.org/chicken-for-python-programmers"&gt;wiki của CHICKEN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.artima.com/weblogs/viewpost.jsp?thread=251474"&gt;Hành trình của Python dev vào thế giới Scheme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trên đây là tài liệu về Scheme, tài liệu Common Lisp cũng không thiếu,
và đều online/free - xem tại &lt;a href="http://stevelosh.com/blog/2018/08/a-road-to-common-lisp/"&gt;A road to Common
Lisp&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Emacs&lt;/h2&gt;
&lt;p&gt;Khi lập trình LISP, người dùng được khuyên sử dụng Emacs đặc biệt là
common lisp với SLIME. Đây không phải điều bắt buộc, nhưng nếu chưa từng dùng
Emacs, đây là một cơ hội tuyệt vời để trải nghiệm (vì emacs dùng Emacs Lisp).&lt;/p&gt;
&lt;p&gt;Hết phần 1.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="scheme"></category><category term="lisp"></category><category term="chicken"></category><category term="htdp"></category></entry><entry><title>Làm app giao diện đồ hoạ với Python</title><link href="http://pp.pymi.vn/article/gui/" rel="alternate"></link><published>2018-08-18T00:00:00+07:00</published><updated>2018-08-18T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-08-18:/article/gui/</id><summary type="html">&lt;p&gt;Không gì là không thể - đã dễ, lại còn đẹp&lt;/p&gt;</summary><content type="html">&lt;p&gt;Giao diện đồ hoạ (GUI - Graphic User Interface) vốn từng là một phần không thể thiếu khi nói về lập trình. Dù học ngôn ngữ lập trình nào, người ta cũng nghĩ tới chuyện "làm sao để có giao diện đồ hoạ".&lt;/p&gt;
&lt;p&gt;Thế giới thay đổi, thứ từng quan trọng của ngày hôm qua thì hôm nay chưa chắc đã cần tới. Thời đại tất cả mọi thứ đều chuyển lên web, thì web/app mobile trở thành giao diện để tương tác với người dùng, chứ không phải các phần mềm có giao diện chạy trên máy tính như trước kia.
Giờ đây người ta: nghe nhạc trên web, xem film trên web, chơi game trên web, soạn thảo văn bản trên web... khó còn ứng dụng nào không đưa lên web nữa. Vậy nên về mặt "sự nghiệp", có vẻ như bạn nên đầu tư vào kỹ năng làm web thay vì học để tạo một app trên desktop như cách đây chục năm.&lt;/p&gt;
&lt;p&gt;Dĩ nhiên, GUI không ngay lập tức biến mất, vẫn có nhu cầu sử dụng, vẫn có người dùng, vẫn có hàng tá thư viện đồ hoạ tồn tại từ lâu (và vẫn tiếp tục phát triển), vẫn có những game mà chỉ chơi được trên máy tính do yêu cầu về hiệu năng mà web không đáp ứng nổi (như Half-Life/ đế chế / đua xe ...).&lt;/p&gt;
&lt;p&gt;Python hỗ trợ không ít các thư viện làm GUI app, có thể kể tới: Qt, WxWidgets, Tkinter, &lt;a href="https://kivy.org/"&gt;Kivy (làm cả app mobile)&lt;/a&gt;... xem đầy đủ tại:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;https://docs.python.org/3/faq/gui.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;https://www.python.org/about/apps/#desktop-guis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;https://docs.python-guide.org/scenarios/gui/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Qt_(software)"&gt;Qt&lt;/a&gt; là nền tảng phát triển ứng dụng dùng trong công nghiệp, hỗ trợ mọi hệ điều hành phổ biến, và rất "xịn". Nếu có nhu cầu làm ứng dụng desktop với Python, hãy đầu tư vào Qt để có một sản phẩm đẳng cấp, không kém bất kỳ nền tảng nào khác.&lt;/p&gt;
&lt;p&gt;Tk là hệ thống thư viện đồ hoạ đơn giản, dễ dùng, chạy trên cả 3 hệ điều hành phổ biến: Windows, Ubuntu, OSX/MacOS và điều quan trọng nhất: thư viện &lt;code&gt;tkinter&lt;/code&gt; đi kèm mọi bộ cài Python, nên muốn dùng không cần phải cài đặt gì thêm.&lt;/p&gt;
&lt;p&gt;Bài viết hướng dẫn tạo một chương trình đồ hoạ sử dụng &lt;code&gt;tkinter&lt;/code&gt; với Python 3.6, thực hiện trên MacOS Sierra (10.12.6).&lt;/p&gt;
&lt;h2&gt;Khái niệm cơ bản về một chương trình giao diện đồ hoạ.&lt;/h2&gt;
&lt;p&gt;Một chương trình có giao diện đồ hoạ là một chương trình luôn chạy cho tới khi người dùng thoát chương trình. Dễ suy ra ở đây có chạy 1 vòng lặp vô hạn để luôn hiển thị giao diện (gọi là main loop). Chương trình này hoạt động dựa trên những tương tác của người dùng và phản ứng với các tương tác đó (bấm nút này thì chạy cái kia). Loại chương trình như vậy thuộc loại mô hình "Event-driven programming".&lt;/p&gt;
&lt;p&gt;Các thao tác của người dùng được gọi là các &lt;strong&gt;event&lt;/strong&gt;,
các hành động tương ứng của chương trình (các function) được gọi là các &lt;strong&gt;callback&lt;/strong&gt;, gắn vào các bộ phận giao diện. Gắn callback vào nút bấm thì khi ta bấm nút, callback sẽ được gọi.&lt;/p&gt;
&lt;p&gt;Các bộ phận giao diện như nút bấm, chữ, ô nhập ký tự ... được gọi là các &lt;strong&gt;widget&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Lập trình GUI với Tkinter&lt;/h2&gt;
&lt;p&gt;Code gõ trực tiếp trên IPython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# on Ubuntu, requires install: `sudo apt-get install -y python3-tk`&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nếu Tk hoat động trên máy bạn, ngay lập tức một cửa sổ trắng tinh sẽ hiện ra.&lt;/p&gt;
&lt;p&gt;&lt;img alt="emptygui" src="http://pp.pymi.vn/images/gui.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tk()&lt;/code&gt; tạo một cửa sổ chính  (main window), &lt;code&gt;Frame&lt;/code&gt; là một widget có khả năng chứa các widget khác. Gọi function &lt;code&gt;mainloop()&lt;/code&gt; để chạy giao diện mãi mãi cho tới khi người dùng đóng lại.&lt;/p&gt;
&lt;h3&gt;Các widget&lt;/h3&gt;
&lt;p&gt;Tkinter có sẵn 17 widget:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Button&lt;/code&gt; &lt;code&gt;Canvas&lt;/code&gt; &lt;code&gt;Checkbutton&lt;/code&gt; &lt;code&gt;Entry&lt;/code&gt; &lt;code&gt;Frame&lt;/code&gt; &lt;code&gt;Label&lt;/code&gt; &lt;code&gt;Listbox&lt;/code&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;code&gt;Menubutton&lt;/code&gt; &lt;code&gt;Message&lt;/code&gt; &lt;code&gt;Radiobutton&lt;/code&gt; &lt;code&gt;Scale&lt;/code&gt; &lt;code&gt;Scrollbar&lt;/code&gt; &lt;code&gt;Text&lt;/code&gt; &lt;code&gt;Spinbox&lt;/code&gt; &lt;code&gt;LabelFrame&lt;/code&gt; &lt;code&gt;PanedWindow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Xem ví dụ hello-world tại &lt;a href="https://docs.python.org/3/library/tkinter.html#a-simple-hello-world-program"&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sau đây ta viết một GUI app có hiển thị tiêu đề (Label), có một ô nhập địa chỉ trang web (Entry), có một nút bấm để kiểm tra status của trang web (Button).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# on Ubuntu, requires install: `sudo apt-get install -y python3-tk`&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tk&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Frame&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_widgets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_widgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PyMi.vn checker&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;entrythingy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;entrythingy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;entrythingy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;textvariable&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;entrythingy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;Key-Return&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_site&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hi_there&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hi_there&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;Check web site up/down.&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; Enter URL with http(s):&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hi_there&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_site&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hi_there&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;QUIT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_site&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://pymi.vn&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# fake useragent as cloudflare block python agent&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HEAD&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;User-Agent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;python-requests/2.23.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;response: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My checker app&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minsize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code trên:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;phần init chỉ là thủ tục&lt;/li&gt;
&lt;li&gt;tạo một label với text cần hiển thị&lt;/li&gt;
&lt;li&gt;tạo entry để người dùng nhập nội dung, gán giá trị người dùng nhập vào &lt;code&gt;self.contents&lt;/code&gt;, bind widget entry với phím Enter (trên MacOS gọi là return), và chạy method &lt;code&gt;check_site&lt;/code&gt; khi người dùng gõ enter.&lt;/li&gt;
&lt;li&gt;tạo nút bấm với dòng chữ "Check site", gọi method &lt;code&gt;check_site&lt;/code&gt; khi người dùng bấm nút&lt;/li&gt;
&lt;li&gt;tạo nút bấm "Quit" để thoát chương trình&lt;/li&gt;
&lt;li&gt;set thanh tiêu đề &lt;code&gt;title&lt;/code&gt; và kích thước cho chương trình qua &lt;code&gt;app.master&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kết quả:&lt;/p&gt;
&lt;p&gt;&lt;img alt="checker" src="http://pp.pymi.vn/images/checker.png"&gt;&lt;/p&gt;
&lt;p&gt;Danh sách đầy đủ các widget xem tại &lt;a href="https://github.com/python/cpython/blob/3.6/Lib/tkinter/__init__.py"&gt;https://github.com/python/cpython/blob/3.6/Lib/tkinter/&lt;strong&gt;init&lt;/strong&gt;.py&lt;/a&gt;  - search &lt;code&gt;(Widget&lt;/code&gt; (các subclass của class Widget).&lt;/p&gt;
&lt;p&gt;Thử các ví dụ có sẵn đi kèm với Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# on Ubuntu, requires install: sudo apt-get install -y python3-examples
python3 -m turtledemo.minimal_hanoi
python3 -m turtledemo.sorting_animate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hay xem code 1 IDE viết bằng tk: &lt;a href="https://github.com/thonny/thonny/tree/v3.3.4"&gt;thonny&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Tk nhẹ gọn, có sẵn, dễ dùng, đủ dùng khi bạn thấy đủ. Bao giờ thấy ngột ngạt, có lẽ lại chuyển sang Qt, các khái niệm lập trình giao diện dù dùng library/framework nào cũng đều tương tự nhau.&lt;/p&gt;
&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tkinter: https://docs.python.org/3/library/tkinter.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hết.
HVN @ &lt;a href=""&gt;https://pymi.vn&lt;/a&gt; and &lt;a href=""&gt;https://www.familug.org/&lt;/a&gt;&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="gui"></category><category term="tk"></category></entry><entry><title>Viết một chatbot đơn giản với Python3</title><link href="http://pp.pymi.vn/article/viet-mot-chatbot-don-gian-voi-python3/" rel="alternate"></link><published>2018-06-05T00:00:00+07:00</published><updated>2018-06-05T00:00:00+07:00</updated><author><name>tung491</name></author><id>tag:pp.pymi.vn,2018-06-05:/article/viet-mot-chatbot-don-gian-voi-python3/</id><summary type="html">&lt;p&gt;Làm FaceBook chatbot còn dễ hơn rủ em gái bàn bên đi xem phim...&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Chatbot là gì?&lt;/h2&gt;
&lt;p&gt;Trước khi thò tay vào hì hục code, ta cần hiểu chatbot là gì đã?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Chatbot"&gt;Chatbot&lt;/a&gt; là một chương trình thực hiện cuộc hội thoại qua phương pháp gửi nhận văn bản hoặc các object như hình ảnh, file, ... Chú ý Chatbot không nhất thiết là phải thông minh, là phải dùng trí tuệ nhân tạo, etc ...&lt;/p&gt;
&lt;p&gt;Có bao giờ sắp đến giao thừa hay một dịp mà bạn muốn nhắn tin cho nhiều người vào 12h đêm mà bạn không thể dậy được, hoặc bạn quá lười để làm một việc lặp đi lặp lại? Câu trả lời là viết một chatbot và hẹn giờ cho nó.&lt;/p&gt;
&lt;h2&gt;Viết chatbot&lt;/h2&gt;
&lt;p&gt;Trong bài viết này mình sử dụng 2 thư viện có sẵn trên mạng là &lt;a href="https://fbchat.readthedocs.io/en/master/"&gt;fbchat&lt;/a&gt;, &lt;a href="https://schedule.readthedocs.io/en/stable/"&gt;schedule&lt;/a&gt; do đó bạn cần tạo &lt;a href="http://pymi.vn/blog/virtualenv/"&gt;virtualenv&lt;/a&gt; trước tiên, sau đó dùng pip để cài 2 lib trên rồi tạo một file code python tùy ý, ở đây mình dùng &lt;code&gt;chatbot.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Đầu tiên, import những lib mình cần 🎉&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fbchat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fbchat.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ThreadType&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;schedule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau đó tạo một class &lt;code&gt;Bot&lt;/code&gt; kế thừa &lt;code&gt;Client&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tạo 1 function trong class &lt;code&gt;Bot&lt;/code&gt; để thực hiện gửi tin nhắn, dưới đây là code của mình:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;#Đổi tên function cho phù hợp&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;lst_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# List chứa fb id của những người bạn muốn gửi&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lst_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Chúc mừng năm mới&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                      &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ThreadType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendLocalImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/dosontung007/Pictures/wallpaper.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Chúc mừng năm mới&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ThreadType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sent success to &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và để nhận được tin nhắn từ những người gửi cho mình cho mình , ta viết function &lt;code&gt;onMessage&lt;/code&gt; trong class &lt;code&gt;Bot&lt;/code&gt; và xử lí các tin nhắn đó:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;onMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;lst_msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Chúc mừng năm mới&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;message_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lst_msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Năm mới chúc .....&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tham khảo thêm tại https://fbchat.readthedocs.io/en/master/&lt;/p&gt;
&lt;p&gt;Job thực hiện việc gửi tin nhắn trong này đó là:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Bot(os.environ['USERNAME_'], os.environ['PASSWORD']).do_something()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Class &lt;code&gt;Bot&lt;/code&gt; kế thừa &lt;code&gt;Client&lt;/code&gt;, khi tạo một Bot object, ta cần truyền 2 tham số là username và password của Facebook của bạn. Do đó bạn cần set value cho 2 var &lt;code&gt;USERNAME_&lt;/code&gt; và &lt;code&gt;PASSWORD&lt;/code&gt; bằng câu lệnh &lt;code&gt;export var=value&lt;/code&gt; trong bash trước khi chạy chương trình (vì ta không muốn ghi trực tiếp password vào file code - lộ mật khẩu nếu up lên GitHub). Lưu ý &lt;code&gt;USERNAME_&lt;/code&gt; chứ không phải &lt;code&gt;USERNAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Bây giờ còn một công việc duy nhất là hẹn giờ cho job làm việc thôi!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;job&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;USERNAME_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_msg&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;every&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;00:00&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;job_that_executes_once&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_pending&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thay đổi &lt;code&gt;00:00&lt;/code&gt; bằng thời gian mà bạn muốn hẹn giờ.&lt;/p&gt;
&lt;p&gt;Để nhận được message, ta sử dụng function &lt;code&gt;listen&lt;/code&gt; từ &lt;code&gt;Client&lt;/code&gt; , về cơ bản &lt;code&gt;listen&lt;/code&gt; khi chạy sẽ truyền các arguments vào &lt;code&gt;onMessage&lt;/code&gt; mỗi lần Facebook bạn có event mới (VD: có người nhắn cho bạn, bạn nhắn cho người khác hoặc tin nhắn trong nhóm, ...):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reply_msg&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;USERNAME_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ở function main, mình sử dụng lib threading để chạy song song 2 job là reply_msg và send_msg :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;send_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reply_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cuối cùng cũng xong 🎉.Sau tất cả, đây là một con chatbot hoàn chỉnh :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fbchat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fbchat.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ThreadType&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;schedule&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;onMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;lst_msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Chúc mừng năm mới&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;author_id&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;message_object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lst_msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Năm mới chúc .....&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                      &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ThreadType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;user_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;100012610305665&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Chúc mừng năm mới&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                      &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ThreadType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendLocalImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/dosontung007/Pictures/wallpaper.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Chúc mừng năm mới&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="n"&gt;thread_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ThreadType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sent success to &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;100012610305665&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;job_that_executes_once&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;USERNAME_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CancelJob&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reply_msg&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;USERNAME_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_msg&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;every&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;00:00&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;job_that_executes_once&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_pending&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;thread1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;send_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thread2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;reply_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;thread1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;thread2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;thread1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;thread2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bây giờ export username, password rồi chạy thôi. Và đây là thành quả:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Imgur" src="https://i.imgur.com/VldjbDi.png"&gt;&lt;/p&gt;
&lt;p&gt;Nếu bạn muốn chạy luôn mà không cần hẹn giờ thì chỉ cần xoá function &lt;code&gt;job_that_executes_once&lt;/code&gt; và thay function &lt;code&gt;send_msg&lt;/code&gt; bằng:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_msg&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;USERNAME_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;HẾT.&lt;/p&gt;
&lt;p&gt;TUNG491 at http://pymi.vn/&lt;/p&gt;</content><category term="Trang chủ"></category><category term="Python"></category><category term="chatbot"></category><category term="facebook"></category><category term="bot"></category><category term="thread"></category></entry><entry><title>Dùng .NET Framework với IronPython</title><link href="http://pp.pymi.vn/article/ironpython-addreference/" rel="alternate"></link><published>2018-06-02T00:00:00+07:00</published><updated>2018-06-04T00:00:00+07:00</updated><author><name>htlcnn</name></author><id>tag:pp.pymi.vn,2018-06-02:/article/ironpython-addreference/</id><summary type="html">&lt;p&gt;Giới thiệu cách thêm các công cụ của .NET Framework vào IronPython.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Assembly là gì&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/ms973231.aspx#assenamesp_topic4"&gt;Assembly&lt;/a&gt; (số nhiều: assemblies) là một file được tạo ra bởi quá trình compile một ứng dụng .NET. Nó có thể có đuôi &lt;code&gt;.dll&lt;/code&gt; hoặc &lt;code&gt;.exe&lt;/code&gt;. .NET Framework có sẵn rất nhiều assemblies (chính là thành phần &lt;a href="https://msdn.microsoft.com/en-us/library/gg145045.aspx"&gt;Class Library trong .NET Framework&lt;/a&gt;), cũng tương tự như Python có sẵn rất nhiều &lt;a href="https://docs.python.org/3/library/index.html"&gt;standard libraries&lt;/a&gt; vậy.&lt;/p&gt;
&lt;h2&gt;AddReference .NET Assemblies&lt;/h2&gt;
&lt;p&gt;Khi lập trình các ngôn ngữ .NET khác như C# hay VB.NET, dùng Visual Studio, muốn sử dụng các công cụ trong .NET Framework thì bạn phải thêm "Reference" vào project browser. IronPython có 1 module hỗ trợ "Add Reference" vào script là &lt;code&gt;clr&lt;/code&gt;. Các methods Add Reference trong IronPython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Sử dụng một trong các methods sau&lt;/span&gt;
&lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;
&lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReferenceByName&lt;/span&gt;
&lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReferenceByPartialName&lt;/span&gt;
&lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReferenceToFile&lt;/span&gt;
&lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReferenceToFileAndPath&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;clr.AddReference&lt;/code&gt; nhận vào 1 đối tượng &lt;a href="https://msdn.microsoft.com/en-us/library/system.reflection.assembly(v=vs.110).aspx"&gt;System.Reflection.Assembly&lt;/a&gt;, hoặc &lt;strong&gt;full name&lt;/strong&gt; của assembly (vd &lt;code&gt;clr.AddReference("System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&lt;/code&gt;), hoặc &lt;strong&gt;partial name&lt;/strong&gt; của assembly (vd &lt;code&gt;clr.AddReference("System.Drawing")&lt;/code&gt;). Khi dùng partial name, IronPython sẽ tìm file dll ở trong &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/app-domains/gac"&gt;Global Assembly Cache (GAC)&lt;/a&gt;. Mình thường dùng cách thứ 3: truyền vào partial name cho ngắn gọn.
Xem các assemblies đã add ở &lt;code&gt;clr.References&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="n"&gt;HTL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\Program Files (x86)\IronPython 2.7\ipy.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IronPython&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NET&lt;/span&gt; &lt;span class="mf"&gt;4.0.30319.42000&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;clr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;System.Drawing&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;References&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;mscorlib&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;4.0.0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Culture&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;neutral&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PublicKeyToken&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b77a5c561934e089&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;4.0.0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Culture&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;neutral&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PublicKeyToken&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b77a5c561934e089&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SQLite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Culture&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;neutral&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PublicKeyToken&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;f709c5b71&lt;/span&gt;
&lt;span class="mf"&gt;3576e1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wpf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Culture&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;neutral&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PublicKeyToken&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;f709c5b713576e1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Drawing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;4.0.0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Culture&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;neutral&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PublicKeyToken&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b03f5f7f11d50a3a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sau khi &lt;code&gt;AddReference&lt;/code&gt;, phải &lt;code&gt;import&lt;/code&gt; các namespaces có trong assemblies để sử dụng trong IronPython. Cú pháp import như bình thường:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Drawing&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Drawing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Actions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamespaceTracker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Drawing&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thắc mắc hay gặp: Mình muốn sử dụng 1 công cụ trong .NET Framework thì biết tên assembly là gì để &lt;code&gt;AddReference&lt;/code&gt;, biết namespace nào để &lt;code&gt;import&lt;/code&gt;? Trả lời với từ khóa tìm kiếm: &lt;code&gt;Tên_công_cụ msdn&lt;/code&gt; (VD &lt;a href="http://lmgtfy.com/?s=d&amp;amp;q=System+Environment+msdn"&gt;System Environment msdn&lt;/a&gt;). Dùng phần &lt;strong&gt;Assembly&lt;/strong&gt; để &lt;code&gt;AddReference&lt;/code&gt;, phần &lt;strong&gt;Namespace&lt;/strong&gt; để &lt;code&gt;import&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Khi chạy ipy.exe, IronPython đã AddReference sẵn tới mscorlib.dll và System.dll &lt;a href="http://ironpython.net/documentation/dotnet/dotnet.html#assemblies-loaded-by-default"&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;. Khi đó chỉ việc &lt;code&gt;import&lt;/code&gt; các namespaces có trong 2 assemblies này mà không phải AddRerence.&lt;/p&gt;
&lt;h2&gt;AddReference các Assemblies khác&lt;/h2&gt;
&lt;p&gt;Ngoài các assemblies có trong .NET Framework, còn có các assemblies khác đi kèm với các phần mềm cài vào Windows, hoặc assemblies được compiled từ chính IronPython. Cú pháp AddReference tương tự như trên, với lưu ý là &lt;code&gt;AddReference&lt;/code&gt; khi đó sẽ tìm assemblies trong GAC hoặc &lt;code&gt;sys.path&lt;/code&gt;. Nếu không muốn append đường dẫn tới folder chứa file .dll thì có thể dùng &lt;code&gt;AddReferenceToFileAndPath&lt;/code&gt;. Phải chạy đúng phiên bản IronPython 32bit/64bit tương ứng với &lt;a href="https://msdn.microsoft.com/en-us/library/hh264221.aspx#Target%20Platform"&gt;Target Platform&lt;/a&gt; mà file assembly được compiled.&lt;/p&gt;
&lt;p&gt;Ví dụ file &lt;code&gt;RevitAPI.dll&lt;/code&gt; được compiled với Target Platform là x64 (64-bit), nếu chạy &lt;code&gt;ipy.exe&lt;/code&gt; (32-bit) sẽ không &lt;code&gt;AddReference&lt;/code&gt; được:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="n"&gt;HTL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C:\Program Files (x86)\IronPython 2.7\ipy.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IronPython&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NET&lt;/span&gt; &lt;span class="mf"&gt;4.0.30319.42000&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;clr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\Program Files\Autodesk\Revit 2018&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RevitAPI&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="ne"&gt;IOError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IOException&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;reference&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;assembly&lt;/span&gt; &lt;span class="n"&gt;RevitAPI&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClrModule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CodeContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClrModule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CodeContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;refe&lt;/span&gt;
&lt;span class="n"&gt;rence&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClrModule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CodeContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;
&lt;span class="n"&gt;ferences&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActionCallInstruction&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterpretedFra&lt;/span&gt;
&lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterpretedFrame&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LightLambda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run4&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TRet&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt; &lt;span class="n"&gt;arg0&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T3&lt;/span&gt; &lt;span class="n"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dynamic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UpdateDelegates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UpdateAndExecute3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TRet&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;CallSite&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="n"&gt;ite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T0&lt;/span&gt; &lt;span class="n"&gt;arg0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FuncCallInstruction&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterpretedFrame&lt;/span&gt;
 &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterpretedFrame&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LightLambda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run4&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TRet&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt; &lt;span class="n"&gt;arg0&lt;/span&gt;
&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T3&lt;/span&gt; &lt;span class="n"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CallExpression&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Invoke1Instruction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterpretedF&lt;/span&gt;
&lt;span class="n"&gt;rame&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterpretedFrame&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scripting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Interpreter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LightLambda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TRet&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;T0&lt;/span&gt; &lt;span class="n"&gt;arg0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;rg1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PythonScriptCode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RunWorker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CodeContext&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compiler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PythonScriptCode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Scope&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;IronPython&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Hosting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PythonCommandLine&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;c__DisplayClass1&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RunOneInteraction&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;b__0&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mà phải dùng &lt;code&gt;ipy64.exe&lt;/code&gt; để &lt;code&gt;AddReference&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="n"&gt;HTL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;C:\Program Files (x86)\IronPython 2.7\ipy64.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IronPython&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NET&lt;/span&gt; &lt;span class="mf"&gt;4.0.30319.42000&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;clr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Program Files (x86)&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;IronPython 2.7&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Program Files (x86)&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;IronPython 2.7&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;DLLs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Program Files (x86)&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;IronPython 2.7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Program Files (x86)&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;IronPython 2.7&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;site-packages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:\Program Files\Autodesk\Revit 2018&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RevitAPI&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;Autodesk.Revit.DB&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Wall&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Wall&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Wall&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;AddReference các assemblies được compiled bằng IronPython&lt;/h2&gt;
&lt;p&gt;Nếu như bạn chưa biết, IronPython có thể compile python script thành các file assemblies (&lt;code&gt;.dll&lt;/code&gt; hoặc &lt;code&gt;.exe&lt;/code&gt;) sử dụng công cụ kèm theo là &lt;code&gt;pyc.py&lt;/code&gt; (sẽ có bài viết riêng về &lt;strong&gt;Compile python script dùng IronPython&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Một lưu ý quan trọng khi AddReference các file assemblies này là: &lt;strong&gt;phải dùng đúng phiên bản IronPython tương ứng với phiên bản đã dùng để compile ra file assembly đó thì mới AddReference được&lt;/strong&gt;. Ví dụ: file assembly được compiled bằng IronPython 2.7.3 thì khi AddReference ta phải dùng IronPython 2.7.3. Sẽ có ví dụ cụ thể trong bài &lt;strong&gt;Compile python script dùng IronPython&lt;/strong&gt;.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="ironpython"></category><category term="windows"></category><category term="dotnet"></category><category term="reference"></category><category term="dll"></category></entry><entry><title>IronPython</title><link href="http://pp.pymi.vn/article/ironpython/" rel="alternate"></link><published>2018-05-30T00:00:00+07:00</published><updated>2018-05-31T00:00:00+07:00</updated><author><name>htlcnn</name></author><id>tag:pp.pymi.vn,2018-05-30:/article/ironpython/</id><summary type="html">&lt;p&gt;Hướng dẫn cài đặt, chạy IronPython trên Windows. Ví dụ cơ bản về cách sử dụng .NET Framework và các thư viện có sẵn với IronPython.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;IronPython là gì?&lt;/h2&gt;
&lt;p&gt;Theo giới thiệu ở &lt;a href="http://ironpython.net/"&gt;trang chủ IronPython&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IronPython is an open-source implementation of the Python programming language which is tightly integrated with the .NET Framework. IronPython can use the .NET Framework and Python libraries, and other .NET languages can use Python code just as easily.&lt;/p&gt;
&lt;p&gt;Ironpython là 1 "implementation" mã nguồn mở của ngôn ngữ lập trình Python, tích hợp chặt chẽ với .NET Framework. IronPython có thể sử dụng .NET Framework và các thư viện Python, các ngôn ngữ .NET khác cũng có thể đọc và chạy code Python dễ dàng.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Cài đặt IronPython&lt;/h2&gt;
&lt;p&gt;Vào trang chủ download bộ cài đặt về (link download ở trang chủ là link github). Thời điểm viết bài, IronPython đang ở &lt;a href="https://github.com/IronLanguages/ironpython2/releases/tag/ipy-2.7.8"&gt;phiên bản 2.7.8&lt;/a&gt;. IronPython 3 đang trong quá trình phát triển, chưa có bản chính thức.&lt;/p&gt;
&lt;h2&gt;Sử dụng&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bật IronPython interpreter bằng cách chạy (bấm đúp - double click) vào file ở đường dẫn: &lt;code&gt;C:\Program Files (x86)\IronPython 2.7\ipy.exe&lt;/code&gt; hoặc &lt;code&gt;C:\Program Files (x86)\IronPython 2.7\ipy64.exe&lt;/code&gt;. Hoặc bấm nút Start -&amp;gt; gõ cmd -&amp;gt; Enter, sau khi cửa sổ Command Prompt hiện lên thì gõ đường dẫn file: &lt;code&gt;C:\Program Files (x86)\IronPython 2.7\ipy.exe&lt;/code&gt; hoặc &lt;code&gt;C:\Program Files (x86)\IronPython 2.7\ipy64.exe&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Microsoft&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="mf"&gt;6.1.7601&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Copyright&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt; &lt;span class="n"&gt;Microsoft&lt;/span&gt; &lt;span class="n"&gt;Corporation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;rights&lt;/span&gt; &lt;span class="n"&gt;reserved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="n"&gt;HTL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\Program Files (x86)\IronPython 2.7\ipy.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IronPython&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NET&lt;/span&gt; &lt;span class="mf"&gt;4.0.30319.42000&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello from IronPython&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IronPython&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Chạy 1 python script đã viết sẵn bằng cách gõ vào Command Prompt: &lt;code&gt;C:\Program Files (x86)\IronPython 2.7\ipy.exe đường_dẫn\đến\script.py&lt;/code&gt;. Ví dụ nội dung file &lt;code&gt;D:\HTL\Desktop\script.py&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello from inside a Python script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C:\Users\HTL&amp;gt;&amp;quot;c:\Program Files (x86)\IronPython 2.7\ipy.exe&amp;quot; D:\HTL\Desktop\script.py
Hello from inside a Python script
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Sử dụng .NET Framework và Python libraries&lt;/h2&gt;
&lt;p&gt;IronPython có sẵn thư viện &lt;code&gt;clr&lt;/code&gt; hỗ trợ load các .NET Assemblies (VD như các file .dll) và sử dụng các công cụ trong đó. IronPython cũng có các libraries kèm theo tương tự như CPython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="n"&gt;HTL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;c:\Program Files (x86)\IronPython 2.7\ipy.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IronPython&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.7.0.40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NET&lt;/span&gt; &lt;span class="mf"&gt;4.0.30319.42000&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;clr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;clr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddReference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;System&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SystemDirectory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Windows&lt;/span&gt;\&lt;span class="n"&gt;system32&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;3.14159265359&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Tài liệu IronPython&lt;/h2&gt;
&lt;p&gt;Tương tự câu hỏi khi học Python thì dùng tài liệu nào, đối với IronPython thì cũng lấy tài liệu ở trang chủ. IronPython Documentation có 2 phần: phần 1 chính là &lt;a href="https://docs.python.org/2.7/"&gt;Python 2.7 documentation&lt;/a&gt;, phần 2 là &lt;a href="http://ironpython.net/documentation/dotnet/"&gt;hướng dẫn tích hợp .NET với IronPython&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Học ngôn ngữ Python là có thể sử dụng trên nhiều môi trường, với nhiều implementation khác nhau (CPython, IronPython, Jython...).&lt;/li&gt;
&lt;li&gt;IronPython là sự lựa chọn hợp lý khi làm việc với môi trường Windows và các phần mềm chạy trên Windows.&lt;/li&gt;
&lt;li&gt;Alternative: Trả lời cho câu hỏi "Mình vẫn muốn dùng CPython và vẫn muốn sử dụng .NET Framework thì làm như thế nào?" -&amp;gt; Tìm hiểu &lt;a href="http://pythonnet.github.io/"&gt;pythonnet&lt;/a&gt; nhé. Tuy nhiên mình khuyến khích dùng IronPython để làm việc trên Windows và các phần mềm chạy trên Windows.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="ironpython"></category><category term="windows"></category><category term="implementation"></category><category term="dotnet"></category></entry><entry><title>Awk siêu tốc</title><link href="http://pp.pymi.vn/article/awk/" rel="alternate"></link><published>2018-05-27T00:00:00+07:00</published><updated>2018-05-27T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-05-27:/article/awk/</id><summary type="html">&lt;p&gt;học và dùng luôn trong 20 phút - yêu cầu dùng Ubuntu/OSX hay các hệ điều hành UNIX-like.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nếu bạn đã biết 1 scripting language như Python hay Perl việc học AWK sẽ có vẻ hơi
thừa/ hơi ngần ngại. Nhưng AWK - ngôn ngữ lập trình sinh ra từ những năm 1970 luôn
có chỗ dùng, và sức mạnh đáng gờm.&lt;/p&gt;
&lt;p&gt;Bài này giới thiệu các khái niệm cơ bản của ngôn ngữ lập trình AWK, một số cách dùng thông dụng, học xong có thể dùng ngay và vô cùng hữu ích với những người xử lý dữ liệu dạng cột/ bảng mà không biết Python.&lt;/p&gt;
&lt;p&gt;Các lệnh trong bài này dùng &lt;code&gt;mawk&lt;/code&gt; vì nó được biết là nhanh hơn các bản awk khác, nhưng về tính năng cơ bản là giống nhau, người đọc dùng bản nào cũng được, VD gawk&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ whatis awk
awk &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;              - pattern scanning and processing language
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Dùng trong các câu lệnh hàng ngày&lt;/h3&gt;
&lt;p&gt;AWK rất thích hợp để nhét vào 1 pipe các câu lệnh UNIX, việc mà Python vốn không sinh ra để làm&lt;/p&gt;
&lt;p&gt;Ví dụ: đếm số dòng trong file /etc/passwd&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ wc /etc/passwd
  &lt;span class="m"&gt;57&lt;/span&gt;   &lt;span class="m"&gt;95&lt;/span&gt; &lt;span class="m"&gt;3193&lt;/span&gt; /etc/passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lệnh &lt;code&gt;wc&lt;/code&gt; vốn sinh ra để đếm: dòng, số từ, số ký tự. Bạn có thể viết 1 script Python 5-7 dòng
làm chuyện này, nhưng 1 dòng? Hãy thử và nếu thành công, hãy comment!&lt;/p&gt;
&lt;p&gt;Với AWK, làm việc này không khó khăn gì. Hãy bỏ qua nếu không hiểu gì, phần giải thích sẽ theo sau&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cat /etc/passwd &lt;span class="p"&gt;|&lt;/span&gt; mawk &lt;span class="s1"&gt;&amp;#39;{ words += NF; chars += length($0) + 1;} END { print NR, words, chars}&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;57&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt; &lt;span class="m"&gt;3193&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Một pipe (&lt;code&gt;cmd1 | cmd2 | cmd3&lt;/code&gt;) thường bắt đầu bằng &lt;code&gt;cat file&lt;/code&gt;, mặc dù nó không phải cách làm tốt (tốn thêm 1 câu lệnh cat - khi mà hầu hết các câu lệnh đều hỗ trợ đầu vào là 1 file), nhưng tiện, nên ta cứ bắt đầu với cat, khi nào cần tối ưu ta sẽ bỏ nó đi. Ở đây, &lt;code&gt;mawk&lt;/code&gt; có thể nhận file để xử lý, ta viết lại:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mawk &lt;span class="s1"&gt;&amp;#39;{ words += NF; chars += length($0) + 1;} END { print NR, words, chars}&amp;#39;&lt;/span&gt; /etc/passwd
&lt;span class="m"&gt;57&lt;/span&gt; &lt;span class="m"&gt;95&lt;/span&gt; &lt;span class="m"&gt;3193&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Một ví dụ khác&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ head /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Một yêu cầu quái dị có thể xuất hiện như: hãy tính tổng các số ở cột số 3, với các câu lệnh CLI truyền thống, ta làm như sau&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;cat /etc/passwd &lt;span class="p"&gt;|&lt;/span&gt; cut -d: -f3 &lt;span class="p"&gt;|&lt;/span&gt; xargs &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%s +&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; bc
&lt;span class="m"&gt;75624&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;cut&lt;/code&gt; giúp lấy cột thứ 3, phân cách bằng dấu &lt;code&gt;:&lt;/code&gt;, dùng &lt;code&gt;printf&lt;/code&gt; để nối các số lại bằng dấu &lt;code&gt;+&lt;/code&gt;, vì thừa 1 dấu &lt;code&gt;+&lt;/code&gt; ở đuôi nên ta &lt;code&gt;echo&lt;/code&gt; thêm số 0 để cho hợp lệ rồi đưa vào lệnh &lt;code&gt;bc&lt;/code&gt; để tính.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mawk -F: &lt;span class="s1"&gt;&amp;#39;{sum += $3} END { print sum }&amp;#39;&lt;/span&gt; /etc/passwd
&lt;span class="m"&gt;75624&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tương tự &lt;code&gt;cut&lt;/code&gt;, ta dùng &lt;code&gt;-F:&lt;/code&gt; để chỉ ra sẽ dùng &lt;code&gt;:&lt;/code&gt; để phân cách cột, lấy cột số 3 &lt;code&gt;$3&lt;/code&gt;, cộng
lần lượt các giá trị vào biến &lt;code&gt;sum&lt;/code&gt; - khi ta không khai báo, AWK mặc định đó là số 0 nếu thực hiện phép toán với số. Làm như vậy với mỗi dòng (gọi là &lt;em&gt;record&lt;/em&gt; trong AWK):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{ sum += $3 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Và khi hết các dòng (đánh dấu bằng END), ta print ra kết quả&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Khó có thể đánh bại sự ngắn gọn, sạch sẽ này.&lt;/p&gt;
&lt;h2&gt;Record và field&lt;/h2&gt;
&lt;p&gt;AWK đọc text vào, mặc định sẽ cắt tại các dấu xuống dòng, tạo thành các record,
sau đó mặc định cắt tại dấu space (khoảng trắng), tạo thành các field.
Ta hoàn toàn có thể chỉ định AWK cắt ở ký tự khác.&lt;/p&gt;
&lt;h2&gt;Cấu tạo một chương trình AWK&lt;/h2&gt;
&lt;p&gt;Một chương trình AWK cấu tạo bởi các câu lệnh (statements) với cú pháp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;              pattern   { action statements }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chỉ có vậy.
Khi viết vào file thì viết mỗi câu lệnh 1 dòng, nhưng hoàn toàn có thể viết trên 1 dòng.&lt;/p&gt;
&lt;h3&gt;partern&lt;/h3&gt;
&lt;p&gt;Có nhiều partern, nhưng 3 partern phổ biến và hữu ích nhất là:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BEGIN: theo sau là hành động / câu lệnh khi chương trình bắt đầu&lt;/li&gt;
&lt;li&gt;END: theo sau là câu lệnh được chạy khi chương trình kết thúc&lt;/li&gt;
&lt;li&gt;KHÔNG GHI PATTERN: thực hiện câu lệnh này cho mỗi record&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ví dụ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s"&gt;&amp;#39;{sum += $3} END { print sum }&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ví dụ sau không có BEGIN, với mỗi record ta sẽ cộng dồn, và khi đọc hết các record, ta print ra tổng. Chú ý: dấu &lt;code&gt;\&lt;/code&gt; ở cuối dòng là cú pháp trong shell cho phép viết 1 dòng thành nhiều dòng, khi chạy AWK chỉ xem toàn bộ chương trình là 1 dòng.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pymi\npython\nfamilug&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;mawk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\&lt;/span&gt;
&lt;span class="s1"&gt; BEGIN { print &amp;quot;the begin&amp;quot; } \&lt;/span&gt;
&lt;span class="s1"&gt; { printf &amp;quot;got line: %s has length %d\n&amp;quot;, $0, length($0) }\&lt;/span&gt;
&lt;span class="s1"&gt; { print &amp;quot;done process line &amp;quot;, NR }\&lt;/span&gt;
&lt;span class="s1"&gt; END {print &amp;quot;DONE&amp;quot;}&amp;#39;&lt;/span&gt;

&lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;begin&lt;/span&gt;
&lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pymi&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="kr"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="nx"&gt;done&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;python&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="kr"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="nx"&gt;done&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nx"&gt;got&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;familug&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="kr"&gt;length&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="nx"&gt;done&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nx"&gt;DONE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;parttern tìm kiếm&lt;/h2&gt;
&lt;p&gt;parttern này giúp tìm kiếm các record có chứa một regular expression (hoặc string cố định) và xử lý record đó.&lt;/p&gt;
&lt;p&gt;Đếm số dòng chứa từ &lt;code&gt;print&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;printf print \nprintf&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;printf&lt;/span&gt; print
&lt;span class="nb"&gt;printf&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;printf print \nprintf&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -c print
&lt;span class="m"&gt;2&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;printf print \nprintf&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mawk &lt;span class="s1"&gt;&amp;#39;/print/ { count += 1 } END { print count }&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;print&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;print&lt;/code&gt;  và &lt;code&gt;printf&lt;/code&gt; là 2 output statements (câu lệnh xử lý đầu ra), không phải function nên
không sử dụng cú pháp gọi function &lt;code&gt;print(thing)&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mawk &lt;span class="s1"&gt;&amp;#39;BEGIN { print &amp;quot;hello&amp;quot; }&amp;#39;&lt;/span&gt;
hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;variable và field variable&lt;/h2&gt;
&lt;p&gt;Mỗi record chứa nhiều field, hãy tưởng tượng như 1 dòng spreadsheet/excel có nhiều ô ứng với các cột.
Các variable có sẵn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$0&lt;/code&gt; - toàn bộ 1 record (dòng) - chú ý dấu $ dùng để truy cập giá trị của field&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$1&lt;/code&gt; - field 1 (hay có thể nghĩ là cột số 1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$2&lt;/code&gt; - field 2&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$(NF - 1)&lt;/code&gt; - field trước cuối cùng&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$NF&lt;/code&gt; - field cuối cùng&lt;/li&gt;
&lt;li&gt;NF - số field&lt;/li&gt;
&lt;li&gt;NR - thứ tự của record, tăng dần sau khi xử lý xong mỗi record (số dòng hiện tại)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Khi truy cập biến, không sử dụng thêm bất cứ ký tự nào (khác với bash, bash phải thêm $varname).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1, Le Van Xe, 27, Ha Noi, 0990090090&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mawk -F, &lt;span class="s1"&gt;&amp;#39;{ print $NF}&amp;#39;&lt;/span&gt;
 &lt;span class="m"&gt;0990090090&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1, Le Van Xe, 27, Ha Noi, 0990090090&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mawk -F, &lt;span class="s1"&gt;&amp;#39;{ print $0}&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;, Le Van Xe, &lt;span class="m"&gt;27&lt;/span&gt;, Ha Noi, &lt;span class="m"&gt;0990090090&lt;/span&gt;
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1, Le Van Xe, 27, Ha Noi, 0990090090&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mawk -F, &lt;span class="s1"&gt;&amp;#39;{ print NF }&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chỉ cần nắm rõ tên các variable có sẵn này, ta đã có một tool cực mạnh để xử lý dữ liệu dạng bảng như Excel/CSV/SQL.&lt;/p&gt;
&lt;h2&gt;Các kiểu dữ liệu&lt;/h2&gt;
&lt;p&gt;AWK có string, số (chia làm float và integer), và array.
Ta không bàn tới array ở đây, vì nếu cần lập trình gì phức tạp hơn một câu lệnh AWK đơn giản, ta  có thể sử dụng Python cho sạch sẽ, gọn gàng, tiện lợi.&lt;/p&gt;
&lt;h2&gt;Control flow&lt;/h2&gt;
&lt;p&gt;Là ngôn ngữ lập trình đầy đủ, AWK có if/else/for/while như các ngôn ngữ lập trình "giống C" khác. Ví dụ đếm số chẵn và số lẻ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;1\n2\n3\n4\n20\n30&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mawk &lt;span class="s1"&gt;&amp;#39;\&lt;/span&gt;
&lt;span class="s1"&gt;{ if ($1 % 2 == 0) \&lt;/span&gt;
&lt;span class="s1"&gt;     { chan += 1 } \&lt;/span&gt;
&lt;span class="s1"&gt;  else { le += 1 } \&lt;/span&gt;
&lt;span class="s1"&gt;} \&lt;/span&gt;
&lt;span class="s1"&gt;END { print chan, le }&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Function&lt;/h2&gt;
&lt;p&gt;AWK có sẵn các funtion xử lý string, số thì đủ các phép toán, các function sin cos ..., người dùng cũng có thể định nghĩa function của họ. Xem thêm ở &lt;a href="https://www.gnu.org/software/gawk/manual/gawk.html#Functions"&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Bonus - giải bài projecteuler 1&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://projecteuler.net/problem=1"&gt;Tính tổng các số nhỏ hơn 1000 chia hết cho 3 hoặc 5&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ seq &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;999&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mawk &lt;span class="s1"&gt;&amp;#39;{ if ($1 % 3 == 0 || $i % 5 == 0) sum += $1 } END { print sum }&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;233168&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Tham khảo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://invisible-island.net/mawk/manpage/mawk.txt"&gt;mawk homepage manpage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://manpages.ubuntu.com/manpages/xenial/en/man1/mawk.1.html"&gt;ubuntu 16.04 man 1 mawk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/gawk/manual/gawk.html#Top"&gt;GNU awk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adamdrake.com/command-line-tools-can-be-235x-faster-than-your-hadoop-cluster.html"&gt;AWK on big data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hết&lt;/p&gt;
&lt;p&gt;HVN at &lt;a href="http://pymi.vn"&gt;http://pymi.vn&lt;/a&gt; and &lt;a href="https://www.familug.org"&gt;https://www.familug.org&lt;/a&gt;.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="awk"></category><category term="sysadmin"></category><category term="linux"></category><category term="csv"></category><category term="bigdata"></category></entry><entry><title>In ra màn hình số 1 - ngôn ngữ nào nhẹ nhất?</title><link href="http://pp.pymi.vn/article/dynamic/" rel="alternate"></link><published>2018-05-27T00:00:00+07:00</published><updated>2018-05-27T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-05-27:/article/dynamic/</id><summary type="html">&lt;p&gt;dash, bash, awk, perl, ruby, nodejs, python, elixir, guile - tất cả lên thớt!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nếu chỉ cần in ra mà hình số 1, ngôn ngữ lập trình nào sẽ chạy tốn ít RAM nhất?&lt;/p&gt;
&lt;p&gt;Thí nghiệm sau sẽ cho ta thấy các chương trình cần bao nhiêu RAM để chạy và in
ra số 1, kết thúc dòng bằng một dấu xuống dòng (newline &lt;code&gt;\n&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Ta dùng chương trình &lt;code&gt;/usr/bin/time&lt;/code&gt; để có cả thông số về RAM (&lt;code&gt;RSS&lt;/code&gt;) thay vì chỉ gõ time - lệnh builtin của bash.&lt;/p&gt;
&lt;h2&gt;bash4.3&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time bash -c &lt;span class="s1"&gt;&amp;#39;echo 1&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.00user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.00elapsed &lt;span class="m"&gt;100&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 3064maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+136minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;dash&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time /bin/dash -c &lt;span class="s1"&gt;&amp;#39;echo 1&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;.00user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.00elapsed ?%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 1492maxresident&lt;span class="o"&gt;)&lt;/span&gt;k
0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+67minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;mawk&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time mawk &lt;span class="s1"&gt;&amp;#39;BEGIN {print 1}&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.00user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.00elapsed &lt;span class="m"&gt;100&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 1932maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+86minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;gawk 4.1.3&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time gawk &lt;span class="s1"&gt;&amp;#39;BEGIN {print 1}&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.00user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.00elapsed &lt;span class="m"&gt;42&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 3632maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

552inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;2major+173minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Python3.5.2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time python3 -c &lt;span class="s1"&gt;&amp;#39;print(1)&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.03user &lt;span class="m"&gt;0&lt;/span&gt;.01system &lt;span class="m"&gt;0&lt;/span&gt;:00.05elapsed &lt;span class="m"&gt;98&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 9292maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+1100minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Python2.7.12&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time python2 -c &lt;span class="s1"&gt;&amp;#39;print(1)&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.01user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.01elapsed &lt;span class="m"&gt;94&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 6640maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+819minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Ruby 2.3.1&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time ruby -e &lt;span class="s1"&gt;&amp;#39;puts 1&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;.03user &lt;span class="m"&gt;0&lt;/span&gt;.01system &lt;span class="m"&gt;0&lt;/span&gt;:00.04elapsed &lt;span class="m"&gt;100&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 10336maxresident&lt;span class="o"&gt;)&lt;/span&gt;k
0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+1595minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Perl v5.22.1&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time perl -e &lt;span class="s1"&gt;&amp;#39;print &amp;quot;1\n&amp;quot;&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.00user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.00elapsed &lt;span class="m"&gt;100&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 4144maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+176minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;NodeJS 6.11.2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time node -p &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.09user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.10elapsed &lt;span class="m"&gt;100&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 24080maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+2920minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Elixir 1.6.3&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time elixir -e &lt;span class="s1"&gt;&amp;#39;IO.puts 1&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.17user &lt;span class="m"&gt;0&lt;/span&gt;.04system &lt;span class="m"&gt;0&lt;/span&gt;:00.16elapsed &lt;span class="m"&gt;137&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 29268maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

16inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;1major+7837minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Guile 2.0.11&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time guile -c &lt;span class="s1"&gt;&amp;#39;(display 1) (newline)&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="m"&gt;0&lt;/span&gt;.02user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.01elapsed &lt;span class="m"&gt;115&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 7720maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+976minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;printf 8.25 - chương trình viết bằng C&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ /usr/bin/time &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;

&lt;span class="m"&gt;10&lt;/span&gt;.00user &lt;span class="m"&gt;0&lt;/span&gt;.00system &lt;span class="m"&gt;0&lt;/span&gt;:00.00elapsed &lt;span class="m"&gt;100&lt;/span&gt;%CPU &lt;span class="o"&gt;(&lt;/span&gt;0avgtext+0avgdata 1844maxresident&lt;span class="o"&gt;)&lt;/span&gt;k

0inputs+0outputs &lt;span class="o"&gt;(&lt;/span&gt;0major+72minor&lt;span class="o"&gt;)&lt;/span&gt;pagefaults 0swaps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Làm lại toàn bộ bằng Python&lt;/h2&gt;
&lt;p&gt;Tạo một dictionary, chứa các tên ngôn ngữ - kèm với câu lệnh sẽ dùng để thử nghiệm&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shlex&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;


&lt;span class="n"&gt;programs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;bash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bash -c &amp;quot;echo 1&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;dash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dash -c &amp;quot;echo 1&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;mawk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mawk &amp;#39;BEGIN {print 1}&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gawk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gawk &amp;#39;BEGIN {print 1}&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;python2.7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;python2 -c &amp;quot;print(1)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;python3.5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;python3 -c &amp;quot;print(1)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ruby2.3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ruby -e &amp;quot;puts 1&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;node6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;node -p 1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;perl5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;perl -e &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;print &amp;#39;1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;elixir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;elixir -e &amp;quot;IO.puts 1&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;guile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;guile -c &amp;quot;(display 1) (newline)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;printf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;printf &amp;quot;1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_rss_from_stderr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(?P&amp;lt;rss&amp;gt;\d+)maxresident&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;rsses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;programs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/bin/time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;shlex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;rss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_rss_from_stderr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;languages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rsses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rsses&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RSS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;df_sorted_rss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RSS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# run in Jupyter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt;
&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fivethirtyeight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;span class="n"&gt;df_sorted_rss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RSS size in byte when print 1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Dynamic typing languages" src="http://pp.pymi.vn/images/dynamic.png"&gt;&lt;/p&gt;
&lt;h2&gt;Kết luận&lt;/h2&gt;
&lt;p&gt;Khoan vội kết luận rằng cả thế giới nên chuyển hết về dùng dash cho đỡ tốn RAM hay xa lánh Elixir vì nó chạy tới 30 MB RAM để in số 1 ra màn hình.&lt;/p&gt;
&lt;p&gt;Sử dụng đúng công cụ, cho đúng vấn đề thích hợp mới là điều quan trọng.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dash được viết ra để dùng làm &lt;code&gt;shell (sh)&lt;/code&gt; cho Ubuntu, nó cần nhẹ, dù trả giá bằng việc không nhiều tính năng, và chỉ là một shell scripting language&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.familug.org/search/label/bash"&gt;bash&lt;/a&gt; là shell được dùng phổ biến nhất thế giới&lt;/li&gt;
&lt;li&gt;awk là ngôn ngữ lập trình đã gắn liền với lịch sử của thế giới UNIX, rất tiện để tính toán dữ liệu cột / hàng. Với AWK cùng các CLI tool truyền thống, người ta có thể &lt;a href="https://adamdrake.com/command-line-tools-can-be-235x-faster-than-your-hadoop-cluster.html"&gt;giải quyết bài toán "big data" nhanh gấp 200 lần dùng Hadoop (EMR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mawk nhanh hơn gawk&lt;/li&gt;
&lt;li&gt;perl5 luôn có chỗ đứng của nó, nó vẫn ở trên máy Ubuntu dù chưa bao giờ mình chủ ý cài&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.familug.org/search/label/guile"&gt;guile&lt;/a&gt; là extension language chính thức được lựa chọn bởi GNU, nó chính là ngôn ngữ scheme được mang vào ứng dụng thực tế&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pymi.vn/"&gt;Python&lt;/a&gt; - ngôn ngữ dễ đọc, phổ biến nhất thế giới, đã đẩy ngành tính toán khoa học từ bộ môn trong phòng thí nghiệm trở thành ngành hot nhất trái đất. PS: Python khi bật lên đã dùng ~ 8MB RAM.&lt;/li&gt;
&lt;li&gt;Ruby còn dùng nhiều RAM hơn nữa, dù về mặt tính năng thường được so ngang với Python, nhưng mặt ứng dụng vào khoa học thì là vực so với trời Python.&lt;/li&gt;
&lt;li&gt;NodeJS là một JavaScript engine chuyển biến cả ngành web, cũng chưa rõ sao nó ngốn gần 25MB để bật lên, có khi đó vốn là bản chất của JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://elixir.pymi.vn/"&gt;Elixir&lt;/a&gt; không chỉ bật lên một interpreter như bash, mà đó là cả hệ thống phân tán - chạy máy ảo BEAM của Erlang, nên con số 30MB thậm chí còn là hơi ... ít.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bài này không xét các ngôn ngữ mà phải viết thành file, compile mới chạy, vì tác giả quá lười.&lt;/p&gt;
&lt;p&gt;PS: học hết đống trên ở &lt;a href="http://www.familug.org/2016/12/free-ebook.html"&gt;đây&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hết.&lt;/p&gt;
&lt;p&gt;HVN at &lt;a href="https://pymi.vn"&gt;https://pymi.vn&lt;/a&gt; and https://www.familug.org&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="tip"></category></entry><entry><title>Tôi học lập trình không phải vì lương 4000 USD</title><link href="http://pp.pymi.vn/article/toi-hoc-lap-trinh-khong-phai-vi-luong-4000-usd/" rel="alternate"></link><published>2018-05-20T00:00:00+07:00</published><updated>2018-05-20T00:00:00+07:00</updated><author><name>tung491</name></author><id>tag:pp.pymi.vn,2018-05-20:/article/toi-hoc-lap-trinh-khong-phai-vi-luong-4000-usd/</id><summary type="html">&lt;p&gt;Không ít học sinh phổ thông từng thắc mắc học môn lập trình để làm gì?
Có phải vì mức lương 4000 USD của sinh viên mới ra trường mà nhiều người hay
nhắc đến khi nói về lập trình viên.&lt;/p&gt;
&lt;p&gt;Hôm nay mình đọc một bài trên Facebook nói …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Không ít học sinh phổ thông từng thắc mắc học môn lập trình để làm gì?
Có phải vì mức lương 4000 USD của sinh viên mới ra trường mà nhiều người hay
nhắc đến khi nói về lập trình viên.&lt;/p&gt;
&lt;p&gt;Hôm nay mình đọc một bài trên Facebook nói về lí do &lt;code&gt;Tại sao bạn học lập trình?&lt;/code&gt;,
trong đó có 1 lí do được nhắc đi nhắc lại rất nhiều
đó là có một tương lai tươi sáng với mức lương khởi điểm khi ra trường 4000 USD. Bài này nói lên quan điểm của mình về
việc học lập trình để làm gì.&lt;/p&gt;
&lt;p&gt;&lt;img alt="4000USD" src="https://cdn-images-1.medium.com/max/800/1*MNkBMrAinvq65wLx9y2oIg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Mình cũng giống các bạn trong clip trên, đều là học sinh cấp 3, đều có không ít thì nhiều kiến thức về lập trình nhưng mình thấy các bạn đang có phần ảo tưởng về ngành lập trình. Mình tiếp xúc với không ít lập trình viên chuyên nghiệp, nên không còn lạ gì những nỗi khổ của ngành này: trĩ lòi, mắt mờ, đau lưng, cột sống, stress, deadline, đau dạ dày, trầm cảm... Những người ngoài chỉ nhìn vào họ những lúc họ khoe lương nhưng đâu có nhìn thấy lúc họ làm việc. Trên các loại báo xàm ke của Việt Nam và các bà hàng xóm, nghề &lt;code&gt;lập trình&lt;/code&gt; thường xuyên được nhắc đến trong các chủ đề như: "những công việc lương cao nhất", "những công việc không sợ thiếu việc làm lương cao trong 5 năm tới", blabla ... ; nhưng sự thực có phải vậy không ? Công việc lập trình cũng chỉ giống bao nhiêu ngành nghề khác là bán sức lao động và giá trị của bản thân cho công ty và xã hội thôi.&lt;/p&gt;
&lt;p&gt;Bố mình từng nói "Không có ngành nghề dễ kiếm việc hơn hay lương cao hơn ngành nghề nào.
Tất cả công việc mày được trả lương là người ta trả cho giá trị và khả năng của mày mang lại chứ không phải trả cho cái ngành nghề của mày hay cái trường mày học."&lt;/p&gt;
&lt;p&gt;Lương 4000 USD/tháng với lập trình không phải là không có nhưng những nguời như thế thuộc loại &lt;strong&gt;hiếm&lt;/strong&gt; và thường có kinh nghiệm 5–7 năm đi làm. Còn về lương một cử nhân Bách Khoa ra trường thì "4000 USD/năm tương đương khoảng 7.5 triệu đồng/tháng thì hợp lý, và cũng là cao hơn mặt bằng xã hội", "xạo chó", "ra trường 4k có cái củ cải" ... là những câu trả lời mình nhận được khi gửi bức ảnh trên và hỏi những người trong nghề và có có cả những người với mức lương &amp;gt;= 4000 USD.&lt;/p&gt;
&lt;p&gt;Quay về vấn đề chính thôi, mình học lập trình để làm gì? Đơn giản thôi, mình học để hiểu về cách của mọi thứ trên Internet đang hoại động và để nó là công cụ cho mình để thực hiện được những gì mình muốn: Làm một trang web, vẽ bản đồ trà sữa, viết một con chatbot, blabla … Với mình, ngôn ngữ trong lập trình cũng giống như Tiếng Anh nó giúp bạn giao tiếp với các lập trình viên khác và thế giới.&lt;/p&gt;
&lt;p&gt;Trong cuộc sống, chúng ta không khó để thấy những sự thật về những con người thành công trong nhiều lĩnh vực nhưng những lĩnh vực đó không hề &lt;code&gt;hot&lt;/code&gt; hay được truyền thống tung hô ví dụ: nuôi lợn, trồng rau, ... vì đơn giản họ tìm thấy được đam mê của mình với nghề và tiềm năng của nghề. Do đó chúng ta thấy được sự thành công đến từ bản thân bạn chứ không phải ngành nghề của bạn&lt;/p&gt;
&lt;p&gt;Tóm lại, đừng thần thánh hóa &lt;strong&gt;lập trình viên&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;HẾT&lt;/p&gt;
&lt;p&gt;TUNG491 at https://pymi.vn.&lt;/p&gt;</content><category term="Trang chủ"></category><category term="developer"></category><category term="lương"></category><category term="coder"></category><category term="4000USD"></category></entry><entry><title>Requests + bs4 &lt;= Requests-HTML</title><link href="http://pp.pymi.vn/article/requests-bs4-requests-html/" rel="alternate"></link><published>2018-05-09T00:00:00+07:00</published><updated>2018-05-09T00:00:00+07:00</updated><author><name>tung491</name></author><id>tag:pp.pymi.vn,2018-05-09:/article/requests-bs4-requests-html/</id><summary type="html">&lt;h2&gt;Giới thiệu&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://html.python-requests.org/"&gt;Requests-HTML&lt;/a&gt; được viết bởi Kenneth Reitz - tác giả của &lt;code&gt;requests&lt;/code&gt; nổi tiếng, với mục đích cao cả là thay thế combo huyền thoại (với pymier) requests + bs4.  Trên trang chủ, requests-html tự mô tả như sau:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This library intends to make parsing HTML (e.g. scraping the web …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;h2&gt;Giới thiệu&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://html.python-requests.org/"&gt;Requests-HTML&lt;/a&gt; được viết bởi Kenneth Reitz - tác giả của &lt;code&gt;requests&lt;/code&gt; nổi tiếng, với mục đích cao cả là thay thế combo huyền thoại (với pymier) requests + bs4.  Trên trang chủ, requests-html tự mô tả như sau:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This library intends to make parsing HTML (e.g. scraping the web) as simple and intuitive as possible&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;và đặc biệt chỉ hỗ trợ python3.&lt;/p&gt;
&lt;h2&gt;Các tính năng nổi bật của requests-html&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hỗ trợ đầy đủ JavaScript&lt;/li&gt;
&lt;li&gt;Hỗ trợ chọn thành phần của trang bằng CSS, Xpath&lt;/li&gt;
&lt;li&gt;Tự động theo chuyển trang&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Demo vài tính năng nổi bật&lt;/h2&gt;
&lt;p&gt;Cách cài đặt và sử dụng cơ bản của requests-html đã được tác giả nói rất rõ ở trang chủ do đó mính sẽ không nói lại nữa.&lt;/p&gt;
&lt;h3&gt;Render&lt;/h3&gt;
&lt;p&gt;Nhặt một đoạn văn bản mà đã được render bởi JavaScript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.familug.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pyppeteer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chromium_downloader&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;chromium&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Download&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;take&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;few&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pyppeteer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chromium_downloader&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;chromium&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pyppeteer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chromium_downloader&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;chromium&lt;/span&gt; &lt;span class="n"&gt;extracted&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dosontung007&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;pyppeteer&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chromium&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;543305&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UEFI vs BIOS - tạo USB boot cài Windows &lt;/span&gt;&lt;span class="si"&gt;{something}&lt;/span&gt;&lt;span class="s1"&gt; từ Ubuntu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;something&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;10&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Khi bạn chạy render() lần đầu, method sẽ tải về &lt;code&gt;Chromium headless&lt;/code&gt; về thư mục &lt;code&gt;$HOME&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;XPath Selector&lt;/h3&gt;
&lt;p&gt;Requests-html hỗ trợ Xpath query như Scrapy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ow"&gt;In&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;25&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;//h3//a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;Out&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;25&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;lt;Element &amp;#39;a&amp;#39; href=&amp;#39;http://www.familug.org/2018/04/uefi-vs-bios-tao-usb-boot-cai-windows.html&amp;#39;&amp;gt;,&lt;/span&gt;
&lt;span class="n"&gt; &amp;lt;Element &amp;#39;a&amp;#39; href=&amp;#39;http://www.familug.org/2018/04/alsa-pulseaudio-jack-ubuntu.html&amp;#39;&amp;gt;,&lt;/span&gt;
&lt;span class="n"&gt; &amp;lt;Element &amp;#39;a&amp;#39; href=&amp;#39;http://www.familug.org/2018/02/hello-2018.html&amp;#39;&amp;gt;,&lt;/span&gt;
&lt;span class="n"&gt; &amp;lt;Element &amp;#39;a&amp;#39; href=&amp;#39;http://www.familug.org/2017/12/dung-git-diff-voi-patch.html&amp;#39;&amp;gt;,&lt;/span&gt;
&lt;span class="n"&gt; &amp;lt;Element &amp;#39;a&amp;#39; href=&amp;#39;http://www.familug.org/2017/11/pgrep-e-grep-process.html&amp;#39;&amp;gt;,&lt;/span&gt;
&lt;span class="n"&gt; &amp;lt;Element &amp;#39;a&amp;#39; href=&amp;#39;http://www.familug.org/2017/11/vuot-qua-gioi-han-1-deploy-key-cua.html&amp;#39;&amp;gt;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="ow"&gt;In&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;26&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;//h3//a/@href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;Out&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;26&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;#39;http://www.familug.org/2018/04/uefi-vs-bios-tao-usb-boot-cai-windows.html&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;&amp;#39;http://www.familug.org/2018/04/alsa-pulseaudio-jack-ubuntu.html&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;&amp;#39;http://www.familug.org/2018/02/hello-2018.html&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;&amp;#39;http://www.familug.org/2017/12/dung-git-diff-voi-patch.html&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;&amp;#39;http://www.familug.org/2017/11/pgrep-e-grep-process.html&amp;#39;,&lt;/span&gt;
&lt;span class="n"&gt;&amp;#39;http://www.familug.org/2017/11/vuot-qua-gioi-han-1-deploy-key-cua.html&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;CSS Selector&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;In [26]: sel = &amp;#39;#Blog1 &amp;gt; div.blog-posts.hfeed &amp;gt; div:nth-child(1) &amp;gt; div &amp;gt; div &amp;gt; div &amp;gt; h3&amp;#39;

In [27]: r.html.find(sel, first=True)
Out[27]: &amp;lt;Element &amp;#39;h3&amp;#39; class=(&amp;#39;post-title&amp;#39;, &amp;#39;entry-title&amp;#39;) itemprop=&amp;#39;name&amp;#39;&amp;gt;

In [28]: r.html.find(sel, first=True).text
Out[28]: &amp;#39;UEFI vs BIOS - tạo USB boot cài Windows 10 từ Ubuntu&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;CSS selector này có thể copy từ developer tool của trình duyệt web.&lt;/p&gt;
&lt;h2&gt;Tổng kết&lt;/h2&gt;
&lt;p&gt;Requests-html là 1 thư viện tiện lợi thay thế cho combo requests + bs4, dễ dàng chuyển lên scrapy nếu cần thực hiện dự án crawling lớn, chuyên nghiệp.&lt;/p&gt;
&lt;p&gt;Chi tiết hơn xem tại: http://html.python-requests.org/.&lt;/p&gt;
&lt;p&gt;HẾT.&lt;/p&gt;
&lt;p&gt;TUNG491 at https://pymi.vn&lt;/p&gt;</content><category term="Trang chủ"></category><category term="requests-html"></category><category term="bs4"></category><category term="requests"></category><category term="python"></category><category term="crawl"></category></entry><entry><title>python -i file.py</title><link href="http://pp.pymi.vn/article/pythoni/" rel="alternate"></link><published>2018-05-04T00:00:00+07:00</published><updated>2018-05-04T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-05-04:/article/pythoni/</id><summary type="html">&lt;p&gt;chạy lệnh python với option -i&lt;/p&gt;</summary><content type="html">&lt;p&gt;Với một lập trình viên Python, quá trình sản xuất code là liên tục vòng tuần
hoàn:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;viết&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sửa&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;cho đến khi mệt nghỉ, hoặc vợ gọi.&lt;/p&gt;
&lt;p&gt;Option &lt;code&gt;-i&lt;/code&gt; mang lại một khả năng khá thú vị khi cho phép tiếp tục tương tác
với "đoạn code" sau khi đã chạy xong.&lt;/p&gt;
&lt;p&gt;Ví dụ, đoạn code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;hot_links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://pymi.vn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.familug.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://pp.pymi.vn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hot_links&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chạy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python3 get_data.py
https://pymi.vn
http://www.familug.org
http://pp.pymi.vn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giờ muốn tải từng link về thì phải mở editor lên, sửa code và chạy thử tiếp...&lt;/p&gt;
&lt;p&gt;Chạy với &lt;code&gt;-i&lt;/code&gt;, ta có:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python3 -i get_data.py
https://pymi.vn
http://www.familug.org
http://pp.pymi.vn
&amp;gt;&amp;gt;&amp;gt; locals&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;http://pp.pymi.vn&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;__doc__&amp;#39;&lt;/span&gt;: None, &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;: &lt;span class="m"&gt;15&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;: &lt;span class="m"&gt;6&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;__name__&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;__builtins__&amp;#39;&lt;/span&gt;: &amp;lt;module &lt;span class="s1"&gt;&amp;#39;builtins&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;built-in&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt;, &lt;span class="s1"&gt;&amp;#39;__spec__&amp;#39;&lt;/span&gt;: None, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;: &lt;span class="m"&gt;9&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;__cached__&amp;#39;&lt;/span&gt;: None, &lt;span class="s1"&gt;&amp;#39;__loader__&amp;#39;&lt;/span&gt;: &amp;lt;_frozen_importlib_external.SourceFileLoader object at 0x7f0bcaee7f28&amp;gt;, &lt;span class="s1"&gt;&amp;#39;hot_links&amp;#39;&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://pymi.vn&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;http://www.familug.org&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;http://pp.pymi.vn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;__package__&amp;#39;&lt;/span&gt;: None&lt;span class="o"&gt;}&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; c
&lt;span class="m"&gt;15&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; hot_links
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://pymi.vn&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;http://www.familug.org&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;http://pp.pymi.vn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tất nhiên các Pymier chẳng ai dùng python chay cả, mà là ipython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ipython -i get_data.py
Python &lt;span class="m"&gt;3&lt;/span&gt;.5.2 &lt;span class="o"&gt;(&lt;/span&gt;default, Nov &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;2016&lt;/span&gt;, &lt;span class="m"&gt;17&lt;/span&gt;:05:23&lt;span class="o"&gt;)&lt;/span&gt;
Type &lt;span class="s1"&gt;&amp;#39;copyright&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;credits&amp;#39;&lt;/span&gt; or &lt;span class="s1"&gt;&amp;#39;license&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information
IPython &lt;span class="m"&gt;6&lt;/span&gt;.2.1 -- An enhanced Interactive Python. Type &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; help.
https://pymi.vn
http://www.familug.org
http://pp.pymi.vn

In &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: hot_links
Out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://pymi.vn&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;http://www.familug.org&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;http://pp.pymi.vn&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Một option đơn giản, nhưng vô cùng tiện lợi.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-i     : inspect interactively after running script; forces a prompt even
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hết.
HVN at https://pymi.vn and http://www.familug.org&lt;/p&gt;</content><category term="Trang chủ"></category><category term="python"></category><category term="tip"></category></entry><entry><title>Blog chung của các Pymier</title><link href="http://pp.pymi.vn/article/first/" rel="alternate"></link><published>2018-05-02T00:00:00+07:00</published><updated>2018-05-02T00:00:00+07:00</updated><author><name>hvnsweeting</name></author><id>tag:pp.pymi.vn,2018-05-02:/article/first/</id><summary type="html">&lt;p&gt;Bài viết đầu tiên&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nơi các Pymier chia sẻ kiến thức cho nhau.
Để tạo một bài viết - hãy fork repo này và tạo một Pull Requests,
sau khi review xong bài viết sẽ được xuất bản.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Các bài viết về Python nên đặt trong Category &lt;code&gt;Python&lt;/code&gt;, và có tag &lt;code&gt;python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tên tác giả nên dùng GitHub username&lt;/li&gt;
&lt;li&gt;Bài viết sử dụng Markdown syntax&lt;/li&gt;
&lt;li&gt;Bài viết tuyển chọn sẽ được đưa vào category "Trang chủ"&lt;/li&gt;
&lt;/ul&gt;</content><category term="Trang chủ"></category><category term="memo"></category><category term="python"></category></entry></feed>